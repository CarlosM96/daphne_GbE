// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2020.1 (lin64) Build 2902540 Wed May 27 19:54:35 MDT 2020
// Date        : Wed Jul 14 13:49:41 2021
// Host        : daphne.linktest.lme running 64-bit Scientific Linux release 7.7 (Nitrogen)
// Command     : write_verilog -mode funcsim -nolib -force -file
//               /home/daphnelme/Desktop/DAPHNE_SGMII/tri_mode_ethernet_mac_0_ex/tri_mode_ethernet_mac_0_ex.sim/sim_1/impl/func/xsim/demo_tb_func_impl.v
// Design      : tri_mode_ethernet_mac_0_example_design
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xc7a200tfbg676-2
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

module clk_wiz_0
   (clk_200,
    clk_125,
    reset,
    locked,
    clk_in1_p,
    clk_in1_n);
  output clk_200;
  output clk_125;
  input reset;
  output locked;
  input clk_in1_p;
  input clk_in1_n;

  wire clk_125;
  wire clk_200;
  wire clk_in1_n;
  wire clk_in1_p;
  wire locked;
  wire reset;

  clk_wiz_0_clk_wiz_0_clk_wiz inst
       (.clk_125(clk_125),
        .clk_200(clk_200),
        .clk_in1_n(clk_in1_n),
        .clk_in1_p(clk_in1_p),
        .locked(locked),
        .reset(reset));
endmodule

(* ORIG_REF_NAME = "clk_wiz_0_clk_wiz" *) 
module clk_wiz_0_clk_wiz_0_clk_wiz
   (clk_200,
    clk_125,
    reset,
    locked,
    clk_in1_p,
    clk_in1_n);
  output clk_200;
  output clk_125;
  input reset;
  output locked;
  input clk_in1_p;
  input clk_in1_n;

  wire clk_125;
  wire clk_125_clk_wiz_0;
  wire clk_200;
  wire clk_200_clk_wiz_0;
  wire clk_in1_clk_wiz_0;
  wire clk_in1_n;
  wire clk_in1_p;
  wire clkfbout_buf_clk_wiz_0;
  wire clkfbout_clk_wiz_0;
  wire locked;
  wire reset;
  wire NLW_mmcm_adv_inst_CLKFBOUTB_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKFBSTOPPED_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKINSTOPPED_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT0B_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT1B_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT2_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT2B_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT3_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT3B_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT4_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT5_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT6_UNCONNECTED;
  wire NLW_mmcm_adv_inst_DRDY_UNCONNECTED;
  wire NLW_mmcm_adv_inst_PSDONE_UNCONNECTED;
  wire [15:0]NLW_mmcm_adv_inst_DO_UNCONNECTED;

  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFG clkf_buf
       (.I(clkfbout_clk_wiz_0),
        .O(clkfbout_buf_clk_wiz_0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* IFD_DELAY_VALUE = "AUTO" *) 
  IBUFDS #(
    .IOSTANDARD("DEFAULT")) 
    clkin1_ibufgds
       (.I(clk_in1_p),
        .IB(clk_in1_n),
        .O(clk_in1_clk_wiz_0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFG clkout1_buf
       (.I(clk_200_clk_wiz_0),
        .O(clk_200));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFG clkout2_buf
       (.I(clk_125_clk_wiz_0),
        .O(clk_125));
  (* BOX_TYPE = "PRIMITIVE" *) 
  MMCME2_ADV #(
    .BANDWIDTH("HIGH"),
    .CLKFBOUT_MULT_F(8.000000),
    .CLKFBOUT_PHASE(0.000000),
    .CLKFBOUT_USE_FINE_PS("FALSE"),
    .CLKIN1_PERIOD(6.400000),
    .CLKIN2_PERIOD(0.000000),
    .CLKOUT0_DIVIDE_F(6.250000),
    .CLKOUT0_DUTY_CYCLE(0.500000),
    .CLKOUT0_PHASE(0.000000),
    .CLKOUT0_USE_FINE_PS("FALSE"),
    .CLKOUT1_DIVIDE(10),
    .CLKOUT1_DUTY_CYCLE(0.500000),
    .CLKOUT1_PHASE(0.000000),
    .CLKOUT1_USE_FINE_PS("FALSE"),
    .CLKOUT2_DIVIDE(1),
    .CLKOUT2_DUTY_CYCLE(0.500000),
    .CLKOUT2_PHASE(0.000000),
    .CLKOUT2_USE_FINE_PS("FALSE"),
    .CLKOUT3_DIVIDE(1),
    .CLKOUT3_DUTY_CYCLE(0.500000),
    .CLKOUT3_PHASE(0.000000),
    .CLKOUT3_USE_FINE_PS("FALSE"),
    .CLKOUT4_CASCADE("FALSE"),
    .CLKOUT4_DIVIDE(1),
    .CLKOUT4_DUTY_CYCLE(0.500000),
    .CLKOUT4_PHASE(0.000000),
    .CLKOUT4_USE_FINE_PS("FALSE"),
    .CLKOUT5_DIVIDE(1),
    .CLKOUT5_DUTY_CYCLE(0.500000),
    .CLKOUT5_PHASE(0.000000),
    .CLKOUT5_USE_FINE_PS("FALSE"),
    .CLKOUT6_DIVIDE(1),
    .CLKOUT6_DUTY_CYCLE(0.500000),
    .CLKOUT6_PHASE(0.000000),
    .CLKOUT6_USE_FINE_PS("FALSE"),
    .COMPENSATION("ZHOLD"),
    .DIVCLK_DIVIDE(1),
    .IS_CLKINSEL_INVERTED(1'b0),
    .IS_PSEN_INVERTED(1'b0),
    .IS_PSINCDEC_INVERTED(1'b0),
    .IS_PWRDWN_INVERTED(1'b0),
    .IS_RST_INVERTED(1'b0),
    .REF_JITTER1(0.010000),
    .REF_JITTER2(0.010000),
    .SS_EN("FALSE"),
    .SS_MODE("CENTER_HIGH"),
    .SS_MOD_PERIOD(10000),
    .STARTUP_WAIT("FALSE")) 
    mmcm_adv_inst
       (.CLKFBIN(clkfbout_buf_clk_wiz_0),
        .CLKFBOUT(clkfbout_clk_wiz_0),
        .CLKFBOUTB(NLW_mmcm_adv_inst_CLKFBOUTB_UNCONNECTED),
        .CLKFBSTOPPED(NLW_mmcm_adv_inst_CLKFBSTOPPED_UNCONNECTED),
        .CLKIN1(clk_in1_clk_wiz_0),
        .CLKIN2(1'b0),
        .CLKINSEL(1'b1),
        .CLKINSTOPPED(NLW_mmcm_adv_inst_CLKINSTOPPED_UNCONNECTED),
        .CLKOUT0(clk_200_clk_wiz_0),
        .CLKOUT0B(NLW_mmcm_adv_inst_CLKOUT0B_UNCONNECTED),
        .CLKOUT1(clk_125_clk_wiz_0),
        .CLKOUT1B(NLW_mmcm_adv_inst_CLKOUT1B_UNCONNECTED),
        .CLKOUT2(NLW_mmcm_adv_inst_CLKOUT2_UNCONNECTED),
        .CLKOUT2B(NLW_mmcm_adv_inst_CLKOUT2B_UNCONNECTED),
        .CLKOUT3(NLW_mmcm_adv_inst_CLKOUT3_UNCONNECTED),
        .CLKOUT3B(NLW_mmcm_adv_inst_CLKOUT3B_UNCONNECTED),
        .CLKOUT4(NLW_mmcm_adv_inst_CLKOUT4_UNCONNECTED),
        .CLKOUT5(NLW_mmcm_adv_inst_CLKOUT5_UNCONNECTED),
        .CLKOUT6(NLW_mmcm_adv_inst_CLKOUT6_UNCONNECTED),
        .DADDR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DCLK(1'b0),
        .DEN(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DO(NLW_mmcm_adv_inst_DO_UNCONNECTED[15:0]),
        .DRDY(NLW_mmcm_adv_inst_DRDY_UNCONNECTED),
        .DWE(1'b0),
        .LOCKED(locked),
        .PSCLK(1'b0),
        .PSDONE(NLW_mmcm_adv_inst_PSDONE_UNCONNECTED),
        .PSEN(1'b0),
        .PSINCDEC(1'b0),
        .PWRDWN(1'b0),
        .RST(reset));
endmodule

(* DowngradeIPIdentifiedWarnings = "yes" *) (* EXAMPLE_SIMULATION = "0" *) 
module gig_ethernet_pcs_pma_0
   (gtrefclk_p,
    gtrefclk_n,
    gtrefclk_out,
    gtrefclk_bufg_out,
    txp,
    txn,
    rxp,
    rxn,
    resetdone,
    userclk_out,
    userclk2_out,
    rxuserclk_out,
    rxuserclk2_out,
    independent_clock_bufg,
    pma_reset_out,
    mmcm_locked_out,
    sgmii_clk_r,
    sgmii_clk_f,
    sgmii_clk_en,
    gmii_txd,
    gmii_tx_en,
    gmii_tx_er,
    gmii_rxd,
    gmii_rx_dv,
    gmii_rx_er,
    gmii_isolate,
    configuration_vector,
    speed_is_10_100,
    speed_is_100,
    status_vector,
    reset,
    signal_detect,
    gt0_pll0outclk_out,
    gt0_pll0outrefclk_out,
    gt0_pll1outclk_out,
    gt0_pll1outrefclk_out,
    gt0_pll0lock_out,
    gt0_pll0refclklost_out,
    lopt);
  input gtrefclk_p;
  input gtrefclk_n;
  output gtrefclk_out;
  output gtrefclk_bufg_out;
  output txp;
  output txn;
  input rxp;
  input rxn;
  output resetdone;
  output userclk_out;
  output userclk2_out;
  output rxuserclk_out;
  output rxuserclk2_out;
  input independent_clock_bufg;
  output pma_reset_out;
  output mmcm_locked_out;
  output sgmii_clk_r;
  output sgmii_clk_f;
  output sgmii_clk_en;
  input [7:0]gmii_txd;
  input gmii_tx_en;
  input gmii_tx_er;
  output [7:0]gmii_rxd;
  output gmii_rx_dv;
  output gmii_rx_er;
  output gmii_isolate;
  input [4:0]configuration_vector;
  input speed_is_10_100;
  input speed_is_100;
  output [15:0]status_vector;
  input reset;
  input signal_detect;
  output gt0_pll0outclk_out;
  output gt0_pll0outrefclk_out;
  output gt0_pll1outclk_out;
  output gt0_pll1outrefclk_out;
  output gt0_pll0lock_out;
  output gt0_pll0refclklost_out;
  output lopt;

  wire gmii_rx_dv;
  wire gmii_rx_er;
  wire [7:0]gmii_rxd;
  wire gmii_tx_en;
  wire gmii_tx_er;
  wire [7:0]gmii_txd;
  wire gtrefclk_n;
  wire gtrefclk_p;
  wire independent_clock_bufg;
  wire lopt;
  wire reset;
  wire resetdone;
  wire rxn;
  wire rxp;
  wire signal_detect;
  wire speed_is_100;
  wire speed_is_10_100;
  wire [15:0]status_vector;
  wire txn;
  wire txp;
  wire userclk2_out;
  wire NLW_inst_gmii_isolate_UNCONNECTED;
  wire NLW_inst_gt0_pll0lock_out_UNCONNECTED;
  wire NLW_inst_gt0_pll0outclk_out_UNCONNECTED;
  wire NLW_inst_gt0_pll0outrefclk_out_UNCONNECTED;
  wire NLW_inst_gt0_pll0refclklost_out_UNCONNECTED;
  wire NLW_inst_gt0_pll1outclk_out_UNCONNECTED;
  wire NLW_inst_gt0_pll1outrefclk_out_UNCONNECTED;
  wire NLW_inst_gtrefclk_bufg_out_UNCONNECTED;
  wire NLW_inst_gtrefclk_out_UNCONNECTED;
  wire NLW_inst_mmcm_locked_out_UNCONNECTED;
  wire NLW_inst_pma_reset_out_UNCONNECTED;
  wire NLW_inst_rxuserclk2_out_UNCONNECTED;
  wire NLW_inst_rxuserclk_out_UNCONNECTED;
  wire NLW_inst_sgmii_clk_en_UNCONNECTED;
  wire NLW_inst_sgmii_clk_f_UNCONNECTED;
  wire NLW_inst_sgmii_clk_r_UNCONNECTED;
  wire NLW_inst_userclk_out_UNCONNECTED;
  wire [4:0]NLW_inst_configuration_vector_UNCONNECTED;
  wire [15:2]NLW_inst_status_vector_UNCONNECTED;

  (* EXAMPLE_SIMULATION = "0" *) 
  (* X_CORE_INFO = "gig_ethernet_pcs_pma_v16_2_0,Vivado 2020.1" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_support inst
       (.configuration_vector(NLW_inst_configuration_vector_UNCONNECTED[4:0]),
        .gmii_isolate(NLW_inst_gmii_isolate_UNCONNECTED),
        .gmii_rx_dv(gmii_rx_dv),
        .gmii_rx_er(gmii_rx_er),
        .gmii_rxd(gmii_rxd),
        .gmii_tx_en(gmii_tx_en),
        .gmii_tx_er(gmii_tx_er),
        .gmii_txd(gmii_txd),
        .gt0_pll0lock_out(NLW_inst_gt0_pll0lock_out_UNCONNECTED),
        .gt0_pll0outclk_out(NLW_inst_gt0_pll0outclk_out_UNCONNECTED),
        .gt0_pll0outrefclk_out(NLW_inst_gt0_pll0outrefclk_out_UNCONNECTED),
        .gt0_pll0refclklost_out(NLW_inst_gt0_pll0refclklost_out_UNCONNECTED),
        .gt0_pll1outclk_out(NLW_inst_gt0_pll1outclk_out_UNCONNECTED),
        .gt0_pll1outrefclk_out(NLW_inst_gt0_pll1outrefclk_out_UNCONNECTED),
        .gtrefclk_bufg_out(NLW_inst_gtrefclk_bufg_out_UNCONNECTED),
        .gtrefclk_n(gtrefclk_n),
        .gtrefclk_out(NLW_inst_gtrefclk_out_UNCONNECTED),
        .gtrefclk_p(gtrefclk_p),
        .independent_clock_bufg(independent_clock_bufg),
        .lopt(lopt),
        .mmcm_locked_out(NLW_inst_mmcm_locked_out_UNCONNECTED),
        .pma_reset_out(NLW_inst_pma_reset_out_UNCONNECTED),
        .reset(reset),
        .resetdone(resetdone),
        .rxn(rxn),
        .rxp(rxp),
        .rxuserclk2_out(NLW_inst_rxuserclk2_out_UNCONNECTED),
        .rxuserclk_out(NLW_inst_rxuserclk_out_UNCONNECTED),
        .sgmii_clk_en(NLW_inst_sgmii_clk_en_UNCONNECTED),
        .sgmii_clk_f(NLW_inst_sgmii_clk_f_UNCONNECTED),
        .sgmii_clk_r(NLW_inst_sgmii_clk_r_UNCONNECTED),
        .signal_detect(signal_detect),
        .speed_is_100(speed_is_100),
        .speed_is_10_100(speed_is_10_100),
        .status_vector({NLW_inst_status_vector_UNCONNECTED[15:2],status_vector[1:0]}),
        .txn(txn),
        .txp(txp),
        .userclk2_out(userclk2_out),
        .userclk_out(NLW_inst_userclk_out_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_GTWIZARD" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_GTWIZARD
   (txn,
    txp,
    rxoutclk,
    txoutclk,
    TXBUFSTATUS,
    D,
    mmcm_reset,
    PLL0_RESET_reg,
    data_in,
    rx_fsm_reset_done_int_reg,
    data_sync_reg6,
    rxn,
    rxp,
    gt0_pll0outclk_out,
    gt0_pll0outrefclk_out,
    gt0_pll1outclk_out,
    gt0_pll1outrefclk_out,
    reset_out,
    wtd_rxpcsreset_in,
    rxuserclk2,
    TXPD,
    data_sync_reg6_0,
    RXPD,
    Q,
    txn_0,
    txn_1,
    txn_2,
    independent_clock_bufg,
    out,
    gt0_pll0refclklost_out,
    gt0_gtrxreset_gt_d1_reg,
    txn_3,
    data_sync_reg1,
    gt0_pll0lock_out,
    data_out);
  output txn;
  output txp;
  output rxoutclk;
  output txoutclk;
  output [0:0]TXBUFSTATUS;
  output [23:0]D;
  output mmcm_reset;
  output PLL0_RESET_reg;
  output data_in;
  output rx_fsm_reset_done_int_reg;
  input data_sync_reg6;
  input rxn;
  input rxp;
  input gt0_pll0outclk_out;
  input gt0_pll0outrefclk_out;
  input gt0_pll1outclk_out;
  input gt0_pll1outrefclk_out;
  input reset_out;
  input wtd_rxpcsreset_in;
  input rxuserclk2;
  input [0:0]TXPD;
  input data_sync_reg6_0;
  input [0:0]RXPD;
  input [15:0]Q;
  input [1:0]txn_0;
  input [1:0]txn_1;
  input [1:0]txn_2;
  input independent_clock_bufg;
  input [0:0]out;
  input gt0_pll0refclklost_out;
  input gt0_gtrxreset_gt_d1_reg;
  input txn_3;
  input data_sync_reg1;
  input gt0_pll0lock_out;
  input data_out;

  wire [23:0]D;
  wire PLL0_RESET_reg;
  wire [15:0]Q;
  wire [0:0]RXPD;
  wire [0:0]TXBUFSTATUS;
  wire [0:0]TXPD;
  wire data_in;
  wire data_out;
  wire data_sync_reg1;
  wire data_sync_reg6;
  wire data_sync_reg6_0;
  wire gt0_gtrxreset_gt_d1_reg;
  wire gt0_pll0lock_out;
  wire gt0_pll0outclk_out;
  wire gt0_pll0outrefclk_out;
  wire gt0_pll0refclklost_out;
  wire gt0_pll1outclk_out;
  wire gt0_pll1outrefclk_out;
  wire independent_clock_bufg;
  wire mmcm_reset;
  wire [0:0]out;
  wire reset_out;
  wire rx_fsm_reset_done_int_reg;
  wire rxn;
  wire rxoutclk;
  wire rxp;
  wire rxuserclk2;
  wire txn;
  wire [1:0]txn_0;
  wire [1:0]txn_1;
  wire [1:0]txn_2;
  wire txn_3;
  wire txoutclk;
  wire txp;
  wire wtd_rxpcsreset_in;

  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_GTWIZARD_init inst
       (.D(D),
        .Q(Q),
        .RXPD(RXPD),
        .TXBUFSTATUS(TXBUFSTATUS),
        .TXPD(TXPD),
        .data_in(data_in),
        .data_out(data_out),
        .data_sync_reg1(data_sync_reg1),
        .data_sync_reg6(data_sync_reg6),
        .data_sync_reg6_0(data_sync_reg6_0),
        .gt0_gtrxreset_gt_d1_reg_0(gt0_gtrxreset_gt_d1_reg),
        .gt0_pll0lock_out(gt0_pll0lock_out),
        .gt0_pll0outclk_out(gt0_pll0outclk_out),
        .gt0_pll0outrefclk_out(gt0_pll0outrefclk_out),
        .gt0_pll0refclklost_out(gt0_pll0refclklost_out),
        .gt0_pll1outclk_out(gt0_pll1outclk_out),
        .gt0_pll1outrefclk_out(gt0_pll1outrefclk_out),
        .independent_clock_bufg(independent_clock_bufg),
        .mmcm_reset(mmcm_reset),
        .out(out),
        .reset_in(PLL0_RESET_reg),
        .reset_out(reset_out),
        .rx_fsm_reset_done_int_reg(rx_fsm_reset_done_int_reg),
        .rxn(rxn),
        .rxoutclk(rxoutclk),
        .rxp(rxp),
        .rxuserclk2(rxuserclk2),
        .txn(txn),
        .txn_0(txn_0),
        .txn_1(txn_1),
        .txn_2(txn_2),
        .txn_3(txn_3),
        .txoutclk(txoutclk),
        .txp(txp),
        .wtd_rxpcsreset_in(wtd_rxpcsreset_in));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_GTWIZARD_GT" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_GTWIZARD_GT
   (txn,
    txp,
    rxoutclk,
    rxn_0,
    txoutclk,
    rxn_1,
    TXBUFSTATUS,
    D,
    data_sync_reg6,
    rxn,
    rxp,
    gt0_gttxreset_gt,
    gt0_pll0outclk_out,
    gt0_pll0outrefclk_out,
    gt0_pll1outclk_out,
    gt0_pll1outrefclk_out,
    reset_out,
    wtd_rxpcsreset_in,
    gt0_rxuserrdy_i,
    rxuserclk2,
    TXPD,
    gt0_txuserrdy_i,
    txn_0,
    RXPD,
    Q,
    txn_1,
    txn_2,
    txn_3,
    SR,
    reset_sync5);
  output txn;
  output txp;
  output rxoutclk;
  output rxn_0;
  output txoutclk;
  output rxn_1;
  output [0:0]TXBUFSTATUS;
  output [23:0]D;
  input data_sync_reg6;
  input rxn;
  input rxp;
  input gt0_gttxreset_gt;
  input gt0_pll0outclk_out;
  input gt0_pll0outrefclk_out;
  input gt0_pll1outclk_out;
  input gt0_pll1outrefclk_out;
  input reset_out;
  input wtd_rxpcsreset_in;
  input gt0_rxuserrdy_i;
  input rxuserclk2;
  input [0:0]TXPD;
  input gt0_txuserrdy_i;
  input txn_0;
  input [0:0]RXPD;
  input [15:0]Q;
  input [1:0]txn_1;
  input [1:0]txn_2;
  input [1:0]txn_3;
  input [0:0]SR;
  input reset_sync5;

  wire [23:0]D;
  wire [15:0]Q;
  wire [0:0]RXPD;
  wire [0:0]SR;
  wire [0:0]TXBUFSTATUS;
  wire [0:0]TXPD;
  wire data_sync_reg6;
  wire [4:4]drpaddr_i;
  wire gt0_gttxreset_gt;
  wire gt0_pll0outclk_out;
  wire gt0_pll0outrefclk_out;
  wire gt0_pll1outclk_out;
  wire gt0_pll1outrefclk_out;
  wire gt0_rxuserrdy_i;
  wire gt0_txuserrdy_i;
  wire gtpe2_i_n_0;
  wire gtpe2_i_n_28;
  wire gtpe2_i_n_63;
  wire gtpe2_i_n_64;
  wire gtpe2_i_n_65;
  wire gtpe2_i_n_66;
  wire gtpe2_i_n_67;
  wire gtpe2_i_n_68;
  wire gtpe2_i_n_69;
  wire gtpe2_i_n_70;
  wire gtpe2_i_n_71;
  wire gtpe2_i_n_72;
  wire gtpe2_i_n_73;
  wire gtpe2_i_n_74;
  wire gtpe2_i_n_75;
  wire gtpe2_i_n_76;
  wire gtpe2_i_n_77;
  wire gtpe2_i_n_78;
  wire gtrxreset_out;
  wire gtrxreset_seq_i_n_1;
  wire gtrxreset_seq_i_n_10;
  wire gtrxreset_seq_i_n_11;
  wire gtrxreset_seq_i_n_12;
  wire gtrxreset_seq_i_n_13;
  wire gtrxreset_seq_i_n_14;
  wire gtrxreset_seq_i_n_15;
  wire gtrxreset_seq_i_n_16;
  wire gtrxreset_seq_i_n_17;
  wire gtrxreset_seq_i_n_18;
  wire gtrxreset_seq_i_n_2;
  wire gtrxreset_seq_i_n_3;
  wire gtrxreset_seq_i_n_4;
  wire gtrxreset_seq_i_n_5;
  wire gtrxreset_seq_i_n_6;
  wire gtrxreset_seq_i_n_7;
  wire gtrxreset_seq_i_n_8;
  wire gtrxreset_seq_i_n_9;
  wire reset_out;
  wire reset_sync5;
  wire rxn;
  wire rxn_0;
  wire rxn_1;
  wire rxoutclk;
  wire rxp;
  wire rxuserclk2;
  wire txn;
  wire txn_0;
  wire [1:0]txn_1;
  wire [1:0]txn_2;
  wire [1:0]txn_3;
  wire txoutclk;
  wire txp;
  wire wtd_rxpcsreset_in;
  wire NLW_gtpe2_i_EYESCANDATAERROR_UNCONNECTED;
  wire NLW_gtpe2_i_PHYSTATUS_UNCONNECTED;
  wire NLW_gtpe2_i_PMARSVDOUT0_UNCONNECTED;
  wire NLW_gtpe2_i_PMARSVDOUT1_UNCONNECTED;
  wire NLW_gtpe2_i_RXBYTEISALIGNED_UNCONNECTED;
  wire NLW_gtpe2_i_RXBYTEREALIGN_UNCONNECTED;
  wire NLW_gtpe2_i_RXCDRLOCK_UNCONNECTED;
  wire NLW_gtpe2_i_RXCHANBONDSEQ_UNCONNECTED;
  wire NLW_gtpe2_i_RXCHANISALIGNED_UNCONNECTED;
  wire NLW_gtpe2_i_RXCHANREALIGN_UNCONNECTED;
  wire NLW_gtpe2_i_RXCOMINITDET_UNCONNECTED;
  wire NLW_gtpe2_i_RXCOMMADET_UNCONNECTED;
  wire NLW_gtpe2_i_RXCOMSASDET_UNCONNECTED;
  wire NLW_gtpe2_i_RXCOMWAKEDET_UNCONNECTED;
  wire NLW_gtpe2_i_RXDLYSRESETDONE_UNCONNECTED;
  wire NLW_gtpe2_i_RXELECIDLE_UNCONNECTED;
  wire NLW_gtpe2_i_RXHEADERVALID_UNCONNECTED;
  wire NLW_gtpe2_i_RXOSINTDONE_UNCONNECTED;
  wire NLW_gtpe2_i_RXOSINTSTARTED_UNCONNECTED;
  wire NLW_gtpe2_i_RXOSINTSTROBEDONE_UNCONNECTED;
  wire NLW_gtpe2_i_RXOSINTSTROBESTARTED_UNCONNECTED;
  wire NLW_gtpe2_i_RXOUTCLKFABRIC_UNCONNECTED;
  wire NLW_gtpe2_i_RXOUTCLKPCS_UNCONNECTED;
  wire NLW_gtpe2_i_RXPHALIGNDONE_UNCONNECTED;
  wire NLW_gtpe2_i_RXPRBSERR_UNCONNECTED;
  wire NLW_gtpe2_i_RXRATEDONE_UNCONNECTED;
  wire NLW_gtpe2_i_RXSYNCDONE_UNCONNECTED;
  wire NLW_gtpe2_i_RXSYNCOUT_UNCONNECTED;
  wire NLW_gtpe2_i_RXVALID_UNCONNECTED;
  wire NLW_gtpe2_i_TXCOMFINISH_UNCONNECTED;
  wire NLW_gtpe2_i_TXDLYSRESETDONE_UNCONNECTED;
  wire NLW_gtpe2_i_TXGEARBOXREADY_UNCONNECTED;
  wire NLW_gtpe2_i_TXOUTCLKFABRIC_UNCONNECTED;
  wire NLW_gtpe2_i_TXOUTCLKPCS_UNCONNECTED;
  wire NLW_gtpe2_i_TXPHALIGNDONE_UNCONNECTED;
  wire NLW_gtpe2_i_TXPHINITDONE_UNCONNECTED;
  wire NLW_gtpe2_i_TXPMARESETDONE_UNCONNECTED;
  wire NLW_gtpe2_i_TXRATEDONE_UNCONNECTED;
  wire NLW_gtpe2_i_TXSYNCDONE_UNCONNECTED;
  wire NLW_gtpe2_i_TXSYNCOUT_UNCONNECTED;
  wire [14:0]NLW_gtpe2_i_DMONITOROUT_UNCONNECTED;
  wire [15:0]NLW_gtpe2_i_PCSRSVDOUT_UNCONNECTED;
  wire [2:0]NLW_gtpe2_i_RXBUFSTATUS_UNCONNECTED;
  wire [3:2]NLW_gtpe2_i_RXCHARISCOMMA_UNCONNECTED;
  wire [3:2]NLW_gtpe2_i_RXCHARISK_UNCONNECTED;
  wire [3:0]NLW_gtpe2_i_RXCHBONDO_UNCONNECTED;
  wire [1:0]NLW_gtpe2_i_RXCLKCORCNT_UNCONNECTED;
  wire [31:16]NLW_gtpe2_i_RXDATA_UNCONNECTED;
  wire [1:0]NLW_gtpe2_i_RXDATAVALID_UNCONNECTED;
  wire [3:2]NLW_gtpe2_i_RXDISPERR_UNCONNECTED;
  wire [2:0]NLW_gtpe2_i_RXHEADER_UNCONNECTED;
  wire [3:2]NLW_gtpe2_i_RXNOTINTABLE_UNCONNECTED;
  wire [4:0]NLW_gtpe2_i_RXPHMONITOR_UNCONNECTED;
  wire [4:0]NLW_gtpe2_i_RXPHSLIPMONITOR_UNCONNECTED;
  wire [1:0]NLW_gtpe2_i_RXSTARTOFSEQ_UNCONNECTED;
  wire [2:0]NLW_gtpe2_i_RXSTATUS_UNCONNECTED;
  wire [0:0]NLW_gtpe2_i_TXBUFSTATUS_UNCONNECTED;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  GTPE2_CHANNEL #(
    .ACJTAG_DEBUG_MODE(1'b0),
    .ACJTAG_MODE(1'b0),
    .ACJTAG_RESET(1'b0),
    .ADAPT_CFG0(20'b00000000000000000000),
    .ALIGN_COMMA_DOUBLE("FALSE"),
    .ALIGN_COMMA_ENABLE(10'b0001111111),
    .ALIGN_COMMA_WORD(2),
    .ALIGN_MCOMMA_DET("TRUE"),
    .ALIGN_MCOMMA_VALUE(10'b1010000011),
    .ALIGN_PCOMMA_DET("TRUE"),
    .ALIGN_PCOMMA_VALUE(10'b0101111100),
    .CBCC_DATA_SOURCE_SEL("DECODED"),
    .CFOK_CFG(43'b1001001000000000000000001000000111010000000),
    .CFOK_CFG2(7'b0100000),
    .CFOK_CFG3(7'b0100000),
    .CFOK_CFG4(1'b0),
    .CFOK_CFG5(2'b00),
    .CFOK_CFG6(4'b0000),
    .CHAN_BOND_KEEP_ALIGN("FALSE"),
    .CHAN_BOND_MAX_SKEW(1),
    .CHAN_BOND_SEQ_1_1(10'b0000000000),
    .CHAN_BOND_SEQ_1_2(10'b0000000000),
    .CHAN_BOND_SEQ_1_3(10'b0000000000),
    .CHAN_BOND_SEQ_1_4(10'b0000000000),
    .CHAN_BOND_SEQ_1_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_1(10'b0000000000),
    .CHAN_BOND_SEQ_2_2(10'b0000000000),
    .CHAN_BOND_SEQ_2_3(10'b0000000000),
    .CHAN_BOND_SEQ_2_4(10'b0000000000),
    .CHAN_BOND_SEQ_2_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_USE("FALSE"),
    .CHAN_BOND_SEQ_LEN(1),
    .CLK_COMMON_SWING(1'b0),
    .CLK_CORRECT_USE("FALSE"),
    .CLK_COR_KEEP_IDLE("FALSE"),
    .CLK_COR_MAX_LAT(36),
    .CLK_COR_MIN_LAT(32),
    .CLK_COR_PRECEDENCE("TRUE"),
    .CLK_COR_REPEAT_WAIT(0),
    .CLK_COR_SEQ_1_1(10'b0100000000),
    .CLK_COR_SEQ_1_2(10'b0000000000),
    .CLK_COR_SEQ_1_3(10'b0000000000),
    .CLK_COR_SEQ_1_4(10'b0000000000),
    .CLK_COR_SEQ_1_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_1(10'b0100000000),
    .CLK_COR_SEQ_2_2(10'b0000000000),
    .CLK_COR_SEQ_2_3(10'b0000000000),
    .CLK_COR_SEQ_2_4(10'b0000000000),
    .CLK_COR_SEQ_2_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_USE("FALSE"),
    .CLK_COR_SEQ_LEN(1),
    .DEC_MCOMMA_DETECT("TRUE"),
    .DEC_PCOMMA_DETECT("TRUE"),
    .DEC_VALID_COMMA_ONLY("FALSE"),
    .DMONITOR_CFG(24'h000A00),
    .ES_CLK_PHASE_SEL(1'b0),
    .ES_CONTROL(6'b000000),
    .ES_ERRDET_EN("FALSE"),
    .ES_EYE_SCAN_EN("FALSE"),
    .ES_HORZ_OFFSET(12'h010),
    .ES_PMA_CFG(10'b0000000000),
    .ES_PRESCALE(5'b00000),
    .ES_QUALIFIER(80'h00000000000000000000),
    .ES_QUAL_MASK(80'h00000000000000000000),
    .ES_SDATA_MASK(80'h00000000000000000000),
    .ES_VERT_OFFSET(9'b000000000),
    .FTS_DESKEW_SEQ_ENABLE(4'b1111),
    .FTS_LANE_DESKEW_CFG(4'b1111),
    .FTS_LANE_DESKEW_EN("FALSE"),
    .GEARBOX_MODE(3'b000),
    .IS_CLKRSVD0_INVERTED(1'b0),
    .IS_CLKRSVD1_INVERTED(1'b0),
    .IS_DMONITORCLK_INVERTED(1'b0),
    .IS_DRPCLK_INVERTED(1'b0),
    .IS_RXUSRCLK2_INVERTED(1'b0),
    .IS_RXUSRCLK_INVERTED(1'b0),
    .IS_SIGVALIDCLK_INVERTED(1'b0),
    .IS_TXPHDLYTSTCLK_INVERTED(1'b0),
    .IS_TXUSRCLK2_INVERTED(1'b0),
    .IS_TXUSRCLK_INVERTED(1'b0),
    .LOOPBACK_CFG(1'b0),
    .OUTREFCLK_SEL_INV(2'b11),
    .PCS_PCIE_EN("FALSE"),
    .PCS_RSVD_ATTR(48'h000000000000),
    .PD_TRANS_TIME_FROM_P2(12'h03C),
    .PD_TRANS_TIME_NONE_P2(8'h19),
    .PD_TRANS_TIME_TO_P2(8'h64),
    .PMA_LOOPBACK_CFG(1'b0),
    .PMA_RSV(32'h00000333),
    .PMA_RSV2(32'h00002040),
    .PMA_RSV3(2'b00),
    .PMA_RSV4(4'b0000),
    .PMA_RSV5(1'b0),
    .PMA_RSV6(1'b0),
    .PMA_RSV7(1'b0),
    .RXBUFRESET_TIME(5'b00001),
    .RXBUF_ADDR_MODE("FAST"),
    .RXBUF_EIDLE_HI_CNT(4'b1000),
    .RXBUF_EIDLE_LO_CNT(4'b0000),
    .RXBUF_EN("TRUE"),
    .RXBUF_RESET_ON_CB_CHANGE("TRUE"),
    .RXBUF_RESET_ON_COMMAALIGN("FALSE"),
    .RXBUF_RESET_ON_EIDLE("FALSE"),
    .RXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .RXBUF_THRESH_OVFLW(61),
    .RXBUF_THRESH_OVRD("FALSE"),
    .RXBUF_THRESH_UNDFLW(8),
    .RXCDRFREQRESET_TIME(5'b00001),
    .RXCDRPHRESET_TIME(5'b00001),
    .RXCDR_CFG(83'h0000107FE106001041010),
    .RXCDR_FR_RESET_ON_EIDLE(1'b0),
    .RXCDR_HOLD_DURING_EIDLE(1'b0),
    .RXCDR_LOCK_CFG(6'b001001),
    .RXCDR_PH_RESET_ON_EIDLE(1'b0),
    .RXDLY_CFG(16'h001F),
    .RXDLY_LCFG(9'h030),
    .RXDLY_TAP_CFG(16'h0000),
    .RXGEARBOX_EN("FALSE"),
    .RXISCANRESET_TIME(5'b00001),
    .RXLPMRESET_TIME(7'b0001111),
    .RXLPM_BIAS_STARTUP_DISABLE(1'b0),
    .RXLPM_CFG(4'b0110),
    .RXLPM_CFG1(1'b0),
    .RXLPM_CM_CFG(1'b0),
    .RXLPM_GC_CFG(9'b111100010),
    .RXLPM_GC_CFG2(3'b001),
    .RXLPM_HF_CFG(14'b00001111110000),
    .RXLPM_HF_CFG2(5'b01010),
    .RXLPM_HF_CFG3(4'b0000),
    .RXLPM_HOLD_DURING_EIDLE(1'b0),
    .RXLPM_INCM_CFG(1'b1),
    .RXLPM_IPCM_CFG(1'b0),
    .RXLPM_LF_CFG(18'b000000001111110000),
    .RXLPM_LF_CFG2(5'b01010),
    .RXLPM_OSINT_CFG(3'b100),
    .RXOOB_CFG(7'b0000110),
    .RXOOB_CLK_CFG("PMA"),
    .RXOSCALRESET_TIME(5'b00011),
    .RXOSCALRESET_TIMEOUT(5'b00000),
    .RXOUT_DIV(4),
    .RXPCSRESET_TIME(5'b00001),
    .RXPHDLY_CFG(24'h084020),
    .RXPH_CFG(24'hC00002),
    .RXPH_MONITOR_SEL(5'b00000),
    .RXPI_CFG0(3'b000),
    .RXPI_CFG1(1'b1),
    .RXPI_CFG2(1'b1),
    .RXPMARESET_TIME(5'b00011),
    .RXPRBS_ERR_LOOPBACK(1'b0),
    .RXSLIDE_AUTO_WAIT(7),
    .RXSLIDE_MODE("OFF"),
    .RXSYNC_MULTILANE(1'b0),
    .RXSYNC_OVRD(1'b0),
    .RXSYNC_SKIP_DA(1'b0),
    .RX_BIAS_CFG(16'b0000111100110011),
    .RX_BUFFER_CFG(6'b000000),
    .RX_CLK25_DIV(5),
    .RX_CLKMUX_EN(1'b1),
    .RX_CM_SEL(2'b11),
    .RX_CM_TRIM(4'b1010),
    .RX_DATA_WIDTH(20),
    .RX_DDI_SEL(6'b000000),
    .RX_DEBUG_CFG(14'b00000000000000),
    .RX_DEFER_RESET_BUF_EN("TRUE"),
    .RX_DISPERR_SEQ_MATCH("TRUE"),
    .RX_OS_CFG(13'b0000010000000),
    .RX_SIG_VALID_DLY(10),
    .RX_XCLK_SEL("RXREC"),
    .SAS_MAX_COM(64),
    .SAS_MIN_COM(36),
    .SATA_BURST_SEQ_LEN(4'b0101),
    .SATA_BURST_VAL(3'b100),
    .SATA_EIDLE_VAL(3'b100),
    .SATA_MAX_BURST(8),
    .SATA_MAX_INIT(21),
    .SATA_MAX_WAKE(7),
    .SATA_MIN_BURST(4),
    .SATA_MIN_INIT(12),
    .SATA_MIN_WAKE(4),
    .SATA_PLL_CFG("VCO_3000MHZ"),
    .SHOW_REALIGN_COMMA("TRUE"),
    .SIM_RECEIVER_DETECT_PASS("TRUE"),
    .SIM_RESET_SPEEDUP("FALSE"),
    .SIM_TX_EIDLE_DRIVE_LEVEL("X"),
    .SIM_VERSION("2.0"),
    .TERM_RCAL_CFG(15'b100001000010000),
    .TERM_RCAL_OVRD(3'b000),
    .TRANS_TIME_RATE(8'h0E),
    .TST_RSV(32'h00000000),
    .TXBUF_EN("TRUE"),
    .TXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .TXDLY_CFG(16'h001F),
    .TXDLY_LCFG(9'h030),
    .TXDLY_TAP_CFG(16'h0000),
    .TXGEARBOX_EN("FALSE"),
    .TXOOB_CFG(1'b0),
    .TXOUT_DIV(4),
    .TXPCSRESET_TIME(5'b00001),
    .TXPHDLY_CFG(24'h084020),
    .TXPH_CFG(16'h0780),
    .TXPH_MONITOR_SEL(5'b00000),
    .TXPI_CFG0(2'b00),
    .TXPI_CFG1(2'b00),
    .TXPI_CFG2(2'b00),
    .TXPI_CFG3(1'b0),
    .TXPI_CFG4(1'b0),
    .TXPI_CFG5(3'b000),
    .TXPI_GREY_SEL(1'b0),
    .TXPI_INVSTROBE_SEL(1'b0),
    .TXPI_PPMCLK_SEL("TXUSRCLK2"),
    .TXPI_PPM_CFG(8'b00000000),
    .TXPI_SYNFREQ_PPM(3'b001),
    .TXPMARESET_TIME(5'b00001),
    .TXSYNC_MULTILANE(1'b0),
    .TXSYNC_OVRD(1'b0),
    .TXSYNC_SKIP_DA(1'b0),
    .TX_CLK25_DIV(5),
    .TX_CLKMUX_EN(1'b1),
    .TX_DATA_WIDTH(20),
    .TX_DEEMPH0(6'b000000),
    .TX_DEEMPH1(6'b000000),
    .TX_DRIVE_MODE("DIRECT"),
    .TX_EIDLE_ASSERT_DELAY(3'b110),
    .TX_EIDLE_DEASSERT_DELAY(3'b100),
    .TX_LOOPBACK_DRIVE_HIZ("FALSE"),
    .TX_MAINCURSOR_SEL(1'b0),
    .TX_MARGIN_FULL_0(7'b1001110),
    .TX_MARGIN_FULL_1(7'b1001001),
    .TX_MARGIN_FULL_2(7'b1000101),
    .TX_MARGIN_FULL_3(7'b1000010),
    .TX_MARGIN_FULL_4(7'b1000000),
    .TX_MARGIN_LOW_0(7'b1000110),
    .TX_MARGIN_LOW_1(7'b1000100),
    .TX_MARGIN_LOW_2(7'b1000010),
    .TX_MARGIN_LOW_3(7'b1000000),
    .TX_MARGIN_LOW_4(7'b1000000),
    .TX_PREDRIVER_MODE(1'b0),
    .TX_RXDETECT_CFG(14'h1832),
    .TX_RXDETECT_REF(3'b100),
    .TX_XCLK_SEL("TXOUT"),
    .UCODEER_CLR(1'b0),
    .USE_PCS_CLK_PHASE_SEL(1'b0)) 
    gtpe2_i
       (.CFGRESET(1'b0),
        .CLKRSVD0(1'b0),
        .CLKRSVD1(1'b0),
        .DMONFIFORESET(1'b0),
        .DMONITORCLK(1'b0),
        .DMONITOROUT(NLW_gtpe2_i_DMONITOROUT_UNCONNECTED[14:0]),
        .DRPADDR({1'b0,1'b0,1'b0,1'b0,drpaddr_i,1'b0,1'b0,1'b0,drpaddr_i}),
        .DRPCLK(data_sync_reg6),
        .DRPDI({gtrxreset_seq_i_n_2,gtrxreset_seq_i_n_3,gtrxreset_seq_i_n_4,gtrxreset_seq_i_n_5,gtrxreset_seq_i_n_6,gtrxreset_seq_i_n_7,gtrxreset_seq_i_n_8,gtrxreset_seq_i_n_9,gtrxreset_seq_i_n_10,gtrxreset_seq_i_n_11,gtrxreset_seq_i_n_12,gtrxreset_seq_i_n_13,gtrxreset_seq_i_n_14,gtrxreset_seq_i_n_15,gtrxreset_seq_i_n_16,gtrxreset_seq_i_n_17}),
        .DRPDO({gtpe2_i_n_63,gtpe2_i_n_64,gtpe2_i_n_65,gtpe2_i_n_66,gtpe2_i_n_67,gtpe2_i_n_68,gtpe2_i_n_69,gtpe2_i_n_70,gtpe2_i_n_71,gtpe2_i_n_72,gtpe2_i_n_73,gtpe2_i_n_74,gtpe2_i_n_75,gtpe2_i_n_76,gtpe2_i_n_77,gtpe2_i_n_78}),
        .DRPEN(gtrxreset_seq_i_n_18),
        .DRPRDY(gtpe2_i_n_0),
        .DRPWE(gtrxreset_seq_i_n_1),
        .EYESCANDATAERROR(NLW_gtpe2_i_EYESCANDATAERROR_UNCONNECTED),
        .EYESCANMODE(1'b0),
        .EYESCANRESET(1'b0),
        .EYESCANTRIGGER(1'b0),
        .GTPRXN(rxn),
        .GTPRXP(rxp),
        .GTPTXN(txn),
        .GTPTXP(txp),
        .GTRESETSEL(1'b0),
        .GTRSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .GTRXRESET(gtrxreset_out),
        .GTTXRESET(gt0_gttxreset_gt),
        .LOOPBACK({1'b0,1'b0,1'b0}),
        .PCSRSVDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCSRSVDOUT(NLW_gtpe2_i_PCSRSVDOUT_UNCONNECTED[15:0]),
        .PHYSTATUS(NLW_gtpe2_i_PHYSTATUS_UNCONNECTED),
        .PLL0CLK(gt0_pll0outclk_out),
        .PLL0REFCLK(gt0_pll0outrefclk_out),
        .PLL1CLK(gt0_pll1outclk_out),
        .PLL1REFCLK(gt0_pll1outrefclk_out),
        .PMARSVDIN0(1'b0),
        .PMARSVDIN1(1'b0),
        .PMARSVDIN2(1'b0),
        .PMARSVDIN3(1'b0),
        .PMARSVDIN4(1'b0),
        .PMARSVDOUT0(NLW_gtpe2_i_PMARSVDOUT0_UNCONNECTED),
        .PMARSVDOUT1(NLW_gtpe2_i_PMARSVDOUT1_UNCONNECTED),
        .RESETOVRD(1'b0),
        .RX8B10BEN(1'b1),
        .RXADAPTSELTEST({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXBUFRESET(1'b0),
        .RXBUFSTATUS(NLW_gtpe2_i_RXBUFSTATUS_UNCONNECTED[2:0]),
        .RXBYTEISALIGNED(NLW_gtpe2_i_RXBYTEISALIGNED_UNCONNECTED),
        .RXBYTEREALIGN(NLW_gtpe2_i_RXBYTEREALIGN_UNCONNECTED),
        .RXCDRFREQRESET(1'b0),
        .RXCDRHOLD(1'b0),
        .RXCDRLOCK(NLW_gtpe2_i_RXCDRLOCK_UNCONNECTED),
        .RXCDROVRDEN(1'b0),
        .RXCDRRESET(1'b0),
        .RXCDRRESETRSV(1'b0),
        .RXCHANBONDSEQ(NLW_gtpe2_i_RXCHANBONDSEQ_UNCONNECTED),
        .RXCHANISALIGNED(NLW_gtpe2_i_RXCHANISALIGNED_UNCONNECTED),
        .RXCHANREALIGN(NLW_gtpe2_i_RXCHANREALIGN_UNCONNECTED),
        .RXCHARISCOMMA({NLW_gtpe2_i_RXCHARISCOMMA_UNCONNECTED[3:2],D[11],D[23]}),
        .RXCHARISK({NLW_gtpe2_i_RXCHARISK_UNCONNECTED[3:2],D[10],D[22]}),
        .RXCHBONDEN(1'b0),
        .RXCHBONDI({1'b0,1'b0,1'b0,1'b0}),
        .RXCHBONDLEVEL({1'b0,1'b0,1'b0}),
        .RXCHBONDMASTER(1'b0),
        .RXCHBONDO(NLW_gtpe2_i_RXCHBONDO_UNCONNECTED[3:0]),
        .RXCHBONDSLAVE(1'b0),
        .RXCLKCORCNT(NLW_gtpe2_i_RXCLKCORCNT_UNCONNECTED[1:0]),
        .RXCOMINITDET(NLW_gtpe2_i_RXCOMINITDET_UNCONNECTED),
        .RXCOMMADET(NLW_gtpe2_i_RXCOMMADET_UNCONNECTED),
        .RXCOMMADETEN(1'b1),
        .RXCOMSASDET(NLW_gtpe2_i_RXCOMSASDET_UNCONNECTED),
        .RXCOMWAKEDET(NLW_gtpe2_i_RXCOMWAKEDET_UNCONNECTED),
        .RXDATA({NLW_gtpe2_i_RXDATA_UNCONNECTED[31:16],D[7:0],D[19:12]}),
        .RXDATAVALID(NLW_gtpe2_i_RXDATAVALID_UNCONNECTED[1:0]),
        .RXDDIEN(1'b0),
        .RXDFEXYDEN(1'b0),
        .RXDISPERR({NLW_gtpe2_i_RXDISPERR_UNCONNECTED[3:2],D[9],D[21]}),
        .RXDLYBYPASS(1'b1),
        .RXDLYEN(1'b0),
        .RXDLYOVRDEN(1'b0),
        .RXDLYSRESET(1'b0),
        .RXDLYSRESETDONE(NLW_gtpe2_i_RXDLYSRESETDONE_UNCONNECTED),
        .RXELECIDLE(NLW_gtpe2_i_RXELECIDLE_UNCONNECTED),
        .RXELECIDLEMODE({1'b1,1'b1}),
        .RXGEARBOXSLIP(1'b0),
        .RXHEADER(NLW_gtpe2_i_RXHEADER_UNCONNECTED[2:0]),
        .RXHEADERVALID(NLW_gtpe2_i_RXHEADERVALID_UNCONNECTED),
        .RXLPMHFHOLD(1'b0),
        .RXLPMHFOVRDEN(1'b0),
        .RXLPMLFHOLD(1'b0),
        .RXLPMLFOVRDEN(1'b0),
        .RXLPMOSINTNTRLEN(1'b0),
        .RXLPMRESET(1'b0),
        .RXMCOMMAALIGNEN(reset_out),
        .RXNOTINTABLE({NLW_gtpe2_i_RXNOTINTABLE_UNCONNECTED[3:2],D[8],D[20]}),
        .RXOOBRESET(1'b0),
        .RXOSCALRESET(1'b0),
        .RXOSHOLD(1'b0),
        .RXOSINTCFG({1'b0,1'b0,1'b1,1'b0}),
        .RXOSINTDONE(NLW_gtpe2_i_RXOSINTDONE_UNCONNECTED),
        .RXOSINTEN(1'b1),
        .RXOSINTHOLD(1'b0),
        .RXOSINTID0({1'b0,1'b0,1'b0,1'b0}),
        .RXOSINTNTRLEN(1'b0),
        .RXOSINTOVRDEN(1'b0),
        .RXOSINTPD(1'b0),
        .RXOSINTSTARTED(NLW_gtpe2_i_RXOSINTSTARTED_UNCONNECTED),
        .RXOSINTSTROBE(1'b0),
        .RXOSINTSTROBEDONE(NLW_gtpe2_i_RXOSINTSTROBEDONE_UNCONNECTED),
        .RXOSINTSTROBESTARTED(NLW_gtpe2_i_RXOSINTSTROBESTARTED_UNCONNECTED),
        .RXOSINTTESTOVRDEN(1'b0),
        .RXOSOVRDEN(1'b0),
        .RXOUTCLK(rxoutclk),
        .RXOUTCLKFABRIC(NLW_gtpe2_i_RXOUTCLKFABRIC_UNCONNECTED),
        .RXOUTCLKPCS(NLW_gtpe2_i_RXOUTCLKPCS_UNCONNECTED),
        .RXOUTCLKSEL({1'b0,1'b1,1'b0}),
        .RXPCOMMAALIGNEN(reset_out),
        .RXPCSRESET(wtd_rxpcsreset_in),
        .RXPD({RXPD,RXPD}),
        .RXPHALIGN(1'b0),
        .RXPHALIGNDONE(NLW_gtpe2_i_RXPHALIGNDONE_UNCONNECTED),
        .RXPHALIGNEN(1'b0),
        .RXPHDLYPD(1'b0),
        .RXPHDLYRESET(1'b0),
        .RXPHMONITOR(NLW_gtpe2_i_RXPHMONITOR_UNCONNECTED[4:0]),
        .RXPHOVRDEN(1'b0),
        .RXPHSLIPMONITOR(NLW_gtpe2_i_RXPHSLIPMONITOR_UNCONNECTED[4:0]),
        .RXPMARESET(1'b0),
        .RXPMARESETDONE(gtpe2_i_n_28),
        .RXPOLARITY(1'b0),
        .RXPRBSCNTRESET(1'b0),
        .RXPRBSERR(NLW_gtpe2_i_RXPRBSERR_UNCONNECTED),
        .RXPRBSSEL({1'b0,1'b0,1'b0}),
        .RXRATE({1'b0,1'b0,1'b0}),
        .RXRATEDONE(NLW_gtpe2_i_RXRATEDONE_UNCONNECTED),
        .RXRATEMODE(1'b0),
        .RXRESETDONE(rxn_0),
        .RXSLIDE(1'b0),
        .RXSTARTOFSEQ(NLW_gtpe2_i_RXSTARTOFSEQ_UNCONNECTED[1:0]),
        .RXSTATUS(NLW_gtpe2_i_RXSTATUS_UNCONNECTED[2:0]),
        .RXSYNCALLIN(1'b0),
        .RXSYNCDONE(NLW_gtpe2_i_RXSYNCDONE_UNCONNECTED),
        .RXSYNCIN(1'b0),
        .RXSYNCMODE(1'b0),
        .RXSYNCOUT(NLW_gtpe2_i_RXSYNCOUT_UNCONNECTED),
        .RXSYSCLKSEL({1'b0,1'b0}),
        .RXUSERRDY(gt0_rxuserrdy_i),
        .RXUSRCLK(rxuserclk2),
        .RXUSRCLK2(rxuserclk2),
        .RXVALID(NLW_gtpe2_i_RXVALID_UNCONNECTED),
        .SETERRSTATUS(1'b0),
        .SIGVALIDCLK(1'b0),
        .TSTIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .TX8B10BBYPASS({1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BEN(1'b1),
        .TXBUFDIFFCTRL({1'b1,1'b0,1'b0}),
        .TXBUFSTATUS({TXBUFSTATUS,NLW_gtpe2_i_TXBUFSTATUS_UNCONNECTED[0]}),
        .TXCHARDISPMODE({1'b0,1'b0,txn_1}),
        .TXCHARDISPVAL({1'b0,1'b0,txn_2}),
        .TXCHARISK({1'b0,1'b0,txn_3}),
        .TXCOMFINISH(NLW_gtpe2_i_TXCOMFINISH_UNCONNECTED),
        .TXCOMINIT(1'b0),
        .TXCOMSAS(1'b0),
        .TXCOMWAKE(1'b0),
        .TXDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,Q}),
        .TXDEEMPH(1'b0),
        .TXDETECTRX(1'b0),
        .TXDIFFCTRL({1'b1,1'b0,1'b0,1'b0}),
        .TXDIFFPD(1'b0),
        .TXDLYBYPASS(1'b1),
        .TXDLYEN(1'b0),
        .TXDLYHOLD(1'b0),
        .TXDLYOVRDEN(1'b0),
        .TXDLYSRESET(1'b0),
        .TXDLYSRESETDONE(NLW_gtpe2_i_TXDLYSRESETDONE_UNCONNECTED),
        .TXDLYUPDOWN(1'b0),
        .TXELECIDLE(TXPD),
        .TXGEARBOXREADY(NLW_gtpe2_i_TXGEARBOXREADY_UNCONNECTED),
        .TXHEADER({1'b0,1'b0,1'b0}),
        .TXINHIBIT(1'b0),
        .TXMAINCURSOR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXMARGIN({1'b0,1'b0,1'b0}),
        .TXOUTCLK(txoutclk),
        .TXOUTCLKFABRIC(NLW_gtpe2_i_TXOUTCLKFABRIC_UNCONNECTED),
        .TXOUTCLKPCS(NLW_gtpe2_i_TXOUTCLKPCS_UNCONNECTED),
        .TXOUTCLKSEL({1'b1,1'b0,1'b0}),
        .TXPCSRESET(1'b0),
        .TXPD({TXPD,TXPD}),
        .TXPDELECIDLEMODE(1'b0),
        .TXPHALIGN(1'b0),
        .TXPHALIGNDONE(NLW_gtpe2_i_TXPHALIGNDONE_UNCONNECTED),
        .TXPHALIGNEN(1'b0),
        .TXPHDLYPD(1'b0),
        .TXPHDLYRESET(1'b0),
        .TXPHDLYTSTCLK(1'b0),
        .TXPHINIT(1'b0),
        .TXPHINITDONE(NLW_gtpe2_i_TXPHINITDONE_UNCONNECTED),
        .TXPHOVRDEN(1'b0),
        .TXPIPPMEN(1'b0),
        .TXPIPPMOVRDEN(1'b0),
        .TXPIPPMPD(1'b0),
        .TXPIPPMSEL(1'b1),
        .TXPIPPMSTEPSIZE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPISOPD(1'b0),
        .TXPMARESET(1'b0),
        .TXPMARESETDONE(NLW_gtpe2_i_TXPMARESETDONE_UNCONNECTED),
        .TXPOLARITY(1'b0),
        .TXPOSTCURSOR({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPOSTCURSORINV(1'b0),
        .TXPRBSFORCEERR(1'b0),
        .TXPRBSSEL({1'b0,1'b0,1'b0}),
        .TXPRECURSOR({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPRECURSORINV(1'b0),
        .TXRATE({1'b0,1'b0,1'b0}),
        .TXRATEDONE(NLW_gtpe2_i_TXRATEDONE_UNCONNECTED),
        .TXRATEMODE(1'b0),
        .TXRESETDONE(rxn_1),
        .TXSEQUENCE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXSTARTSEQ(1'b0),
        .TXSWING(1'b0),
        .TXSYNCALLIN(1'b0),
        .TXSYNCDONE(NLW_gtpe2_i_TXSYNCDONE_UNCONNECTED),
        .TXSYNCIN(1'b0),
        .TXSYNCMODE(1'b0),
        .TXSYNCOUT(NLW_gtpe2_i_TXSYNCOUT_UNCONNECTED),
        .TXSYSCLKSEL({1'b0,1'b0}),
        .TXUSERRDY(gt0_txuserrdy_i),
        .TXUSRCLK(txn_0),
        .TXUSRCLK2(txn_0));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_gtwizard_gtrxreset_seq gtrxreset_seq_i
       (.D({gtpe2_i_n_63,gtpe2_i_n_64,gtpe2_i_n_65,gtpe2_i_n_66,gtpe2_i_n_67,gtpe2_i_n_68,gtpe2_i_n_69,gtpe2_i_n_70,gtpe2_i_n_71,gtpe2_i_n_72,gtpe2_i_n_73,gtpe2_i_n_74,gtpe2_i_n_75,gtpe2_i_n_76,gtpe2_i_n_77,gtpe2_i_n_78}),
        .DRPADDR(drpaddr_i),
        .DRPDI({gtrxreset_seq_i_n_2,gtrxreset_seq_i_n_3,gtrxreset_seq_i_n_4,gtrxreset_seq_i_n_5,gtrxreset_seq_i_n_6,gtrxreset_seq_i_n_7,gtrxreset_seq_i_n_8,gtrxreset_seq_i_n_9,gtrxreset_seq_i_n_10,gtrxreset_seq_i_n_11,gtrxreset_seq_i_n_12,gtrxreset_seq_i_n_13,gtrxreset_seq_i_n_14,gtrxreset_seq_i_n_15,gtrxreset_seq_i_n_16,gtrxreset_seq_i_n_17}),
        .\FSM_onehot_state_reg[5]_0 (gtrxreset_seq_i_n_1),
        .\FSM_onehot_state_reg[7]_0 (gtrxreset_seq_i_n_18),
        .SR(SR),
        .data_in(gtpe2_i_n_28),
        .data_sync_reg6(data_sync_reg6),
        .gtrxreset_out(gtrxreset_out),
        .\original_rd_data_reg[0]_0 (gtpe2_i_n_0),
        .reset_sync5(reset_sync5));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_GTWIZARD_init" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_GTWIZARD_init
   (txn,
    txp,
    rxoutclk,
    txoutclk,
    TXBUFSTATUS,
    D,
    mmcm_reset,
    reset_in,
    data_in,
    rx_fsm_reset_done_int_reg,
    data_sync_reg6,
    rxn,
    rxp,
    gt0_pll0outclk_out,
    gt0_pll0outrefclk_out,
    gt0_pll1outclk_out,
    gt0_pll1outrefclk_out,
    reset_out,
    wtd_rxpcsreset_in,
    rxuserclk2,
    TXPD,
    data_sync_reg6_0,
    RXPD,
    Q,
    txn_0,
    txn_1,
    txn_2,
    independent_clock_bufg,
    out,
    gt0_pll0refclklost_out,
    gt0_gtrxreset_gt_d1_reg_0,
    txn_3,
    data_sync_reg1,
    gt0_pll0lock_out,
    data_out);
  output txn;
  output txp;
  output rxoutclk;
  output txoutclk;
  output [0:0]TXBUFSTATUS;
  output [23:0]D;
  output mmcm_reset;
  output reset_in;
  output data_in;
  output rx_fsm_reset_done_int_reg;
  input data_sync_reg6;
  input rxn;
  input rxp;
  input gt0_pll0outclk_out;
  input gt0_pll0outrefclk_out;
  input gt0_pll1outclk_out;
  input gt0_pll1outrefclk_out;
  input reset_out;
  input wtd_rxpcsreset_in;
  input rxuserclk2;
  input [0:0]TXPD;
  input data_sync_reg6_0;
  input [0:0]RXPD;
  input [15:0]Q;
  input [1:0]txn_0;
  input [1:0]txn_1;
  input [1:0]txn_2;
  input independent_clock_bufg;
  input [0:0]out;
  input gt0_pll0refclklost_out;
  input gt0_gtrxreset_gt_d1_reg_0;
  input txn_3;
  input data_sync_reg1;
  input gt0_pll0lock_out;
  input data_out;

  wire [23:0]D;
  wire [15:0]Q;
  wire [0:0]RXPD;
  wire [0:0]TXBUFSTATUS;
  wire [0:0]TXPD;
  wire [31:1]data0;
  wire data_in;
  wire data_out;
  wire data_sync_reg1;
  wire data_sync_reg6;
  wire data_sync_reg6_0;
  wire gt0_gtrxreset_gt;
  wire gt0_gtrxreset_gt_d1;
  wire gt0_gtrxreset_gt_d1_reg_0;
  wire gt0_gttxreset_gt;
  wire gt0_pll0lock_out;
  wire gt0_pll0outclk_out;
  wire gt0_pll0outrefclk_out;
  wire gt0_pll0refclklost_out;
  wire gt0_pll1outclk_out;
  wire gt0_pll1outrefclk_out;
  wire [31:0]gt0_rx_cdrlock_counter;
  wire gt0_rx_cdrlock_counter0_carry__0_n_0;
  wire gt0_rx_cdrlock_counter0_carry__1_n_0;
  wire gt0_rx_cdrlock_counter0_carry__2_n_0;
  wire gt0_rx_cdrlock_counter0_carry__3_n_0;
  wire gt0_rx_cdrlock_counter0_carry__4_n_0;
  wire gt0_rx_cdrlock_counter0_carry__5_n_0;
  wire gt0_rx_cdrlock_counter0_carry_n_0;
  wire \gt0_rx_cdrlock_counter[0]_i_1_n_0 ;
  wire \gt0_rx_cdrlock_counter[31]_i_2_n_0 ;
  wire \gt0_rx_cdrlock_counter[31]_i_3_n_0 ;
  wire \gt0_rx_cdrlock_counter[31]_i_4_n_0 ;
  wire \gt0_rx_cdrlock_counter[31]_i_5_n_0 ;
  wire \gt0_rx_cdrlock_counter[31]_i_6_n_0 ;
  wire \gt0_rx_cdrlock_counter[31]_i_7_n_0 ;
  wire \gt0_rx_cdrlock_counter[31]_i_8_n_0 ;
  wire \gt0_rx_cdrlock_counter[31]_i_9_n_0 ;
  wire [31:1]gt0_rx_cdrlock_counter_0;
  wire gt0_rx_cdrlocked_i_1_n_0;
  wire gt0_rx_cdrlocked_reg_n_0;
  wire gt0_rxuserrdy_i;
  wire gt0_txuserrdy_i;
  wire gtwizard_i_n_3;
  wire gtwizard_i_n_5;
  wire independent_clock_bufg;
  wire mmcm_reset;
  wire [0:0]out;
  wire reset_in;
  wire reset_out;
  wire rx_fsm_reset_done_int_reg;
  wire rxn;
  wire rxoutclk;
  wire rxp;
  wire rxuserclk2;
  wire txn;
  wire [1:0]txn_0;
  wire [1:0]txn_1;
  wire [1:0]txn_2;
  wire txn_3;
  wire txoutclk;
  wire txp;
  wire wtd_rxpcsreset_in;
  wire [2:0]NLW_gt0_rx_cdrlock_counter0_carry_CO_UNCONNECTED;
  wire [2:0]NLW_gt0_rx_cdrlock_counter0_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_gt0_rx_cdrlock_counter0_carry__1_CO_UNCONNECTED;
  wire [2:0]NLW_gt0_rx_cdrlock_counter0_carry__2_CO_UNCONNECTED;
  wire [2:0]NLW_gt0_rx_cdrlock_counter0_carry__3_CO_UNCONNECTED;
  wire [2:0]NLW_gt0_rx_cdrlock_counter0_carry__4_CO_UNCONNECTED;
  wire [2:0]NLW_gt0_rx_cdrlock_counter0_carry__5_CO_UNCONNECTED;
  wire [3:0]NLW_gt0_rx_cdrlock_counter0_carry__6_CO_UNCONNECTED;
  wire [3:3]NLW_gt0_rx_cdrlock_counter0_carry__6_O_UNCONNECTED;

  FDRE #(
    .INIT(1'b0)) 
    gt0_gtrxreset_gt_d1_reg
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(gt0_gtrxreset_gt),
        .Q(gt0_gtrxreset_gt_d1),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 gt0_rx_cdrlock_counter0_carry
       (.CI(1'b0),
        .CO({gt0_rx_cdrlock_counter0_carry_n_0,NLW_gt0_rx_cdrlock_counter0_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(gt0_rx_cdrlock_counter[0]),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data0[4:1]),
        .S(gt0_rx_cdrlock_counter[4:1]));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 gt0_rx_cdrlock_counter0_carry__0
       (.CI(gt0_rx_cdrlock_counter0_carry_n_0),
        .CO({gt0_rx_cdrlock_counter0_carry__0_n_0,NLW_gt0_rx_cdrlock_counter0_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data0[8:5]),
        .S(gt0_rx_cdrlock_counter[8:5]));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 gt0_rx_cdrlock_counter0_carry__1
       (.CI(gt0_rx_cdrlock_counter0_carry__0_n_0),
        .CO({gt0_rx_cdrlock_counter0_carry__1_n_0,NLW_gt0_rx_cdrlock_counter0_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data0[12:9]),
        .S(gt0_rx_cdrlock_counter[12:9]));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 gt0_rx_cdrlock_counter0_carry__2
       (.CI(gt0_rx_cdrlock_counter0_carry__1_n_0),
        .CO({gt0_rx_cdrlock_counter0_carry__2_n_0,NLW_gt0_rx_cdrlock_counter0_carry__2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data0[16:13]),
        .S(gt0_rx_cdrlock_counter[16:13]));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 gt0_rx_cdrlock_counter0_carry__3
       (.CI(gt0_rx_cdrlock_counter0_carry__2_n_0),
        .CO({gt0_rx_cdrlock_counter0_carry__3_n_0,NLW_gt0_rx_cdrlock_counter0_carry__3_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data0[20:17]),
        .S(gt0_rx_cdrlock_counter[20:17]));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 gt0_rx_cdrlock_counter0_carry__4
       (.CI(gt0_rx_cdrlock_counter0_carry__3_n_0),
        .CO({gt0_rx_cdrlock_counter0_carry__4_n_0,NLW_gt0_rx_cdrlock_counter0_carry__4_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data0[24:21]),
        .S(gt0_rx_cdrlock_counter[24:21]));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 gt0_rx_cdrlock_counter0_carry__5
       (.CI(gt0_rx_cdrlock_counter0_carry__4_n_0),
        .CO({gt0_rx_cdrlock_counter0_carry__5_n_0,NLW_gt0_rx_cdrlock_counter0_carry__5_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data0[28:25]),
        .S(gt0_rx_cdrlock_counter[28:25]));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 gt0_rx_cdrlock_counter0_carry__6
       (.CI(gt0_rx_cdrlock_counter0_carry__5_n_0),
        .CO(NLW_gt0_rx_cdrlock_counter0_carry__6_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_gt0_rx_cdrlock_counter0_carry__6_O_UNCONNECTED[3],data0[31:29]}),
        .S({1'b0,gt0_rx_cdrlock_counter[31:29]}));
  LUT5 #(
    .INIT(32'h0000FFFE)) 
    \gt0_rx_cdrlock_counter[0]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(gt0_rx_cdrlock_counter[0]),
        .O(\gt0_rx_cdrlock_counter[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAAAAAAAB)) 
    \gt0_rx_cdrlock_counter[10]_i_1 
       (.I0(data0[10]),
        .I1(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I4(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .O(gt0_rx_cdrlock_counter_0[10]));
  LUT5 #(
    .INIT(32'hAAAAAAAB)) 
    \gt0_rx_cdrlock_counter[11]_i_1 
       (.I0(data0[11]),
        .I1(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I4(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .O(gt0_rx_cdrlock_counter_0[11]));
  LUT5 #(
    .INIT(32'hAAAAAAAB)) 
    \gt0_rx_cdrlock_counter[12]_i_1 
       (.I0(data0[12]),
        .I1(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I4(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .O(gt0_rx_cdrlock_counter_0[12]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[13]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[13]),
        .O(gt0_rx_cdrlock_counter_0[13]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[14]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[14]),
        .O(gt0_rx_cdrlock_counter_0[14]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[15]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[15]),
        .O(gt0_rx_cdrlock_counter_0[15]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[16]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[16]),
        .O(gt0_rx_cdrlock_counter_0[16]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[17]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[17]),
        .O(gt0_rx_cdrlock_counter_0[17]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[18]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[18]),
        .O(gt0_rx_cdrlock_counter_0[18]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[19]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[19]),
        .O(gt0_rx_cdrlock_counter_0[19]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[1]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[1]),
        .O(gt0_rx_cdrlock_counter_0[1]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[20]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[20]),
        .O(gt0_rx_cdrlock_counter_0[20]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[21]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[21]),
        .O(gt0_rx_cdrlock_counter_0[21]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[22]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[22]),
        .O(gt0_rx_cdrlock_counter_0[22]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[23]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[23]),
        .O(gt0_rx_cdrlock_counter_0[23]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[24]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[24]),
        .O(gt0_rx_cdrlock_counter_0[24]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[25]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[25]),
        .O(gt0_rx_cdrlock_counter_0[25]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[26]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[26]),
        .O(gt0_rx_cdrlock_counter_0[26]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[27]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[27]),
        .O(gt0_rx_cdrlock_counter_0[27]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[28]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[28]),
        .O(gt0_rx_cdrlock_counter_0[28]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[29]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[29]),
        .O(gt0_rx_cdrlock_counter_0[29]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[2]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[2]),
        .O(gt0_rx_cdrlock_counter_0[2]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[30]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[30]),
        .O(gt0_rx_cdrlock_counter_0[30]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[31]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[31]),
        .O(gt0_rx_cdrlock_counter_0[31]));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gt0_rx_cdrlock_counter[31]_i_2 
       (.I0(gt0_rx_cdrlock_counter[18]),
        .I1(gt0_rx_cdrlock_counter[19]),
        .I2(gt0_rx_cdrlock_counter[16]),
        .I3(gt0_rx_cdrlock_counter[17]),
        .I4(\gt0_rx_cdrlock_counter[31]_i_6_n_0 ),
        .O(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gt0_rx_cdrlock_counter[31]_i_3 
       (.I0(gt0_rx_cdrlock_counter[26]),
        .I1(gt0_rx_cdrlock_counter[27]),
        .I2(gt0_rx_cdrlock_counter[24]),
        .I3(gt0_rx_cdrlock_counter[25]),
        .I4(\gt0_rx_cdrlock_counter[31]_i_7_n_0 ),
        .O(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gt0_rx_cdrlock_counter[31]_i_4 
       (.I0(gt0_rx_cdrlock_counter[2]),
        .I1(gt0_rx_cdrlock_counter[3]),
        .I2(gt0_rx_cdrlock_counter[0]),
        .I3(gt0_rx_cdrlock_counter[1]),
        .I4(\gt0_rx_cdrlock_counter[31]_i_8_n_0 ),
        .O(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF7FFF)) 
    \gt0_rx_cdrlock_counter[31]_i_5 
       (.I0(gt0_rx_cdrlock_counter[10]),
        .I1(gt0_rx_cdrlock_counter[11]),
        .I2(gt0_rx_cdrlock_counter[8]),
        .I3(gt0_rx_cdrlock_counter[9]),
        .I4(\gt0_rx_cdrlock_counter[31]_i_9_n_0 ),
        .O(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gt0_rx_cdrlock_counter[31]_i_6 
       (.I0(gt0_rx_cdrlock_counter[21]),
        .I1(gt0_rx_cdrlock_counter[20]),
        .I2(gt0_rx_cdrlock_counter[23]),
        .I3(gt0_rx_cdrlock_counter[22]),
        .O(\gt0_rx_cdrlock_counter[31]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gt0_rx_cdrlock_counter[31]_i_7 
       (.I0(gt0_rx_cdrlock_counter[29]),
        .I1(gt0_rx_cdrlock_counter[28]),
        .I2(gt0_rx_cdrlock_counter[31]),
        .I3(gt0_rx_cdrlock_counter[30]),
        .O(\gt0_rx_cdrlock_counter[31]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'hFFEF)) 
    \gt0_rx_cdrlock_counter[31]_i_8 
       (.I0(gt0_rx_cdrlock_counter[5]),
        .I1(gt0_rx_cdrlock_counter[4]),
        .I2(gt0_rx_cdrlock_counter[6]),
        .I3(gt0_rx_cdrlock_counter[7]),
        .O(\gt0_rx_cdrlock_counter[31]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'hFFFD)) 
    \gt0_rx_cdrlock_counter[31]_i_9 
       (.I0(gt0_rx_cdrlock_counter[12]),
        .I1(gt0_rx_cdrlock_counter[13]),
        .I2(gt0_rx_cdrlock_counter[15]),
        .I3(gt0_rx_cdrlock_counter[14]),
        .O(\gt0_rx_cdrlock_counter[31]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[3]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[3]),
        .O(gt0_rx_cdrlock_counter_0[3]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[4]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[4]),
        .O(gt0_rx_cdrlock_counter_0[4]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[5]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[5]),
        .O(gt0_rx_cdrlock_counter_0[5]));
  LUT5 #(
    .INIT(32'hAAAAAAAB)) 
    \gt0_rx_cdrlock_counter[6]_i_1 
       (.I0(data0[6]),
        .I1(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I4(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .O(gt0_rx_cdrlock_counter_0[6]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \gt0_rx_cdrlock_counter[7]_i_1 
       (.I0(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I1(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .I4(data0[7]),
        .O(gt0_rx_cdrlock_counter_0[7]));
  LUT5 #(
    .INIT(32'hAAAAAAAB)) 
    \gt0_rx_cdrlock_counter[8]_i_1 
       (.I0(data0[8]),
        .I1(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I4(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .O(gt0_rx_cdrlock_counter_0[8]));
  LUT5 #(
    .INIT(32'hAAAAAAAB)) 
    \gt0_rx_cdrlock_counter[9]_i_1 
       (.I0(data0[9]),
        .I1(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I4(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .O(gt0_rx_cdrlock_counter_0[9]));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[0] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(\gt0_rx_cdrlock_counter[0]_i_1_n_0 ),
        .Q(gt0_rx_cdrlock_counter[0]),
        .R(gt0_gtrxreset_gt_d1));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[10] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter_0[10]),
        .Q(gt0_rx_cdrlock_counter[10]),
        .R(gt0_gtrxreset_gt_d1));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[11] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter_0[11]),
        .Q(gt0_rx_cdrlock_counter[11]),
        .R(gt0_gtrxreset_gt_d1));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[12] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter_0[12]),
        .Q(gt0_rx_cdrlock_counter[12]),
        .R(gt0_gtrxreset_gt_d1));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[13] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter_0[13]),
        .Q(gt0_rx_cdrlock_counter[13]),
        .R(gt0_gtrxreset_gt_d1));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[14] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter_0[14]),
        .Q(gt0_rx_cdrlock_counter[14]),
        .R(gt0_gtrxreset_gt_d1));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[15] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter_0[15]),
        .Q(gt0_rx_cdrlock_counter[15]),
        .R(gt0_gtrxreset_gt_d1));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[16] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter_0[16]),
        .Q(gt0_rx_cdrlock_counter[16]),
        .R(gt0_gtrxreset_gt_d1));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[17] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter_0[17]),
        .Q(gt0_rx_cdrlock_counter[17]),
        .R(gt0_gtrxreset_gt_d1));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[18] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter_0[18]),
        .Q(gt0_rx_cdrlock_counter[18]),
        .R(gt0_gtrxreset_gt_d1));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[19] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter_0[19]),
        .Q(gt0_rx_cdrlock_counter[19]),
        .R(gt0_gtrxreset_gt_d1));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[1] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter_0[1]),
        .Q(gt0_rx_cdrlock_counter[1]),
        .R(gt0_gtrxreset_gt_d1));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[20] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter_0[20]),
        .Q(gt0_rx_cdrlock_counter[20]),
        .R(gt0_gtrxreset_gt_d1));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[21] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter_0[21]),
        .Q(gt0_rx_cdrlock_counter[21]),
        .R(gt0_gtrxreset_gt_d1));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[22] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter_0[22]),
        .Q(gt0_rx_cdrlock_counter[22]),
        .R(gt0_gtrxreset_gt_d1));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[23] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter_0[23]),
        .Q(gt0_rx_cdrlock_counter[23]),
        .R(gt0_gtrxreset_gt_d1));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[24] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter_0[24]),
        .Q(gt0_rx_cdrlock_counter[24]),
        .R(gt0_gtrxreset_gt_d1));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[25] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter_0[25]),
        .Q(gt0_rx_cdrlock_counter[25]),
        .R(gt0_gtrxreset_gt_d1));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[26] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter_0[26]),
        .Q(gt0_rx_cdrlock_counter[26]),
        .R(gt0_gtrxreset_gt_d1));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[27] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter_0[27]),
        .Q(gt0_rx_cdrlock_counter[27]),
        .R(gt0_gtrxreset_gt_d1));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[28] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter_0[28]),
        .Q(gt0_rx_cdrlock_counter[28]),
        .R(gt0_gtrxreset_gt_d1));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[29] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter_0[29]),
        .Q(gt0_rx_cdrlock_counter[29]),
        .R(gt0_gtrxreset_gt_d1));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[2] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter_0[2]),
        .Q(gt0_rx_cdrlock_counter[2]),
        .R(gt0_gtrxreset_gt_d1));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[30] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter_0[30]),
        .Q(gt0_rx_cdrlock_counter[30]),
        .R(gt0_gtrxreset_gt_d1));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[31] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter_0[31]),
        .Q(gt0_rx_cdrlock_counter[31]),
        .R(gt0_gtrxreset_gt_d1));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[3] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter_0[3]),
        .Q(gt0_rx_cdrlock_counter[3]),
        .R(gt0_gtrxreset_gt_d1));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[4] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter_0[4]),
        .Q(gt0_rx_cdrlock_counter[4]),
        .R(gt0_gtrxreset_gt_d1));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[5] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter_0[5]),
        .Q(gt0_rx_cdrlock_counter[5]),
        .R(gt0_gtrxreset_gt_d1));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[6] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter_0[6]),
        .Q(gt0_rx_cdrlock_counter[6]),
        .R(gt0_gtrxreset_gt_d1));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[7] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter_0[7]),
        .Q(gt0_rx_cdrlock_counter[7]),
        .R(gt0_gtrxreset_gt_d1));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[8] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter_0[8]),
        .Q(gt0_rx_cdrlock_counter[8]),
        .R(gt0_gtrxreset_gt_d1));
  FDRE #(
    .INIT(1'b0)) 
    \gt0_rx_cdrlock_counter_reg[9] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(gt0_rx_cdrlock_counter_0[9]),
        .Q(gt0_rx_cdrlock_counter[9]),
        .R(gt0_gtrxreset_gt_d1));
  LUT5 #(
    .INIT(32'hAAAAAAAB)) 
    gt0_rx_cdrlocked_i_1
       (.I0(gt0_rx_cdrlocked_reg_n_0),
        .I1(\gt0_rx_cdrlock_counter[31]_i_2_n_0 ),
        .I2(\gt0_rx_cdrlock_counter[31]_i_3_n_0 ),
        .I3(\gt0_rx_cdrlock_counter[31]_i_4_n_0 ),
        .I4(\gt0_rx_cdrlock_counter[31]_i_5_n_0 ),
        .O(gt0_rx_cdrlocked_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gt0_rx_cdrlocked_reg
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(gt0_rx_cdrlocked_i_1_n_0),
        .Q(gt0_rx_cdrlocked_reg_n_0),
        .R(gt0_gtrxreset_gt_d1));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_RX_STARTUP_FSM gt0_rxresetfsm_i
       (.data_in(rx_fsm_reset_done_int_reg),
        .data_out(data_out),
        .data_sync_reg1(gtwizard_i_n_3),
        .data_sync_reg1_0(data_sync_reg1),
        .gt0_gtrxreset_gt(gt0_gtrxreset_gt),
        .gt0_gtrxreset_gt_d1_reg(gt0_gtrxreset_gt_d1_reg_0),
        .gt0_pll0lock_out(gt0_pll0lock_out),
        .gt0_rxuserrdy_i(gt0_rxuserrdy_i),
        .independent_clock_bufg(independent_clock_bufg),
        .out(out),
        .reset_time_out_reg_0(gt0_rx_cdrlocked_reg_n_0),
        .rxuserclk2(rxuserclk2));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_TX_STARTUP_FSM gt0_txresetfsm_i
       (.PLL0_RESET_reg_0(reset_in),
        .data_in(data_in),
        .data_sync_reg1(gtwizard_i_n_5),
        .data_sync_reg1_0(data_sync_reg1),
        .data_sync_reg6(data_sync_reg6_0),
        .gt0_gttxreset_gt(gt0_gttxreset_gt),
        .gt0_pll0lock_out(gt0_pll0lock_out),
        .gt0_pll0refclklost_out(gt0_pll0refclklost_out),
        .gt0_txuserrdy_i(gt0_txuserrdy_i),
        .independent_clock_bufg(independent_clock_bufg),
        .mmcm_reset(mmcm_reset),
        .out(out),
        .txn(txn_3));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_GTWIZARD_multi_gt gtwizard_i
       (.D(D),
        .Q(Q),
        .RXPD(RXPD),
        .SR(gt0_gtrxreset_gt_d1),
        .TXBUFSTATUS(TXBUFSTATUS),
        .TXPD(TXPD),
        .data_sync_reg6(data_sync_reg6),
        .gt0_gttxreset_gt(gt0_gttxreset_gt),
        .gt0_pll0outclk_out(gt0_pll0outclk_out),
        .gt0_pll0outrefclk_out(gt0_pll0outrefclk_out),
        .gt0_pll1outclk_out(gt0_pll1outclk_out),
        .gt0_pll1outrefclk_out(gt0_pll1outrefclk_out),
        .gt0_rxuserrdy_i(gt0_rxuserrdy_i),
        .gt0_txuserrdy_i(gt0_txuserrdy_i),
        .reset_out(reset_out),
        .reset_sync5(reset_in),
        .rxn(rxn),
        .rxn_0(gtwizard_i_n_3),
        .rxn_1(gtwizard_i_n_5),
        .rxoutclk(rxoutclk),
        .rxp(rxp),
        .rxuserclk2(rxuserclk2),
        .txn(txn),
        .txn_0(data_sync_reg6_0),
        .txn_1(txn_0),
        .txn_2(txn_1),
        .txn_3(txn_2),
        .txoutclk(txoutclk),
        .txp(txp),
        .wtd_rxpcsreset_in(wtd_rxpcsreset_in));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_GTWIZARD_multi_gt" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_GTWIZARD_multi_gt
   (txn,
    txp,
    rxoutclk,
    rxn_0,
    txoutclk,
    rxn_1,
    TXBUFSTATUS,
    D,
    data_sync_reg6,
    rxn,
    rxp,
    gt0_gttxreset_gt,
    gt0_pll0outclk_out,
    gt0_pll0outrefclk_out,
    gt0_pll1outclk_out,
    gt0_pll1outrefclk_out,
    reset_out,
    wtd_rxpcsreset_in,
    gt0_rxuserrdy_i,
    rxuserclk2,
    TXPD,
    gt0_txuserrdy_i,
    txn_0,
    RXPD,
    Q,
    txn_1,
    txn_2,
    txn_3,
    SR,
    reset_sync5);
  output txn;
  output txp;
  output rxoutclk;
  output rxn_0;
  output txoutclk;
  output rxn_1;
  output [0:0]TXBUFSTATUS;
  output [23:0]D;
  input data_sync_reg6;
  input rxn;
  input rxp;
  input gt0_gttxreset_gt;
  input gt0_pll0outclk_out;
  input gt0_pll0outrefclk_out;
  input gt0_pll1outclk_out;
  input gt0_pll1outrefclk_out;
  input reset_out;
  input wtd_rxpcsreset_in;
  input gt0_rxuserrdy_i;
  input rxuserclk2;
  input [0:0]TXPD;
  input gt0_txuserrdy_i;
  input txn_0;
  input [0:0]RXPD;
  input [15:0]Q;
  input [1:0]txn_1;
  input [1:0]txn_2;
  input [1:0]txn_3;
  input [0:0]SR;
  input reset_sync5;

  wire [23:0]D;
  wire [15:0]Q;
  wire [0:0]RXPD;
  wire [0:0]SR;
  wire [0:0]TXBUFSTATUS;
  wire [0:0]TXPD;
  wire data_sync_reg6;
  wire gt0_gttxreset_gt;
  wire gt0_pll0outclk_out;
  wire gt0_pll0outrefclk_out;
  wire gt0_pll1outclk_out;
  wire gt0_pll1outrefclk_out;
  wire gt0_rxuserrdy_i;
  wire gt0_txuserrdy_i;
  wire reset_out;
  wire reset_sync5;
  wire rxn;
  wire rxn_0;
  wire rxn_1;
  wire rxoutclk;
  wire rxp;
  wire rxuserclk2;
  wire txn;
  wire txn_0;
  wire [1:0]txn_1;
  wire [1:0]txn_2;
  wire [1:0]txn_3;
  wire txoutclk;
  wire txp;
  wire wtd_rxpcsreset_in;

  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_GTWIZARD_GT gt0_GTWIZARD_i
       (.D(D),
        .Q(Q),
        .RXPD(RXPD),
        .SR(SR),
        .TXBUFSTATUS(TXBUFSTATUS),
        .TXPD(TXPD),
        .data_sync_reg6(data_sync_reg6),
        .gt0_gttxreset_gt(gt0_gttxreset_gt),
        .gt0_pll0outclk_out(gt0_pll0outclk_out),
        .gt0_pll0outrefclk_out(gt0_pll0outrefclk_out),
        .gt0_pll1outclk_out(gt0_pll1outclk_out),
        .gt0_pll1outrefclk_out(gt0_pll1outrefclk_out),
        .gt0_rxuserrdy_i(gt0_rxuserrdy_i),
        .gt0_txuserrdy_i(gt0_txuserrdy_i),
        .reset_out(reset_out),
        .reset_sync5(reset_sync5),
        .rxn(rxn),
        .rxn_0(rxn_0),
        .rxn_1(rxn_1),
        .rxoutclk(rxoutclk),
        .rxp(rxp),
        .rxuserclk2(rxuserclk2),
        .txn(txn),
        .txn_0(txn_0),
        .txn_1(txn_1),
        .txn_2(txn_2),
        .txn_3(txn_3),
        .txoutclk(txoutclk),
        .txp(txp),
        .wtd_rxpcsreset_in(wtd_rxpcsreset_in));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_RX_STARTUP_FSM" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_RX_STARTUP_FSM
   (data_in,
    gt0_rxuserrdy_i,
    gt0_gtrxreset_gt,
    independent_clock_bufg,
    rxuserclk2,
    out,
    reset_time_out_reg_0,
    gt0_gtrxreset_gt_d1_reg,
    data_sync_reg1,
    data_sync_reg1_0,
    data_out,
    gt0_pll0lock_out);
  output data_in;
  output gt0_rxuserrdy_i;
  output gt0_gtrxreset_gt;
  input independent_clock_bufg;
  input rxuserclk2;
  input [0:0]out;
  input reset_time_out_reg_0;
  input gt0_gtrxreset_gt_d1_reg;
  input data_sync_reg1;
  input data_sync_reg1_0;
  input data_out;
  input gt0_pll0lock_out;

  wire \FSM_sequential_rx_state[0]_i_2_n_0 ;
  wire \FSM_sequential_rx_state[1]_i_2_n_0 ;
  wire \FSM_sequential_rx_state[2]_i_1_n_0 ;
  wire \FSM_sequential_rx_state[2]_i_2_n_0 ;
  wire \FSM_sequential_rx_state[3]_i_10_n_0 ;
  wire \FSM_sequential_rx_state[3]_i_4_n_0 ;
  wire \FSM_sequential_rx_state[3]_i_6_n_0 ;
  wire \FSM_sequential_rx_state[3]_i_8_n_0 ;
  wire \FSM_sequential_rx_state[3]_i_9_n_0 ;
  wire RXUSERRDY_i_1_n_0;
  wire check_tlock_max;
  wire check_tlock_max_i_1_n_0;
  wire check_tlock_max_reg_n_0;
  wire data_in;
  wire data_out;
  wire data_sync_reg1;
  wire data_sync_reg1_0;
  wire data_valid_sync;
  wire gt0_gtrxreset_gt;
  wire gt0_gtrxreset_gt_d1_reg;
  wire gt0_gtrxreset_t;
  wire gt0_pll0lock_out;
  wire gt0_rxuserrdy_i;
  wire gtrxreset_i_i_1_n_0;
  wire independent_clock_bufg;
  wire init_wait_count;
  wire \init_wait_count[0]_i_1__0_n_0 ;
  wire \init_wait_count[7]_i_3__1_n_0 ;
  wire \init_wait_count[7]_i_4__0_n_0 ;
  wire [7:0]init_wait_count_reg;
  wire init_wait_done_i_1__0_n_0;
  wire init_wait_done_reg_n_0;
  wire \mmcm_lock_count[7]_i_2__0_n_0 ;
  wire \mmcm_lock_count[7]_i_4__0_n_0 ;
  wire [7:0]mmcm_lock_count_reg;
  wire mmcm_lock_reclocked;
  wire [0:0]out;
  wire [7:1]p_0_in__2;
  wire [7:0]p_0_in__3;
  wire reset_time_out_i_2__0_n_0;
  wire reset_time_out_i_4_n_0;
  wire reset_time_out_i_6_n_0;
  wire reset_time_out_reg_0;
  wire reset_time_out_reg_n_0;
  wire run_phase_alignment_int_i_1__0_n_0;
  wire run_phase_alignment_int_reg_n_0;
  wire run_phase_alignment_int_s2;
  wire run_phase_alignment_int_s3_reg_n_0;
  wire rx_fsm_reset_done_int_s2;
  wire rx_fsm_reset_done_int_s3;
  wire [3:0]rx_state;
  wire [3:0]rx_state__0;
  wire rxresetdone_s2;
  wire rxresetdone_s3;
  wire rxuserclk2;
  wire sync_data_valid_n_0;
  wire sync_data_valid_n_5;
  wire sync_mmcm_lock_reclocked_n_0;
  wire sync_mmcm_lock_reclocked_n_1;
  wire sync_pll0lock_n_0;
  wire sync_pll0lock_n_1;
  wire time_out_100us_i_1_n_0;
  wire time_out_100us_i_2_n_0;
  wire time_out_100us_i_3_n_0;
  wire time_out_100us_i_4_n_0;
  wire time_out_100us_i_5_n_0;
  wire time_out_100us_reg_n_0;
  wire time_out_1us_i_1_n_0;
  wire time_out_1us_i_2_n_0;
  wire time_out_1us_reg_n_0;
  wire time_out_2ms_i_1_n_0;
  wire time_out_2ms_i_2_n_0;
  wire time_out_2ms_i_3_n_0;
  wire time_out_2ms_reg_n_0;
  wire time_out_counter;
  wire \time_out_counter[0]_i_3_n_0 ;
  wire \time_out_counter[0]_i_4__0_n_0 ;
  wire \time_out_counter[0]_i_5_n_0 ;
  wire \time_out_counter[0]_i_6_n_0 ;
  wire \time_out_counter[0]_i_7_n_0 ;
  wire [19:0]time_out_counter_reg;
  wire \time_out_counter_reg[0]_i_2__0_n_0 ;
  wire \time_out_counter_reg[0]_i_2__0_n_4 ;
  wire \time_out_counter_reg[0]_i_2__0_n_5 ;
  wire \time_out_counter_reg[0]_i_2__0_n_6 ;
  wire \time_out_counter_reg[0]_i_2__0_n_7 ;
  wire \time_out_counter_reg[12]_i_1__0_n_0 ;
  wire \time_out_counter_reg[12]_i_1__0_n_4 ;
  wire \time_out_counter_reg[12]_i_1__0_n_5 ;
  wire \time_out_counter_reg[12]_i_1__0_n_6 ;
  wire \time_out_counter_reg[12]_i_1__0_n_7 ;
  wire \time_out_counter_reg[16]_i_1__0_n_4 ;
  wire \time_out_counter_reg[16]_i_1__0_n_5 ;
  wire \time_out_counter_reg[16]_i_1__0_n_6 ;
  wire \time_out_counter_reg[16]_i_1__0_n_7 ;
  wire \time_out_counter_reg[4]_i_1__0_n_0 ;
  wire \time_out_counter_reg[4]_i_1__0_n_4 ;
  wire \time_out_counter_reg[4]_i_1__0_n_5 ;
  wire \time_out_counter_reg[4]_i_1__0_n_6 ;
  wire \time_out_counter_reg[4]_i_1__0_n_7 ;
  wire \time_out_counter_reg[8]_i_1__0_n_0 ;
  wire \time_out_counter_reg[8]_i_1__0_n_4 ;
  wire \time_out_counter_reg[8]_i_1__0_n_5 ;
  wire \time_out_counter_reg[8]_i_1__0_n_6 ;
  wire \time_out_counter_reg[8]_i_1__0_n_7 ;
  wire time_out_wait_bypass_i_1__0_n_0;
  wire time_out_wait_bypass_reg_n_0;
  wire time_out_wait_bypass_s2;
  wire time_out_wait_bypass_s3;
  wire time_tlock_max;
  wire time_tlock_max_i_1_n_0;
  wire time_tlock_max_i_2_n_0;
  wire time_tlock_max_i_3_n_0;
  wire time_tlock_max_i_4_n_0;
  wire time_tlock_max_i_5_n_0;
  wire \wait_bypass_count[0]_i_1__0_n_0 ;
  wire \wait_bypass_count[0]_i_2__0_n_0 ;
  wire \wait_bypass_count[0]_i_4__0_n_0 ;
  wire \wait_bypass_count[0]_i_5__0_n_0 ;
  wire \wait_bypass_count[0]_i_6__0_n_0 ;
  wire \wait_bypass_count[0]_i_7__0_n_0 ;
  wire [12:0]wait_bypass_count_reg;
  wire \wait_bypass_count_reg[0]_i_3__0_n_0 ;
  wire \wait_bypass_count_reg[0]_i_3__0_n_4 ;
  wire \wait_bypass_count_reg[0]_i_3__0_n_5 ;
  wire \wait_bypass_count_reg[0]_i_3__0_n_6 ;
  wire \wait_bypass_count_reg[0]_i_3__0_n_7 ;
  wire \wait_bypass_count_reg[12]_i_1__0_n_7 ;
  wire \wait_bypass_count_reg[4]_i_1__0_n_0 ;
  wire \wait_bypass_count_reg[4]_i_1__0_n_4 ;
  wire \wait_bypass_count_reg[4]_i_1__0_n_5 ;
  wire \wait_bypass_count_reg[4]_i_1__0_n_6 ;
  wire \wait_bypass_count_reg[4]_i_1__0_n_7 ;
  wire \wait_bypass_count_reg[8]_i_1__0_n_0 ;
  wire \wait_bypass_count_reg[8]_i_1__0_n_4 ;
  wire \wait_bypass_count_reg[8]_i_1__0_n_5 ;
  wire \wait_bypass_count_reg[8]_i_1__0_n_6 ;
  wire \wait_bypass_count_reg[8]_i_1__0_n_7 ;
  wire \wait_time_cnt[0]_i_10__0_n_0 ;
  wire \wait_time_cnt[0]_i_11__0_n_0 ;
  wire \wait_time_cnt[0]_i_1_n_0 ;
  wire \wait_time_cnt[0]_i_2__0_n_0 ;
  wire \wait_time_cnt[0]_i_4__0_n_0 ;
  wire \wait_time_cnt[0]_i_5__0_n_0 ;
  wire \wait_time_cnt[0]_i_6__0_n_0 ;
  wire \wait_time_cnt[0]_i_7__0_n_0 ;
  wire \wait_time_cnt[0]_i_8__0_n_0 ;
  wire \wait_time_cnt[0]_i_9__0_n_0 ;
  wire \wait_time_cnt[12]_i_2__0_n_0 ;
  wire \wait_time_cnt[12]_i_3__0_n_0 ;
  wire \wait_time_cnt[12]_i_4__0_n_0 ;
  wire \wait_time_cnt[12]_i_5__0_n_0 ;
  wire \wait_time_cnt[4]_i_2__0_n_0 ;
  wire \wait_time_cnt[4]_i_3__0_n_0 ;
  wire \wait_time_cnt[4]_i_4__0_n_0 ;
  wire \wait_time_cnt[4]_i_5__0_n_0 ;
  wire \wait_time_cnt[8]_i_2__0_n_0 ;
  wire \wait_time_cnt[8]_i_3__0_n_0 ;
  wire \wait_time_cnt[8]_i_4__0_n_0 ;
  wire \wait_time_cnt[8]_i_5__0_n_0 ;
  wire [15:0]wait_time_cnt_reg;
  wire \wait_time_cnt_reg[0]_i_3__0_n_0 ;
  wire \wait_time_cnt_reg[0]_i_3__0_n_4 ;
  wire \wait_time_cnt_reg[0]_i_3__0_n_5 ;
  wire \wait_time_cnt_reg[0]_i_3__0_n_6 ;
  wire \wait_time_cnt_reg[0]_i_3__0_n_7 ;
  wire \wait_time_cnt_reg[12]_i_1__0_n_4 ;
  wire \wait_time_cnt_reg[12]_i_1__0_n_5 ;
  wire \wait_time_cnt_reg[12]_i_1__0_n_6 ;
  wire \wait_time_cnt_reg[12]_i_1__0_n_7 ;
  wire \wait_time_cnt_reg[4]_i_1__0_n_0 ;
  wire \wait_time_cnt_reg[4]_i_1__0_n_4 ;
  wire \wait_time_cnt_reg[4]_i_1__0_n_5 ;
  wire \wait_time_cnt_reg[4]_i_1__0_n_6 ;
  wire \wait_time_cnt_reg[4]_i_1__0_n_7 ;
  wire \wait_time_cnt_reg[8]_i_1__0_n_0 ;
  wire \wait_time_cnt_reg[8]_i_1__0_n_4 ;
  wire \wait_time_cnt_reg[8]_i_1__0_n_5 ;
  wire \wait_time_cnt_reg[8]_i_1__0_n_6 ;
  wire \wait_time_cnt_reg[8]_i_1__0_n_7 ;
  wire [2:0]\NLW_time_out_counter_reg[0]_i_2__0_CO_UNCONNECTED ;
  wire [2:0]\NLW_time_out_counter_reg[12]_i_1__0_CO_UNCONNECTED ;
  wire [3:0]\NLW_time_out_counter_reg[16]_i_1__0_CO_UNCONNECTED ;
  wire [2:0]\NLW_time_out_counter_reg[4]_i_1__0_CO_UNCONNECTED ;
  wire [2:0]\NLW_time_out_counter_reg[8]_i_1__0_CO_UNCONNECTED ;
  wire [2:0]\NLW_wait_bypass_count_reg[0]_i_3__0_CO_UNCONNECTED ;
  wire [3:0]\NLW_wait_bypass_count_reg[12]_i_1__0_CO_UNCONNECTED ;
  wire [3:1]\NLW_wait_bypass_count_reg[12]_i_1__0_O_UNCONNECTED ;
  wire [2:0]\NLW_wait_bypass_count_reg[4]_i_1__0_CO_UNCONNECTED ;
  wire [2:0]\NLW_wait_bypass_count_reg[8]_i_1__0_CO_UNCONNECTED ;
  wire [2:0]\NLW_wait_time_cnt_reg[0]_i_3__0_CO_UNCONNECTED ;
  wire [3:0]\NLW_wait_time_cnt_reg[12]_i_1__0_CO_UNCONNECTED ;
  wire [2:0]\NLW_wait_time_cnt_reg[4]_i_1__0_CO_UNCONNECTED ;
  wire [2:0]\NLW_wait_time_cnt_reg[8]_i_1__0_CO_UNCONNECTED ;

  LUT6 #(
    .INIT(64'hFFFFFFFF8000AF00)) 
    \FSM_sequential_rx_state[0]_i_2 
       (.I0(rx_state[1]),
        .I1(reset_time_out_reg_n_0),
        .I2(rx_state[2]),
        .I3(rx_state[0]),
        .I4(time_out_2ms_reg_n_0),
        .I5(rx_state[3]),
        .O(\FSM_sequential_rx_state[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF5555FFFF7555)) 
    \FSM_sequential_rx_state[1]_i_2 
       (.I0(rx_state[0]),
        .I1(reset_time_out_reg_n_0),
        .I2(time_tlock_max),
        .I3(rx_state[2]),
        .I4(rx_state[1]),
        .I5(rx_state[3]),
        .O(\FSM_sequential_rx_state[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000100005551555)) 
    \FSM_sequential_rx_state[2]_i_1 
       (.I0(rx_state[3]),
        .I1(rx_state[2]),
        .I2(rx_state[1]),
        .I3(rx_state[0]),
        .I4(time_out_2ms_reg_n_0),
        .I5(\FSM_sequential_rx_state[2]_i_2_n_0 ),
        .O(\FSM_sequential_rx_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2727FF2727272727)) 
    \FSM_sequential_rx_state[2]_i_2 
       (.I0(rx_state[3]),
        .I1(rx_state[1]),
        .I2(rx_state[2]),
        .I3(rx_state[0]),
        .I4(reset_time_out_reg_n_0),
        .I5(time_tlock_max),
        .O(\FSM_sequential_rx_state[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hAAAAAAAB)) 
    \FSM_sequential_rx_state[3]_i_10 
       (.I0(rx_state[3]),
        .I1(rx_state[1]),
        .I2(rx_state[2]),
        .I3(rx_state[0]),
        .I4(init_wait_done_reg_n_0),
        .O(\FSM_sequential_rx_state[3]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000151)) 
    \FSM_sequential_rx_state[3]_i_4 
       (.I0(rx_state[1]),
        .I1(reset_time_out_reg_0),
        .I2(rx_state[0]),
        .I3(mmcm_lock_reclocked),
        .I4(\FSM_sequential_rx_state[2]_i_2_n_0 ),
        .I5(\FSM_sequential_rx_state[3]_i_10_n_0 ),
        .O(\FSM_sequential_rx_state[3]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAEAEFFFFAEFFFFFF)) 
    \FSM_sequential_rx_state[3]_i_6 
       (.I0(rxresetdone_s3),
        .I1(time_out_2ms_reg_n_0),
        .I2(reset_time_out_reg_n_0),
        .I3(rx_state[2]),
        .I4(rx_state[1]),
        .I5(rx_state[3]),
        .O(\FSM_sequential_rx_state[3]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'hCA)) 
    \FSM_sequential_rx_state[3]_i_8 
       (.I0(rx_state[2]),
        .I1(rx_state[1]),
        .I2(rx_state[3]),
        .O(\FSM_sequential_rx_state[3]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hDDD0000000000000)) 
    \FSM_sequential_rx_state[3]_i_9 
       (.I0(time_out_2ms_reg_n_0),
        .I1(reset_time_out_reg_n_0),
        .I2(rx_state[2]),
        .I3(rx_state[3]),
        .I4(rx_state[0]),
        .I5(rx_state[1]),
        .O(\FSM_sequential_rx_state[3]_i_9_n_0 ));
  (* FSM_ENCODED_STATES = "RELEASE_PLL_RESET:0011,VERIFY_RECCLK_STABLE:0100,WAIT_FOR_PLL_LOCK:0010,FSM_DONE:1010,ASSERT_ALL_RESETS:0001,INIT:0000,WAIT_RESET_DONE:0111,MONITOR_DATA_VALID:1001,WAIT_FOR_RXUSRCLK:0110,DO_PHASE_ALIGNMENT:1000,RELEASE_MMCM_RESET:0101" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_rx_state_reg[0] 
       (.C(independent_clock_bufg),
        .CE(sync_data_valid_n_0),
        .D(rx_state__0[0]),
        .Q(rx_state[0]),
        .R(out));
  (* FSM_ENCODED_STATES = "RELEASE_PLL_RESET:0011,VERIFY_RECCLK_STABLE:0100,WAIT_FOR_PLL_LOCK:0010,FSM_DONE:1010,ASSERT_ALL_RESETS:0001,INIT:0000,WAIT_RESET_DONE:0111,MONITOR_DATA_VALID:1001,WAIT_FOR_RXUSRCLK:0110,DO_PHASE_ALIGNMENT:1000,RELEASE_MMCM_RESET:0101" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_rx_state_reg[1] 
       (.C(independent_clock_bufg),
        .CE(sync_data_valid_n_0),
        .D(rx_state__0[1]),
        .Q(rx_state[1]),
        .R(out));
  (* FSM_ENCODED_STATES = "RELEASE_PLL_RESET:0011,VERIFY_RECCLK_STABLE:0100,WAIT_FOR_PLL_LOCK:0010,FSM_DONE:1010,ASSERT_ALL_RESETS:0001,INIT:0000,WAIT_RESET_DONE:0111,MONITOR_DATA_VALID:1001,WAIT_FOR_RXUSRCLK:0110,DO_PHASE_ALIGNMENT:1000,RELEASE_MMCM_RESET:0101" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_rx_state_reg[2] 
       (.C(independent_clock_bufg),
        .CE(sync_data_valid_n_0),
        .D(\FSM_sequential_rx_state[2]_i_1_n_0 ),
        .Q(rx_state[2]),
        .R(out));
  (* FSM_ENCODED_STATES = "RELEASE_PLL_RESET:0011,VERIFY_RECCLK_STABLE:0100,WAIT_FOR_PLL_LOCK:0010,FSM_DONE:1010,ASSERT_ALL_RESETS:0001,INIT:0000,WAIT_RESET_DONE:0111,MONITOR_DATA_VALID:1001,WAIT_FOR_RXUSRCLK:0110,DO_PHASE_ALIGNMENT:1000,RELEASE_MMCM_RESET:0101" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_rx_state_reg[3] 
       (.C(independent_clock_bufg),
        .CE(sync_data_valid_n_0),
        .D(rx_state__0[3]),
        .Q(rx_state[3]),
        .R(out));
  LUT5 #(
    .INIT(32'hFFFB4000)) 
    RXUSERRDY_i_1
       (.I0(rx_state[3]),
        .I1(rx_state[0]),
        .I2(rx_state[2]),
        .I3(rx_state[1]),
        .I4(gt0_rxuserrdy_i),
        .O(RXUSERRDY_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    RXUSERRDY_reg
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(RXUSERRDY_i_1_n_0),
        .Q(gt0_rxuserrdy_i),
        .R(out));
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    check_tlock_max_i_1
       (.I0(rx_state[2]),
        .I1(rx_state[3]),
        .I2(rx_state[0]),
        .I3(rx_state[1]),
        .I4(check_tlock_max_reg_n_0),
        .O(check_tlock_max_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    check_tlock_max_reg
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(check_tlock_max_i_1_n_0),
        .Q(check_tlock_max_reg_n_0),
        .R(out));
  LUT3 #(
    .INIT(8'hEA)) 
    gt0_gtrxreset_gt_d1_i_1
       (.I0(gt0_gtrxreset_t),
        .I1(data_in),
        .I2(gt0_gtrxreset_gt_d1_reg),
        .O(gt0_gtrxreset_gt));
  LUT5 #(
    .INIT(32'hFFFD0004)) 
    gtrxreset_i_i_1
       (.I0(rx_state[2]),
        .I1(rx_state[0]),
        .I2(rx_state[3]),
        .I3(rx_state[1]),
        .I4(gt0_gtrxreset_t),
        .O(gtrxreset_i_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gtrxreset_i_reg
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(gtrxreset_i_i_1_n_0),
        .Q(gt0_gtrxreset_t),
        .R(out));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \init_wait_count[0]_i_1__0 
       (.I0(init_wait_count_reg[0]),
        .O(\init_wait_count[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \init_wait_count[1]_i_1__0 
       (.I0(init_wait_count_reg[0]),
        .I1(init_wait_count_reg[1]),
        .O(p_0_in__2[1]));
  LUT3 #(
    .INIT(8'h6A)) 
    \init_wait_count[2]_i_1__0 
       (.I0(init_wait_count_reg[2]),
        .I1(init_wait_count_reg[0]),
        .I2(init_wait_count_reg[1]),
        .O(p_0_in__2[2]));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \init_wait_count[3]_i_1__0 
       (.I0(init_wait_count_reg[3]),
        .I1(init_wait_count_reg[1]),
        .I2(init_wait_count_reg[0]),
        .I3(init_wait_count_reg[2]),
        .O(p_0_in__2[3]));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \init_wait_count[4]_i_1__0 
       (.I0(init_wait_count_reg[4]),
        .I1(init_wait_count_reg[2]),
        .I2(init_wait_count_reg[0]),
        .I3(init_wait_count_reg[1]),
        .I4(init_wait_count_reg[3]),
        .O(p_0_in__2[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \init_wait_count[5]_i_1__0 
       (.I0(init_wait_count_reg[3]),
        .I1(init_wait_count_reg[1]),
        .I2(init_wait_count_reg[0]),
        .I3(init_wait_count_reg[2]),
        .I4(init_wait_count_reg[4]),
        .I5(init_wait_count_reg[5]),
        .O(p_0_in__2[5]));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \init_wait_count[6]_i_1__0 
       (.I0(init_wait_count_reg[6]),
        .I1(\init_wait_count[7]_i_4__0_n_0 ),
        .O(p_0_in__2[6]));
  LUT5 #(
    .INIT(32'hFEFFFFFF)) 
    \init_wait_count[7]_i_1__1 
       (.I0(\init_wait_count[7]_i_3__1_n_0 ),
        .I1(init_wait_count_reg[7]),
        .I2(init_wait_count_reg[4]),
        .I3(init_wait_count_reg[6]),
        .I4(init_wait_count_reg[1]),
        .O(init_wait_count));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \init_wait_count[7]_i_2__0 
       (.I0(init_wait_count_reg[7]),
        .I1(\init_wait_count[7]_i_4__0_n_0 ),
        .I2(init_wait_count_reg[6]),
        .O(p_0_in__2[7]));
  LUT4 #(
    .INIT(16'hFF7F)) 
    \init_wait_count[7]_i_3__1 
       (.I0(init_wait_count_reg[3]),
        .I1(init_wait_count_reg[2]),
        .I2(init_wait_count_reg[5]),
        .I3(init_wait_count_reg[0]),
        .O(\init_wait_count[7]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \init_wait_count[7]_i_4__0 
       (.I0(init_wait_count_reg[5]),
        .I1(init_wait_count_reg[4]),
        .I2(init_wait_count_reg[2]),
        .I3(init_wait_count_reg[0]),
        .I4(init_wait_count_reg[1]),
        .I5(init_wait_count_reg[3]),
        .O(\init_wait_count[7]_i_4__0_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[0] 
       (.C(independent_clock_bufg),
        .CE(init_wait_count),
        .CLR(out),
        .D(\init_wait_count[0]_i_1__0_n_0 ),
        .Q(init_wait_count_reg[0]));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[1] 
       (.C(independent_clock_bufg),
        .CE(init_wait_count),
        .CLR(out),
        .D(p_0_in__2[1]),
        .Q(init_wait_count_reg[1]));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[2] 
       (.C(independent_clock_bufg),
        .CE(init_wait_count),
        .CLR(out),
        .D(p_0_in__2[2]),
        .Q(init_wait_count_reg[2]));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[3] 
       (.C(independent_clock_bufg),
        .CE(init_wait_count),
        .CLR(out),
        .D(p_0_in__2[3]),
        .Q(init_wait_count_reg[3]));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[4] 
       (.C(independent_clock_bufg),
        .CE(init_wait_count),
        .CLR(out),
        .D(p_0_in__2[4]),
        .Q(init_wait_count_reg[4]));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[5] 
       (.C(independent_clock_bufg),
        .CE(init_wait_count),
        .CLR(out),
        .D(p_0_in__2[5]),
        .Q(init_wait_count_reg[5]));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[6] 
       (.C(independent_clock_bufg),
        .CE(init_wait_count),
        .CLR(out),
        .D(p_0_in__2[6]),
        .Q(init_wait_count_reg[6]));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[7] 
       (.C(independent_clock_bufg),
        .CE(init_wait_count),
        .CLR(out),
        .D(p_0_in__2[7]),
        .Q(init_wait_count_reg[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFF01000000)) 
    init_wait_done_i_1__0
       (.I0(\init_wait_count[7]_i_3__1_n_0 ),
        .I1(init_wait_count_reg[7]),
        .I2(init_wait_count_reg[4]),
        .I3(init_wait_count_reg[6]),
        .I4(init_wait_count_reg[1]),
        .I5(init_wait_done_reg_n_0),
        .O(init_wait_done_i_1__0_n_0));
  FDCE #(
    .INIT(1'b0)) 
    init_wait_done_reg
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .CLR(out),
        .D(init_wait_done_i_1__0_n_0),
        .Q(init_wait_done_reg_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \mmcm_lock_count[0]_i_1__0 
       (.I0(mmcm_lock_count_reg[0]),
        .O(p_0_in__3[0]));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \mmcm_lock_count[1]_i_1__0 
       (.I0(mmcm_lock_count_reg[1]),
        .I1(mmcm_lock_count_reg[0]),
        .O(p_0_in__3[1]));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \mmcm_lock_count[2]_i_1__0 
       (.I0(mmcm_lock_count_reg[2]),
        .I1(mmcm_lock_count_reg[1]),
        .I2(mmcm_lock_count_reg[0]),
        .O(p_0_in__3[2]));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \mmcm_lock_count[3]_i_1__0 
       (.I0(mmcm_lock_count_reg[3]),
        .I1(mmcm_lock_count_reg[0]),
        .I2(mmcm_lock_count_reg[1]),
        .I3(mmcm_lock_count_reg[2]),
        .O(p_0_in__3[3]));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \mmcm_lock_count[4]_i_1__0 
       (.I0(mmcm_lock_count_reg[4]),
        .I1(mmcm_lock_count_reg[2]),
        .I2(mmcm_lock_count_reg[1]),
        .I3(mmcm_lock_count_reg[0]),
        .I4(mmcm_lock_count_reg[3]),
        .O(p_0_in__3[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \mmcm_lock_count[5]_i_1__0 
       (.I0(mmcm_lock_count_reg[3]),
        .I1(mmcm_lock_count_reg[0]),
        .I2(mmcm_lock_count_reg[1]),
        .I3(mmcm_lock_count_reg[2]),
        .I4(mmcm_lock_count_reg[4]),
        .I5(mmcm_lock_count_reg[5]),
        .O(p_0_in__3[5]));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \mmcm_lock_count[6]_i_1__0 
       (.I0(mmcm_lock_count_reg[6]),
        .I1(\mmcm_lock_count[7]_i_4__0_n_0 ),
        .O(p_0_in__3[6]));
  LUT3 #(
    .INIT(8'h7F)) 
    \mmcm_lock_count[7]_i_2__0 
       (.I0(mmcm_lock_count_reg[6]),
        .I1(\mmcm_lock_count[7]_i_4__0_n_0 ),
        .I2(mmcm_lock_count_reg[7]),
        .O(\mmcm_lock_count[7]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \mmcm_lock_count[7]_i_3__0 
       (.I0(mmcm_lock_count_reg[7]),
        .I1(\mmcm_lock_count[7]_i_4__0_n_0 ),
        .I2(mmcm_lock_count_reg[6]),
        .O(p_0_in__3[7]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \mmcm_lock_count[7]_i_4__0 
       (.I0(mmcm_lock_count_reg[5]),
        .I1(mmcm_lock_count_reg[4]),
        .I2(mmcm_lock_count_reg[2]),
        .I3(mmcm_lock_count_reg[1]),
        .I4(mmcm_lock_count_reg[0]),
        .I5(mmcm_lock_count_reg[3]),
        .O(\mmcm_lock_count[7]_i_4__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[0] 
       (.C(independent_clock_bufg),
        .CE(\mmcm_lock_count[7]_i_2__0_n_0 ),
        .D(p_0_in__3[0]),
        .Q(mmcm_lock_count_reg[0]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[1] 
       (.C(independent_clock_bufg),
        .CE(\mmcm_lock_count[7]_i_2__0_n_0 ),
        .D(p_0_in__3[1]),
        .Q(mmcm_lock_count_reg[1]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[2] 
       (.C(independent_clock_bufg),
        .CE(\mmcm_lock_count[7]_i_2__0_n_0 ),
        .D(p_0_in__3[2]),
        .Q(mmcm_lock_count_reg[2]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[3] 
       (.C(independent_clock_bufg),
        .CE(\mmcm_lock_count[7]_i_2__0_n_0 ),
        .D(p_0_in__3[3]),
        .Q(mmcm_lock_count_reg[3]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[4] 
       (.C(independent_clock_bufg),
        .CE(\mmcm_lock_count[7]_i_2__0_n_0 ),
        .D(p_0_in__3[4]),
        .Q(mmcm_lock_count_reg[4]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[5] 
       (.C(independent_clock_bufg),
        .CE(\mmcm_lock_count[7]_i_2__0_n_0 ),
        .D(p_0_in__3[5]),
        .Q(mmcm_lock_count_reg[5]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[6] 
       (.C(independent_clock_bufg),
        .CE(\mmcm_lock_count[7]_i_2__0_n_0 ),
        .D(p_0_in__3[6]),
        .Q(mmcm_lock_count_reg[6]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[7] 
       (.C(independent_clock_bufg),
        .CE(\mmcm_lock_count[7]_i_2__0_n_0 ),
        .D(p_0_in__3[7]),
        .Q(mmcm_lock_count_reg[7]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    mmcm_lock_reclocked_reg
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(sync_mmcm_lock_reclocked_n_1),
        .Q(mmcm_lock_reclocked),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hB)) 
    reset_time_out_i_2__0
       (.I0(rxresetdone_s3),
        .I1(rx_state[1]),
        .O(reset_time_out_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    reset_time_out_i_3__0
       (.I0(rx_state[2]),
        .I1(rx_state[3]),
        .O(check_tlock_max));
  LUT4 #(
    .INIT(16'hFEAE)) 
    reset_time_out_i_4
       (.I0(rx_state[1]),
        .I1(reset_time_out_reg_0),
        .I2(rx_state[0]),
        .I3(mmcm_lock_reclocked),
        .O(reset_time_out_i_4_n_0));
  LUT5 #(
    .INIT(32'h0F303F38)) 
    reset_time_out_i_6
       (.I0(reset_time_out_reg_0),
        .I1(rx_state[2]),
        .I2(rx_state[3]),
        .I3(rx_state[0]),
        .I4(rx_state[1]),
        .O(reset_time_out_i_6_n_0));
  FDSE #(
    .INIT(1'b0)) 
    reset_time_out_reg
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(sync_pll0lock_n_1),
        .Q(reset_time_out_reg_n_0),
        .S(out));
  LUT5 #(
    .INIT(32'hFFFB0002)) 
    run_phase_alignment_int_i_1__0
       (.I0(rx_state[3]),
        .I1(rx_state[0]),
        .I2(rx_state[2]),
        .I3(rx_state[1]),
        .I4(run_phase_alignment_int_reg_n_0),
        .O(run_phase_alignment_int_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    run_phase_alignment_int_reg
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(run_phase_alignment_int_i_1__0_n_0),
        .Q(run_phase_alignment_int_reg_n_0),
        .R(out));
  FDRE #(
    .INIT(1'b0)) 
    run_phase_alignment_int_s3_reg
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(run_phase_alignment_int_s2),
        .Q(run_phase_alignment_int_s3_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    rx_fsm_reset_done_int_reg
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(sync_data_valid_n_5),
        .Q(data_in),
        .R(out));
  FDRE #(
    .INIT(1'b0)) 
    rx_fsm_reset_done_int_s3_reg
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(rx_fsm_reset_done_int_s2),
        .Q(rx_fsm_reset_done_int_s3),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    rxresetdone_s3_reg
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(rxresetdone_s2),
        .Q(rxresetdone_s3),
        .R(1'b0));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_27 sync_RXRESETDONE
       (.data_out(rxresetdone_s2),
        .data_sync_reg1_0(data_sync_reg1),
        .independent_clock_bufg(independent_clock_bufg));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_28 sync_data_valid
       (.D({rx_state__0[3],rx_state__0[1:0]}),
        .E(sync_data_valid_n_0),
        .\FSM_sequential_rx_state_reg[0] (\FSM_sequential_rx_state[3]_i_4_n_0 ),
        .\FSM_sequential_rx_state_reg[0]_0 (\wait_time_cnt[0]_i_2__0_n_0 ),
        .\FSM_sequential_rx_state_reg[0]_1 (sync_pll0lock_n_0),
        .\FSM_sequential_rx_state_reg[0]_2 (\FSM_sequential_rx_state[3]_i_6_n_0 ),
        .\FSM_sequential_rx_state_reg[0]_3 (\FSM_sequential_rx_state[0]_i_2_n_0 ),
        .\FSM_sequential_rx_state_reg[0]_4 (\FSM_sequential_rx_state[1]_i_2_n_0 ),
        .\FSM_sequential_rx_state_reg[2] (sync_data_valid_n_5),
        .\FSM_sequential_rx_state_reg[3] (\FSM_sequential_rx_state[3]_i_8_n_0 ),
        .\FSM_sequential_rx_state_reg[3]_0 (\FSM_sequential_rx_state[3]_i_9_n_0 ),
        .Q(rx_state),
        .data_in(data_in),
        .data_out(data_valid_sync),
        .data_sync_reg1_0(data_out),
        .independent_clock_bufg(independent_clock_bufg),
        .rx_fsm_reset_done_int_reg(time_out_100us_reg_n_0),
        .rx_fsm_reset_done_int_reg_0(reset_time_out_reg_n_0),
        .rx_fsm_reset_done_int_reg_1(time_out_1us_reg_n_0),
        .time_out_wait_bypass_s3(time_out_wait_bypass_s3));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_29 sync_mmcm_lock_reclocked
       (.Q(mmcm_lock_count_reg[7:6]),
        .SR(sync_mmcm_lock_reclocked_n_0),
        .data_sync_reg1_0(data_sync_reg1_0),
        .independent_clock_bufg(independent_clock_bufg),
        .mmcm_lock_reclocked(mmcm_lock_reclocked),
        .mmcm_lock_reclocked_reg(sync_mmcm_lock_reclocked_n_1),
        .mmcm_lock_reclocked_reg_0(\mmcm_lock_count[7]_i_4__0_n_0 ));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_30 sync_pll0lock
       (.\FSM_sequential_rx_state_reg[0] (sync_pll0lock_n_0),
        .\FSM_sequential_rx_state_reg[0]_0 (time_out_2ms_reg_n_0),
        .Q(rx_state),
        .check_tlock_max(check_tlock_max),
        .data_out(data_valid_sync),
        .gt0_pll0lock_out(gt0_pll0lock_out),
        .independent_clock_bufg(independent_clock_bufg),
        .reset_time_out_reg(sync_pll0lock_n_1),
        .reset_time_out_reg_0(reset_time_out_i_2__0_n_0),
        .reset_time_out_reg_1(reset_time_out_i_4_n_0),
        .reset_time_out_reg_2(reset_time_out_i_6_n_0),
        .reset_time_out_reg_3(reset_time_out_reg_n_0));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_31 sync_run_phase_alignment_int
       (.data_in(run_phase_alignment_int_reg_n_0),
        .data_out(run_phase_alignment_int_s2),
        .rxuserclk2(rxuserclk2));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_32 sync_rx_fsm_reset_done_int
       (.data_in(data_in),
        .data_out(rx_fsm_reset_done_int_s2),
        .rxuserclk2(rxuserclk2));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_33 sync_time_out_wait_bypass
       (.data_in(time_out_wait_bypass_reg_n_0),
        .data_out(time_out_wait_bypass_s2),
        .independent_clock_bufg(independent_clock_bufg));
  LUT5 #(
    .INIT(32'hFFFF0040)) 
    time_out_100us_i_1
       (.I0(time_out_100us_i_2_n_0),
        .I1(time_out_100us_i_3_n_0),
        .I2(time_out_100us_i_4_n_0),
        .I3(time_out_100us_i_5_n_0),
        .I4(time_out_100us_reg_n_0),
        .O(time_out_100us_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFF4)) 
    time_out_100us_i_2
       (.I0(time_out_counter_reg[16]),
        .I1(time_out_counter_reg[15]),
        .I2(time_out_counter_reg[17]),
        .I3(time_out_counter_reg[19]),
        .I4(time_out_counter_reg[12]),
        .I5(time_out_counter_reg[13]),
        .O(time_out_100us_i_2_n_0));
  LUT5 #(
    .INIT(32'h00000001)) 
    time_out_100us_i_3
       (.I0(time_out_counter_reg[0]),
        .I1(time_out_counter_reg[1]),
        .I2(time_out_counter_reg[2]),
        .I3(time_out_counter_reg[4]),
        .I4(time_out_counter_reg[3]),
        .O(time_out_100us_i_3_n_0));
  LUT5 #(
    .INIT(32'h00100000)) 
    time_out_100us_i_4
       (.I0(time_out_counter_reg[17]),
        .I1(time_out_counter_reg[18]),
        .I2(time_out_counter_reg[14]),
        .I3(time_out_counter_reg[16]),
        .I4(time_out_counter_reg[5]),
        .O(time_out_100us_i_4_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFF7F)) 
    time_out_100us_i_5
       (.I0(time_out_counter_reg[11]),
        .I1(time_out_counter_reg[9]),
        .I2(time_out_counter_reg[10]),
        .I3(time_out_counter_reg[6]),
        .I4(time_out_counter_reg[7]),
        .I5(time_out_counter_reg[8]),
        .O(time_out_100us_i_5_n_0));
  FDRE #(
    .INIT(1'b0)) 
    time_out_100us_reg
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(time_out_100us_i_1_n_0),
        .Q(time_out_100us_reg_n_0),
        .R(reset_time_out_reg_n_0));
  LUT4 #(
    .INIT(16'hFF10)) 
    time_out_1us_i_1
       (.I0(\time_out_counter[0]_i_5_n_0 ),
        .I1(time_out_100us_i_2_n_0),
        .I2(time_out_1us_i_2_n_0),
        .I3(time_out_1us_reg_n_0),
        .O(time_out_1us_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000000020)) 
    time_out_1us_i_2
       (.I0(\time_out_counter[0]_i_4__0_n_0 ),
        .I1(time_out_counter_reg[10]),
        .I2(time_out_counter_reg[3]),
        .I3(time_out_counter_reg[9]),
        .I4(time_out_counter_reg[16]),
        .I5(time_out_counter_reg[8]),
        .O(time_out_1us_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    time_out_1us_reg
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(time_out_1us_i_1_n_0),
        .Q(time_out_1us_reg_n_0),
        .R(reset_time_out_reg_n_0));
  LUT4 #(
    .INIT(16'hFF01)) 
    time_out_2ms_i_1
       (.I0(\time_out_counter[0]_i_3_n_0 ),
        .I1(time_out_2ms_i_2_n_0),
        .I2(\time_out_counter[0]_i_5_n_0 ),
        .I3(time_out_2ms_reg_n_0),
        .O(time_out_2ms_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFEFFFFFFF)) 
    time_out_2ms_i_2
       (.I0(time_out_counter_reg[11]),
        .I1(time_out_counter_reg[14]),
        .I2(time_out_2ms_i_3_n_0),
        .I3(time_out_counter_reg[19]),
        .I4(time_out_counter_reg[16]),
        .I5(time_out_counter_reg[12]),
        .O(time_out_2ms_i_2_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    time_out_2ms_i_3
       (.I0(time_out_counter_reg[18]),
        .I1(time_out_counter_reg[17]),
        .O(time_out_2ms_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    time_out_2ms_reg
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(time_out_2ms_i_1_n_0),
        .Q(time_out_2ms_reg_n_0),
        .R(reset_time_out_reg_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFEFFFFFFF)) 
    \time_out_counter[0]_i_1 
       (.I0(\time_out_counter[0]_i_3_n_0 ),
        .I1(time_out_counter_reg[12]),
        .I2(time_out_counter_reg[16]),
        .I3(time_out_counter_reg[19]),
        .I4(\time_out_counter[0]_i_4__0_n_0 ),
        .I5(\time_out_counter[0]_i_5_n_0 ),
        .O(time_out_counter));
  LUT6 #(
    .INIT(64'hFFF7FFFFFFFFFFFF)) 
    \time_out_counter[0]_i_3 
       (.I0(time_out_counter_reg[10]),
        .I1(time_out_counter_reg[9]),
        .I2(time_out_counter_reg[15]),
        .I3(time_out_counter_reg[3]),
        .I4(time_out_counter_reg[8]),
        .I5(time_out_counter_reg[13]),
        .O(\time_out_counter[0]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \time_out_counter[0]_i_4__0 
       (.I0(time_out_counter_reg[17]),
        .I1(time_out_counter_reg[18]),
        .I2(time_out_counter_reg[14]),
        .I3(time_out_counter_reg[11]),
        .O(\time_out_counter[0]_i_4__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFDFFFFF)) 
    \time_out_counter[0]_i_5 
       (.I0(\time_out_counter[0]_i_7_n_0 ),
        .I1(time_out_counter_reg[5]),
        .I2(time_out_counter_reg[7]),
        .I3(time_out_counter_reg[4]),
        .I4(time_out_counter_reg[6]),
        .O(\time_out_counter[0]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \time_out_counter[0]_i_6 
       (.I0(time_out_counter_reg[0]),
        .O(\time_out_counter[0]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \time_out_counter[0]_i_7 
       (.I0(time_out_counter_reg[2]),
        .I1(time_out_counter_reg[1]),
        .I2(time_out_counter_reg[0]),
        .O(\time_out_counter[0]_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[0] 
       (.C(independent_clock_bufg),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[0]_i_2__0_n_7 ),
        .Q(time_out_counter_reg[0]),
        .R(reset_time_out_reg_n_0));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \time_out_counter_reg[0]_i_2__0 
       (.CI(1'b0),
        .CO({\time_out_counter_reg[0]_i_2__0_n_0 ,\NLW_time_out_counter_reg[0]_i_2__0_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\time_out_counter_reg[0]_i_2__0_n_4 ,\time_out_counter_reg[0]_i_2__0_n_5 ,\time_out_counter_reg[0]_i_2__0_n_6 ,\time_out_counter_reg[0]_i_2__0_n_7 }),
        .S({time_out_counter_reg[3:1],\time_out_counter[0]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[10] 
       (.C(independent_clock_bufg),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[8]_i_1__0_n_5 ),
        .Q(time_out_counter_reg[10]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[11] 
       (.C(independent_clock_bufg),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[8]_i_1__0_n_4 ),
        .Q(time_out_counter_reg[11]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[12] 
       (.C(independent_clock_bufg),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[12]_i_1__0_n_7 ),
        .Q(time_out_counter_reg[12]),
        .R(reset_time_out_reg_n_0));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \time_out_counter_reg[12]_i_1__0 
       (.CI(\time_out_counter_reg[8]_i_1__0_n_0 ),
        .CO({\time_out_counter_reg[12]_i_1__0_n_0 ,\NLW_time_out_counter_reg[12]_i_1__0_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\time_out_counter_reg[12]_i_1__0_n_4 ,\time_out_counter_reg[12]_i_1__0_n_5 ,\time_out_counter_reg[12]_i_1__0_n_6 ,\time_out_counter_reg[12]_i_1__0_n_7 }),
        .S(time_out_counter_reg[15:12]));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[13] 
       (.C(independent_clock_bufg),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[12]_i_1__0_n_6 ),
        .Q(time_out_counter_reg[13]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[14] 
       (.C(independent_clock_bufg),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[12]_i_1__0_n_5 ),
        .Q(time_out_counter_reg[14]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[15] 
       (.C(independent_clock_bufg),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[12]_i_1__0_n_4 ),
        .Q(time_out_counter_reg[15]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[16] 
       (.C(independent_clock_bufg),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[16]_i_1__0_n_7 ),
        .Q(time_out_counter_reg[16]),
        .R(reset_time_out_reg_n_0));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \time_out_counter_reg[16]_i_1__0 
       (.CI(\time_out_counter_reg[12]_i_1__0_n_0 ),
        .CO(\NLW_time_out_counter_reg[16]_i_1__0_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\time_out_counter_reg[16]_i_1__0_n_4 ,\time_out_counter_reg[16]_i_1__0_n_5 ,\time_out_counter_reg[16]_i_1__0_n_6 ,\time_out_counter_reg[16]_i_1__0_n_7 }),
        .S(time_out_counter_reg[19:16]));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[17] 
       (.C(independent_clock_bufg),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[16]_i_1__0_n_6 ),
        .Q(time_out_counter_reg[17]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[18] 
       (.C(independent_clock_bufg),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[16]_i_1__0_n_5 ),
        .Q(time_out_counter_reg[18]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[19] 
       (.C(independent_clock_bufg),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[16]_i_1__0_n_4 ),
        .Q(time_out_counter_reg[19]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[1] 
       (.C(independent_clock_bufg),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[0]_i_2__0_n_6 ),
        .Q(time_out_counter_reg[1]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[2] 
       (.C(independent_clock_bufg),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[0]_i_2__0_n_5 ),
        .Q(time_out_counter_reg[2]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[3] 
       (.C(independent_clock_bufg),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[0]_i_2__0_n_4 ),
        .Q(time_out_counter_reg[3]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[4] 
       (.C(independent_clock_bufg),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[4]_i_1__0_n_7 ),
        .Q(time_out_counter_reg[4]),
        .R(reset_time_out_reg_n_0));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \time_out_counter_reg[4]_i_1__0 
       (.CI(\time_out_counter_reg[0]_i_2__0_n_0 ),
        .CO({\time_out_counter_reg[4]_i_1__0_n_0 ,\NLW_time_out_counter_reg[4]_i_1__0_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\time_out_counter_reg[4]_i_1__0_n_4 ,\time_out_counter_reg[4]_i_1__0_n_5 ,\time_out_counter_reg[4]_i_1__0_n_6 ,\time_out_counter_reg[4]_i_1__0_n_7 }),
        .S(time_out_counter_reg[7:4]));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[5] 
       (.C(independent_clock_bufg),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[4]_i_1__0_n_6 ),
        .Q(time_out_counter_reg[5]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[6] 
       (.C(independent_clock_bufg),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[4]_i_1__0_n_5 ),
        .Q(time_out_counter_reg[6]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[7] 
       (.C(independent_clock_bufg),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[4]_i_1__0_n_4 ),
        .Q(time_out_counter_reg[7]),
        .R(reset_time_out_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[8] 
       (.C(independent_clock_bufg),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[8]_i_1__0_n_7 ),
        .Q(time_out_counter_reg[8]),
        .R(reset_time_out_reg_n_0));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \time_out_counter_reg[8]_i_1__0 
       (.CI(\time_out_counter_reg[4]_i_1__0_n_0 ),
        .CO({\time_out_counter_reg[8]_i_1__0_n_0 ,\NLW_time_out_counter_reg[8]_i_1__0_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\time_out_counter_reg[8]_i_1__0_n_4 ,\time_out_counter_reg[8]_i_1__0_n_5 ,\time_out_counter_reg[8]_i_1__0_n_6 ,\time_out_counter_reg[8]_i_1__0_n_7 }),
        .S(time_out_counter_reg[11:8]));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[9] 
       (.C(independent_clock_bufg),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[8]_i_1__0_n_6 ),
        .Q(time_out_counter_reg[9]),
        .R(reset_time_out_reg_n_0));
  LUT4 #(
    .INIT(16'hAB00)) 
    time_out_wait_bypass_i_1__0
       (.I0(time_out_wait_bypass_reg_n_0),
        .I1(rx_fsm_reset_done_int_s3),
        .I2(\wait_bypass_count[0]_i_4__0_n_0 ),
        .I3(run_phase_alignment_int_s3_reg_n_0),
        .O(time_out_wait_bypass_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    time_out_wait_bypass_reg
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(time_out_wait_bypass_i_1__0_n_0),
        .Q(time_out_wait_bypass_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    time_out_wait_bypass_s3_reg
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(time_out_wait_bypass_s2),
        .Q(time_out_wait_bypass_s3),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFFFF200)) 
    time_tlock_max_i_1
       (.I0(time_out_counter_reg[14]),
        .I1(time_tlock_max_i_2_n_0),
        .I2(time_tlock_max_i_3_n_0),
        .I3(check_tlock_max_reg_n_0),
        .I4(time_tlock_max),
        .O(time_tlock_max_i_1_n_0));
  LUT6 #(
    .INIT(64'h000000000000FF8A)) 
    time_tlock_max_i_2
       (.I0(time_tlock_max_i_4_n_0),
        .I1(time_out_100us_i_3_n_0),
        .I2(time_out_counter_reg[5]),
        .I3(time_tlock_max_i_5_n_0),
        .I4(time_out_counter_reg[13]),
        .I5(time_out_counter_reg[12]),
        .O(time_tlock_max_i_2_n_0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    time_tlock_max_i_3
       (.I0(time_out_counter_reg[17]),
        .I1(time_out_counter_reg[18]),
        .I2(time_out_counter_reg[15]),
        .I3(time_out_counter_reg[16]),
        .I4(time_out_counter_reg[19]),
        .O(time_tlock_max_i_3_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    time_tlock_max_i_4
       (.I0(time_out_counter_reg[8]),
        .I1(time_out_counter_reg[7]),
        .I2(time_out_counter_reg[6]),
        .O(time_tlock_max_i_4_n_0));
  LUT3 #(
    .INIT(8'h7F)) 
    time_tlock_max_i_5
       (.I0(time_out_counter_reg[10]),
        .I1(time_out_counter_reg[9]),
        .I2(time_out_counter_reg[11]),
        .O(time_tlock_max_i_5_n_0));
  FDRE #(
    .INIT(1'b0)) 
    time_tlock_max_reg
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(time_tlock_max_i_1_n_0),
        .Q(time_tlock_max),
        .R(reset_time_out_reg_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_bypass_count[0]_i_1__0 
       (.I0(run_phase_alignment_int_s3_reg_n_0),
        .O(\wait_bypass_count[0]_i_1__0_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \wait_bypass_count[0]_i_2__0 
       (.I0(\wait_bypass_count[0]_i_4__0_n_0 ),
        .I1(rx_fsm_reset_done_int_s3),
        .O(\wait_bypass_count[0]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'hFBFFFFFF)) 
    \wait_bypass_count[0]_i_4__0 
       (.I0(\wait_bypass_count[0]_i_6__0_n_0 ),
        .I1(wait_bypass_count_reg[1]),
        .I2(wait_bypass_count_reg[11]),
        .I3(wait_bypass_count_reg[0]),
        .I4(\wait_bypass_count[0]_i_7__0_n_0 ),
        .O(\wait_bypass_count[0]_i_4__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_bypass_count[0]_i_5__0 
       (.I0(wait_bypass_count_reg[0]),
        .O(\wait_bypass_count[0]_i_5__0_n_0 ));
  LUT4 #(
    .INIT(16'hDFFF)) 
    \wait_bypass_count[0]_i_6__0 
       (.I0(wait_bypass_count_reg[9]),
        .I1(wait_bypass_count_reg[4]),
        .I2(wait_bypass_count_reg[12]),
        .I3(wait_bypass_count_reg[2]),
        .O(\wait_bypass_count[0]_i_6__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000400000000)) 
    \wait_bypass_count[0]_i_7__0 
       (.I0(wait_bypass_count_reg[5]),
        .I1(wait_bypass_count_reg[7]),
        .I2(wait_bypass_count_reg[3]),
        .I3(wait_bypass_count_reg[6]),
        .I4(wait_bypass_count_reg[10]),
        .I5(wait_bypass_count_reg[8]),
        .O(\wait_bypass_count[0]_i_7__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[0] 
       (.C(rxuserclk2),
        .CE(\wait_bypass_count[0]_i_2__0_n_0 ),
        .D(\wait_bypass_count_reg[0]_i_3__0_n_7 ),
        .Q(wait_bypass_count_reg[0]),
        .R(\wait_bypass_count[0]_i_1__0_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \wait_bypass_count_reg[0]_i_3__0 
       (.CI(1'b0),
        .CO({\wait_bypass_count_reg[0]_i_3__0_n_0 ,\NLW_wait_bypass_count_reg[0]_i_3__0_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\wait_bypass_count_reg[0]_i_3__0_n_4 ,\wait_bypass_count_reg[0]_i_3__0_n_5 ,\wait_bypass_count_reg[0]_i_3__0_n_6 ,\wait_bypass_count_reg[0]_i_3__0_n_7 }),
        .S({wait_bypass_count_reg[3:1],\wait_bypass_count[0]_i_5__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[10] 
       (.C(rxuserclk2),
        .CE(\wait_bypass_count[0]_i_2__0_n_0 ),
        .D(\wait_bypass_count_reg[8]_i_1__0_n_5 ),
        .Q(wait_bypass_count_reg[10]),
        .R(\wait_bypass_count[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[11] 
       (.C(rxuserclk2),
        .CE(\wait_bypass_count[0]_i_2__0_n_0 ),
        .D(\wait_bypass_count_reg[8]_i_1__0_n_4 ),
        .Q(wait_bypass_count_reg[11]),
        .R(\wait_bypass_count[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[12] 
       (.C(rxuserclk2),
        .CE(\wait_bypass_count[0]_i_2__0_n_0 ),
        .D(\wait_bypass_count_reg[12]_i_1__0_n_7 ),
        .Q(wait_bypass_count_reg[12]),
        .R(\wait_bypass_count[0]_i_1__0_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \wait_bypass_count_reg[12]_i_1__0 
       (.CI(\wait_bypass_count_reg[8]_i_1__0_n_0 ),
        .CO(\NLW_wait_bypass_count_reg[12]_i_1__0_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_wait_bypass_count_reg[12]_i_1__0_O_UNCONNECTED [3:1],\wait_bypass_count_reg[12]_i_1__0_n_7 }),
        .S({1'b0,1'b0,1'b0,wait_bypass_count_reg[12]}));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[1] 
       (.C(rxuserclk2),
        .CE(\wait_bypass_count[0]_i_2__0_n_0 ),
        .D(\wait_bypass_count_reg[0]_i_3__0_n_6 ),
        .Q(wait_bypass_count_reg[1]),
        .R(\wait_bypass_count[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[2] 
       (.C(rxuserclk2),
        .CE(\wait_bypass_count[0]_i_2__0_n_0 ),
        .D(\wait_bypass_count_reg[0]_i_3__0_n_5 ),
        .Q(wait_bypass_count_reg[2]),
        .R(\wait_bypass_count[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[3] 
       (.C(rxuserclk2),
        .CE(\wait_bypass_count[0]_i_2__0_n_0 ),
        .D(\wait_bypass_count_reg[0]_i_3__0_n_4 ),
        .Q(wait_bypass_count_reg[3]),
        .R(\wait_bypass_count[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[4] 
       (.C(rxuserclk2),
        .CE(\wait_bypass_count[0]_i_2__0_n_0 ),
        .D(\wait_bypass_count_reg[4]_i_1__0_n_7 ),
        .Q(wait_bypass_count_reg[4]),
        .R(\wait_bypass_count[0]_i_1__0_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \wait_bypass_count_reg[4]_i_1__0 
       (.CI(\wait_bypass_count_reg[0]_i_3__0_n_0 ),
        .CO({\wait_bypass_count_reg[4]_i_1__0_n_0 ,\NLW_wait_bypass_count_reg[4]_i_1__0_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\wait_bypass_count_reg[4]_i_1__0_n_4 ,\wait_bypass_count_reg[4]_i_1__0_n_5 ,\wait_bypass_count_reg[4]_i_1__0_n_6 ,\wait_bypass_count_reg[4]_i_1__0_n_7 }),
        .S(wait_bypass_count_reg[7:4]));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[5] 
       (.C(rxuserclk2),
        .CE(\wait_bypass_count[0]_i_2__0_n_0 ),
        .D(\wait_bypass_count_reg[4]_i_1__0_n_6 ),
        .Q(wait_bypass_count_reg[5]),
        .R(\wait_bypass_count[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[6] 
       (.C(rxuserclk2),
        .CE(\wait_bypass_count[0]_i_2__0_n_0 ),
        .D(\wait_bypass_count_reg[4]_i_1__0_n_5 ),
        .Q(wait_bypass_count_reg[6]),
        .R(\wait_bypass_count[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[7] 
       (.C(rxuserclk2),
        .CE(\wait_bypass_count[0]_i_2__0_n_0 ),
        .D(\wait_bypass_count_reg[4]_i_1__0_n_4 ),
        .Q(wait_bypass_count_reg[7]),
        .R(\wait_bypass_count[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[8] 
       (.C(rxuserclk2),
        .CE(\wait_bypass_count[0]_i_2__0_n_0 ),
        .D(\wait_bypass_count_reg[8]_i_1__0_n_7 ),
        .Q(wait_bypass_count_reg[8]),
        .R(\wait_bypass_count[0]_i_1__0_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \wait_bypass_count_reg[8]_i_1__0 
       (.CI(\wait_bypass_count_reg[4]_i_1__0_n_0 ),
        .CO({\wait_bypass_count_reg[8]_i_1__0_n_0 ,\NLW_wait_bypass_count_reg[8]_i_1__0_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\wait_bypass_count_reg[8]_i_1__0_n_4 ,\wait_bypass_count_reg[8]_i_1__0_n_5 ,\wait_bypass_count_reg[8]_i_1__0_n_6 ,\wait_bypass_count_reg[8]_i_1__0_n_7 }),
        .S(wait_bypass_count_reg[11:8]));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[9] 
       (.C(rxuserclk2),
        .CE(\wait_bypass_count[0]_i_2__0_n_0 ),
        .D(\wait_bypass_count_reg[8]_i_1__0_n_6 ),
        .Q(wait_bypass_count_reg[9]),
        .R(\wait_bypass_count[0]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'h04)) 
    \wait_time_cnt[0]_i_1 
       (.I0(rx_state[3]),
        .I1(rx_state[0]),
        .I2(rx_state[1]),
        .O(\wait_time_cnt[0]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[0]_i_10__0 
       (.I0(wait_time_cnt_reg[1]),
        .O(\wait_time_cnt[0]_i_10__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[0]_i_11__0 
       (.I0(wait_time_cnt_reg[0]),
        .O(\wait_time_cnt[0]_i_11__0_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \wait_time_cnt[0]_i_2__0 
       (.I0(\wait_time_cnt[0]_i_4__0_n_0 ),
        .I1(\wait_time_cnt[0]_i_5__0_n_0 ),
        .I2(\wait_time_cnt[0]_i_6__0_n_0 ),
        .I3(\wait_time_cnt[0]_i_7__0_n_0 ),
        .O(\wait_time_cnt[0]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \wait_time_cnt[0]_i_4__0 
       (.I0(wait_time_cnt_reg[14]),
        .I1(wait_time_cnt_reg[12]),
        .I2(wait_time_cnt_reg[9]),
        .I3(wait_time_cnt_reg[10]),
        .O(\wait_time_cnt[0]_i_4__0_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \wait_time_cnt[0]_i_5__0 
       (.I0(wait_time_cnt_reg[0]),
        .I1(wait_time_cnt_reg[15]),
        .I2(wait_time_cnt_reg[13]),
        .I3(wait_time_cnt_reg[3]),
        .O(\wait_time_cnt[0]_i_5__0_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \wait_time_cnt[0]_i_6__0 
       (.I0(wait_time_cnt_reg[7]),
        .I1(wait_time_cnt_reg[4]),
        .I2(wait_time_cnt_reg[6]),
        .I3(wait_time_cnt_reg[5]),
        .O(\wait_time_cnt[0]_i_6__0_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \wait_time_cnt[0]_i_7__0 
       (.I0(wait_time_cnt_reg[1]),
        .I1(wait_time_cnt_reg[2]),
        .I2(wait_time_cnt_reg[8]),
        .I3(wait_time_cnt_reg[11]),
        .O(\wait_time_cnt[0]_i_7__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[0]_i_8__0 
       (.I0(wait_time_cnt_reg[3]),
        .O(\wait_time_cnt[0]_i_8__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[0]_i_9__0 
       (.I0(wait_time_cnt_reg[2]),
        .O(\wait_time_cnt[0]_i_9__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[12]_i_2__0 
       (.I0(wait_time_cnt_reg[15]),
        .O(\wait_time_cnt[12]_i_2__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[12]_i_3__0 
       (.I0(wait_time_cnt_reg[14]),
        .O(\wait_time_cnt[12]_i_3__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[12]_i_4__0 
       (.I0(wait_time_cnt_reg[13]),
        .O(\wait_time_cnt[12]_i_4__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[12]_i_5__0 
       (.I0(wait_time_cnt_reg[12]),
        .O(\wait_time_cnt[12]_i_5__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[4]_i_2__0 
       (.I0(wait_time_cnt_reg[7]),
        .O(\wait_time_cnt[4]_i_2__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[4]_i_3__0 
       (.I0(wait_time_cnt_reg[6]),
        .O(\wait_time_cnt[4]_i_3__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[4]_i_4__0 
       (.I0(wait_time_cnt_reg[5]),
        .O(\wait_time_cnt[4]_i_4__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[4]_i_5__0 
       (.I0(wait_time_cnt_reg[4]),
        .O(\wait_time_cnt[4]_i_5__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[8]_i_2__0 
       (.I0(wait_time_cnt_reg[11]),
        .O(\wait_time_cnt[8]_i_2__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[8]_i_3__0 
       (.I0(wait_time_cnt_reg[10]),
        .O(\wait_time_cnt[8]_i_3__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[8]_i_4__0 
       (.I0(wait_time_cnt_reg[9]),
        .O(\wait_time_cnt[8]_i_4__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[8]_i_5__0 
       (.I0(wait_time_cnt_reg[8]),
        .O(\wait_time_cnt[8]_i_5__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_time_cnt_reg[0] 
       (.C(independent_clock_bufg),
        .CE(\wait_time_cnt[0]_i_2__0_n_0 ),
        .D(\wait_time_cnt_reg[0]_i_3__0_n_7 ),
        .Q(wait_time_cnt_reg[0]),
        .R(\wait_time_cnt[0]_i_1_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \wait_time_cnt_reg[0]_i_3__0 
       (.CI(1'b0),
        .CO({\wait_time_cnt_reg[0]_i_3__0_n_0 ,\NLW_wait_time_cnt_reg[0]_i_3__0_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\wait_time_cnt_reg[0]_i_3__0_n_4 ,\wait_time_cnt_reg[0]_i_3__0_n_5 ,\wait_time_cnt_reg[0]_i_3__0_n_6 ,\wait_time_cnt_reg[0]_i_3__0_n_7 }),
        .S({\wait_time_cnt[0]_i_8__0_n_0 ,\wait_time_cnt[0]_i_9__0_n_0 ,\wait_time_cnt[0]_i_10__0_n_0 ,\wait_time_cnt[0]_i_11__0_n_0 }));
  FDSE #(
    .INIT(1'b1)) 
    \wait_time_cnt_reg[10] 
       (.C(independent_clock_bufg),
        .CE(\wait_time_cnt[0]_i_2__0_n_0 ),
        .D(\wait_time_cnt_reg[8]_i_1__0_n_5 ),
        .Q(wait_time_cnt_reg[10]),
        .S(\wait_time_cnt[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_time_cnt_reg[11] 
       (.C(independent_clock_bufg),
        .CE(\wait_time_cnt[0]_i_2__0_n_0 ),
        .D(\wait_time_cnt_reg[8]_i_1__0_n_4 ),
        .Q(wait_time_cnt_reg[11]),
        .R(\wait_time_cnt[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_time_cnt_reg[12] 
       (.C(independent_clock_bufg),
        .CE(\wait_time_cnt[0]_i_2__0_n_0 ),
        .D(\wait_time_cnt_reg[12]_i_1__0_n_7 ),
        .Q(wait_time_cnt_reg[12]),
        .R(\wait_time_cnt[0]_i_1_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \wait_time_cnt_reg[12]_i_1__0 
       (.CI(\wait_time_cnt_reg[8]_i_1__0_n_0 ),
        .CO(\NLW_wait_time_cnt_reg[12]_i_1__0_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b1,1'b1,1'b1}),
        .O({\wait_time_cnt_reg[12]_i_1__0_n_4 ,\wait_time_cnt_reg[12]_i_1__0_n_5 ,\wait_time_cnt_reg[12]_i_1__0_n_6 ,\wait_time_cnt_reg[12]_i_1__0_n_7 }),
        .S({\wait_time_cnt[12]_i_2__0_n_0 ,\wait_time_cnt[12]_i_3__0_n_0 ,\wait_time_cnt[12]_i_4__0_n_0 ,\wait_time_cnt[12]_i_5__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \wait_time_cnt_reg[13] 
       (.C(independent_clock_bufg),
        .CE(\wait_time_cnt[0]_i_2__0_n_0 ),
        .D(\wait_time_cnt_reg[12]_i_1__0_n_6 ),
        .Q(wait_time_cnt_reg[13]),
        .R(\wait_time_cnt[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_time_cnt_reg[14] 
       (.C(independent_clock_bufg),
        .CE(\wait_time_cnt[0]_i_2__0_n_0 ),
        .D(\wait_time_cnt_reg[12]_i_1__0_n_5 ),
        .Q(wait_time_cnt_reg[14]),
        .R(\wait_time_cnt[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_time_cnt_reg[15] 
       (.C(independent_clock_bufg),
        .CE(\wait_time_cnt[0]_i_2__0_n_0 ),
        .D(\wait_time_cnt_reg[12]_i_1__0_n_4 ),
        .Q(wait_time_cnt_reg[15]),
        .R(\wait_time_cnt[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_time_cnt_reg[1] 
       (.C(independent_clock_bufg),
        .CE(\wait_time_cnt[0]_i_2__0_n_0 ),
        .D(\wait_time_cnt_reg[0]_i_3__0_n_6 ),
        .Q(wait_time_cnt_reg[1]),
        .R(\wait_time_cnt[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_time_cnt_reg[2] 
       (.C(independent_clock_bufg),
        .CE(\wait_time_cnt[0]_i_2__0_n_0 ),
        .D(\wait_time_cnt_reg[0]_i_3__0_n_5 ),
        .Q(wait_time_cnt_reg[2]),
        .R(\wait_time_cnt[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_time_cnt_reg[3] 
       (.C(independent_clock_bufg),
        .CE(\wait_time_cnt[0]_i_2__0_n_0 ),
        .D(\wait_time_cnt_reg[0]_i_3__0_n_4 ),
        .Q(wait_time_cnt_reg[3]),
        .R(\wait_time_cnt[0]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \wait_time_cnt_reg[4] 
       (.C(independent_clock_bufg),
        .CE(\wait_time_cnt[0]_i_2__0_n_0 ),
        .D(\wait_time_cnt_reg[4]_i_1__0_n_7 ),
        .Q(wait_time_cnt_reg[4]),
        .S(\wait_time_cnt[0]_i_1_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \wait_time_cnt_reg[4]_i_1__0 
       (.CI(\wait_time_cnt_reg[0]_i_3__0_n_0 ),
        .CO({\wait_time_cnt_reg[4]_i_1__0_n_0 ,\NLW_wait_time_cnt_reg[4]_i_1__0_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\wait_time_cnt_reg[4]_i_1__0_n_4 ,\wait_time_cnt_reg[4]_i_1__0_n_5 ,\wait_time_cnt_reg[4]_i_1__0_n_6 ,\wait_time_cnt_reg[4]_i_1__0_n_7 }),
        .S({\wait_time_cnt[4]_i_2__0_n_0 ,\wait_time_cnt[4]_i_3__0_n_0 ,\wait_time_cnt[4]_i_4__0_n_0 ,\wait_time_cnt[4]_i_5__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \wait_time_cnt_reg[5] 
       (.C(independent_clock_bufg),
        .CE(\wait_time_cnt[0]_i_2__0_n_0 ),
        .D(\wait_time_cnt_reg[4]_i_1__0_n_6 ),
        .Q(wait_time_cnt_reg[5]),
        .R(\wait_time_cnt[0]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \wait_time_cnt_reg[6] 
       (.C(independent_clock_bufg),
        .CE(\wait_time_cnt[0]_i_2__0_n_0 ),
        .D(\wait_time_cnt_reg[4]_i_1__0_n_5 ),
        .Q(wait_time_cnt_reg[6]),
        .S(\wait_time_cnt[0]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \wait_time_cnt_reg[7] 
       (.C(independent_clock_bufg),
        .CE(\wait_time_cnt[0]_i_2__0_n_0 ),
        .D(\wait_time_cnt_reg[4]_i_1__0_n_4 ),
        .Q(wait_time_cnt_reg[7]),
        .S(\wait_time_cnt[0]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \wait_time_cnt_reg[8] 
       (.C(independent_clock_bufg),
        .CE(\wait_time_cnt[0]_i_2__0_n_0 ),
        .D(\wait_time_cnt_reg[8]_i_1__0_n_7 ),
        .Q(wait_time_cnt_reg[8]),
        .S(\wait_time_cnt[0]_i_1_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \wait_time_cnt_reg[8]_i_1__0 
       (.CI(\wait_time_cnt_reg[4]_i_1__0_n_0 ),
        .CO({\wait_time_cnt_reg[8]_i_1__0_n_0 ,\NLW_wait_time_cnt_reg[8]_i_1__0_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\wait_time_cnt_reg[8]_i_1__0_n_4 ,\wait_time_cnt_reg[8]_i_1__0_n_5 ,\wait_time_cnt_reg[8]_i_1__0_n_6 ,\wait_time_cnt_reg[8]_i_1__0_n_7 }),
        .S({\wait_time_cnt[8]_i_2__0_n_0 ,\wait_time_cnt[8]_i_3__0_n_0 ,\wait_time_cnt[8]_i_4__0_n_0 ,\wait_time_cnt[8]_i_5__0_n_0 }));
  FDSE #(
    .INIT(1'b1)) 
    \wait_time_cnt_reg[9] 
       (.C(independent_clock_bufg),
        .CE(\wait_time_cnt[0]_i_2__0_n_0 ),
        .D(\wait_time_cnt_reg[8]_i_1__0_n_6 ),
        .Q(wait_time_cnt_reg[9]),
        .S(\wait_time_cnt[0]_i_1_n_0 ));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_TX_STARTUP_FSM" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_TX_STARTUP_FSM
   (mmcm_reset,
    PLL0_RESET_reg_0,
    data_in,
    gt0_txuserrdy_i,
    gt0_gttxreset_gt,
    independent_clock_bufg,
    data_sync_reg6,
    out,
    gt0_pll0refclklost_out,
    txn,
    data_sync_reg1,
    data_sync_reg1_0,
    gt0_pll0lock_out);
  output mmcm_reset;
  output PLL0_RESET_reg_0;
  output data_in;
  output gt0_txuserrdy_i;
  output gt0_gttxreset_gt;
  input independent_clock_bufg;
  input data_sync_reg6;
  input [0:0]out;
  input gt0_pll0refclklost_out;
  input txn;
  input data_sync_reg1;
  input data_sync_reg1_0;
  input gt0_pll0lock_out;

  wire \FSM_sequential_tx_state[0]_i_1_n_0 ;
  wire \FSM_sequential_tx_state[0]_i_2_n_0 ;
  wire \FSM_sequential_tx_state[1]_i_2_n_0 ;
  wire \FSM_sequential_tx_state[2]_i_1_n_0 ;
  wire \FSM_sequential_tx_state[2]_i_2_n_0 ;
  wire \FSM_sequential_tx_state[3]_i_4_n_0 ;
  wire \FSM_sequential_tx_state[3]_i_5_n_0 ;
  wire \FSM_sequential_tx_state[3]_i_7_n_0 ;
  wire MMCM_RESET_i_1_n_0;
  wire PLL0_RESET0;
  wire PLL0_RESET_i_1_n_0;
  wire PLL0_RESET_reg_0;
  wire TXUSERRDY_i_1_n_0;
  wire clear;
  wire data_in;
  wire data_sync_reg1;
  wire data_sync_reg1_0;
  wire data_sync_reg6;
  wire gt0_gttxreset_gt;
  wire gt0_gttxreset_t;
  wire gt0_pll0lock_out;
  wire gt0_pll0refclklost_out;
  wire gt0_txuserrdy_i;
  wire gttxreset_i_i_1_n_0;
  wire independent_clock_bufg;
  wire init_wait_count;
  wire \init_wait_count[0]_i_1_n_0 ;
  wire \init_wait_count[7]_i_3__0_n_0 ;
  wire \init_wait_count[7]_i_4_n_0 ;
  wire [7:0]init_wait_count_reg;
  wire init_wait_done_i_1_n_0;
  wire init_wait_done_reg_n_0;
  wire \mmcm_lock_count[7]_i_2_n_0 ;
  wire \mmcm_lock_count[7]_i_4_n_0 ;
  wire [7:0]mmcm_lock_count_reg;
  wire mmcm_lock_reclocked;
  wire mmcm_reset;
  wire [0:0]out;
  wire [7:1]p_0_in__0;
  wire [7:0]p_0_in__1;
  wire pll_reset_asserted_i_1_n_0;
  wire pll_reset_asserted_reg_n_0;
  wire refclk_stable_count;
  wire \refclk_stable_count[0]_i_3_n_0 ;
  wire \refclk_stable_count[0]_i_4_n_0 ;
  wire \refclk_stable_count[0]_i_5_n_0 ;
  wire \refclk_stable_count[0]_i_6_n_0 ;
  wire \refclk_stable_count[0]_i_7_n_0 ;
  wire [19:0]refclk_stable_count_reg;
  wire \refclk_stable_count_reg[0]_i_2_n_0 ;
  wire \refclk_stable_count_reg[0]_i_2_n_4 ;
  wire \refclk_stable_count_reg[0]_i_2_n_5 ;
  wire \refclk_stable_count_reg[0]_i_2_n_6 ;
  wire \refclk_stable_count_reg[0]_i_2_n_7 ;
  wire \refclk_stable_count_reg[12]_i_1_n_0 ;
  wire \refclk_stable_count_reg[12]_i_1_n_4 ;
  wire \refclk_stable_count_reg[12]_i_1_n_5 ;
  wire \refclk_stable_count_reg[12]_i_1_n_6 ;
  wire \refclk_stable_count_reg[12]_i_1_n_7 ;
  wire \refclk_stable_count_reg[16]_i_1_n_4 ;
  wire \refclk_stable_count_reg[16]_i_1_n_5 ;
  wire \refclk_stable_count_reg[16]_i_1_n_6 ;
  wire \refclk_stable_count_reg[16]_i_1_n_7 ;
  wire \refclk_stable_count_reg[4]_i_1_n_0 ;
  wire \refclk_stable_count_reg[4]_i_1_n_4 ;
  wire \refclk_stable_count_reg[4]_i_1_n_5 ;
  wire \refclk_stable_count_reg[4]_i_1_n_6 ;
  wire \refclk_stable_count_reg[4]_i_1_n_7 ;
  wire \refclk_stable_count_reg[8]_i_1_n_0 ;
  wire \refclk_stable_count_reg[8]_i_1_n_4 ;
  wire \refclk_stable_count_reg[8]_i_1_n_5 ;
  wire \refclk_stable_count_reg[8]_i_1_n_6 ;
  wire \refclk_stable_count_reg[8]_i_1_n_7 ;
  wire refclk_stable_i_1_n_0;
  wire refclk_stable_reg_n_0;
  wire reset_time_out;
  wire reset_time_out_i_3_n_0;
  wire run_phase_alignment_int_i_1_n_0;
  wire run_phase_alignment_int_reg_n_0;
  wire run_phase_alignment_int_s2;
  wire run_phase_alignment_int_s3;
  wire sel;
  wire sync_mmcm_lock_reclocked_n_0;
  wire sync_mmcm_lock_reclocked_n_1;
  wire sync_pll0lock_n_0;
  wire sync_pll0lock_n_1;
  wire time_out_2ms_i_1__0_n_0;
  wire time_out_2ms_reg_n_0;
  wire time_out_500us_i_1_n_0;
  wire time_out_500us_i_2_n_0;
  wire time_out_500us_i_3_n_0;
  wire time_out_500us_reg_n_0;
  wire time_out_counter;
  wire \time_out_counter[0]_i_4_n_0 ;
  wire \time_out_counter[0]_i_5__0_n_0 ;
  wire \time_out_counter[0]_i_6__0_n_0 ;
  wire \time_out_counter[0]_i_7__0_n_0 ;
  wire \time_out_counter[0]_i_8_n_0 ;
  wire [18:0]time_out_counter_reg;
  wire \time_out_counter_reg[0]_i_2_n_0 ;
  wire \time_out_counter_reg[0]_i_2_n_4 ;
  wire \time_out_counter_reg[0]_i_2_n_5 ;
  wire \time_out_counter_reg[0]_i_2_n_6 ;
  wire \time_out_counter_reg[0]_i_2_n_7 ;
  wire \time_out_counter_reg[12]_i_1_n_0 ;
  wire \time_out_counter_reg[12]_i_1_n_4 ;
  wire \time_out_counter_reg[12]_i_1_n_5 ;
  wire \time_out_counter_reg[12]_i_1_n_6 ;
  wire \time_out_counter_reg[12]_i_1_n_7 ;
  wire \time_out_counter_reg[16]_i_1_n_5 ;
  wire \time_out_counter_reg[16]_i_1_n_6 ;
  wire \time_out_counter_reg[16]_i_1_n_7 ;
  wire \time_out_counter_reg[4]_i_1_n_0 ;
  wire \time_out_counter_reg[4]_i_1_n_4 ;
  wire \time_out_counter_reg[4]_i_1_n_5 ;
  wire \time_out_counter_reg[4]_i_1_n_6 ;
  wire \time_out_counter_reg[4]_i_1_n_7 ;
  wire \time_out_counter_reg[8]_i_1_n_0 ;
  wire \time_out_counter_reg[8]_i_1_n_4 ;
  wire \time_out_counter_reg[8]_i_1_n_5 ;
  wire \time_out_counter_reg[8]_i_1_n_6 ;
  wire \time_out_counter_reg[8]_i_1_n_7 ;
  wire time_out_wait_bypass_i_1_n_0;
  wire time_out_wait_bypass_reg_n_0;
  wire time_out_wait_bypass_s2;
  wire time_out_wait_bypass_s3;
  wire time_tlock_max_i_1__0_n_0;
  wire time_tlock_max_i_2__0_n_0;
  wire time_tlock_max_i_3__0_n_0;
  wire time_tlock_max_i_4__0_n_0;
  wire time_tlock_max_i_5__0_n_0;
  wire time_tlock_max_reg_n_0;
  wire tx_fsm_reset_done_int_i_1_n_0;
  wire tx_fsm_reset_done_int_s2;
  wire tx_fsm_reset_done_int_s3;
  wire [3:0]tx_state;
  wire [3:1]tx_state__0;
  wire txn;
  wire txresetdone_s2;
  wire txresetdone_s3;
  wire \wait_bypass_count[0]_i_2_n_0 ;
  wire \wait_bypass_count[0]_i_4_n_0 ;
  wire \wait_bypass_count[0]_i_5_n_0 ;
  wire \wait_bypass_count[0]_i_6_n_0 ;
  wire \wait_bypass_count[0]_i_7_n_0 ;
  wire \wait_bypass_count[0]_i_8_n_0 ;
  wire \wait_bypass_count[0]_i_9_n_0 ;
  wire [16:0]wait_bypass_count_reg;
  wire \wait_bypass_count_reg[0]_i_3_n_0 ;
  wire \wait_bypass_count_reg[0]_i_3_n_4 ;
  wire \wait_bypass_count_reg[0]_i_3_n_5 ;
  wire \wait_bypass_count_reg[0]_i_3_n_6 ;
  wire \wait_bypass_count_reg[0]_i_3_n_7 ;
  wire \wait_bypass_count_reg[12]_i_1_n_0 ;
  wire \wait_bypass_count_reg[12]_i_1_n_4 ;
  wire \wait_bypass_count_reg[12]_i_1_n_5 ;
  wire \wait_bypass_count_reg[12]_i_1_n_6 ;
  wire \wait_bypass_count_reg[12]_i_1_n_7 ;
  wire \wait_bypass_count_reg[16]_i_1_n_7 ;
  wire \wait_bypass_count_reg[4]_i_1_n_0 ;
  wire \wait_bypass_count_reg[4]_i_1_n_4 ;
  wire \wait_bypass_count_reg[4]_i_1_n_5 ;
  wire \wait_bypass_count_reg[4]_i_1_n_6 ;
  wire \wait_bypass_count_reg[4]_i_1_n_7 ;
  wire \wait_bypass_count_reg[8]_i_1_n_0 ;
  wire \wait_bypass_count_reg[8]_i_1_n_4 ;
  wire \wait_bypass_count_reg[8]_i_1_n_5 ;
  wire \wait_bypass_count_reg[8]_i_1_n_6 ;
  wire \wait_bypass_count_reg[8]_i_1_n_7 ;
  wire wait_time_cnt0;
  wire \wait_time_cnt[0]_i_10_n_0 ;
  wire \wait_time_cnt[0]_i_11_n_0 ;
  wire \wait_time_cnt[0]_i_4_n_0 ;
  wire \wait_time_cnt[0]_i_5_n_0 ;
  wire \wait_time_cnt[0]_i_6_n_0 ;
  wire \wait_time_cnt[0]_i_7_n_0 ;
  wire \wait_time_cnt[0]_i_8_n_0 ;
  wire \wait_time_cnt[0]_i_9_n_0 ;
  wire \wait_time_cnt[12]_i_2_n_0 ;
  wire \wait_time_cnt[12]_i_3_n_0 ;
  wire \wait_time_cnt[12]_i_4_n_0 ;
  wire \wait_time_cnt[12]_i_5_n_0 ;
  wire \wait_time_cnt[4]_i_2_n_0 ;
  wire \wait_time_cnt[4]_i_3_n_0 ;
  wire \wait_time_cnt[4]_i_4_n_0 ;
  wire \wait_time_cnt[4]_i_5_n_0 ;
  wire \wait_time_cnt[8]_i_2_n_0 ;
  wire \wait_time_cnt[8]_i_3_n_0 ;
  wire \wait_time_cnt[8]_i_4_n_0 ;
  wire \wait_time_cnt[8]_i_5_n_0 ;
  wire [15:0]wait_time_cnt_reg;
  wire \wait_time_cnt_reg[0]_i_3_n_0 ;
  wire \wait_time_cnt_reg[0]_i_3_n_4 ;
  wire \wait_time_cnt_reg[0]_i_3_n_5 ;
  wire \wait_time_cnt_reg[0]_i_3_n_6 ;
  wire \wait_time_cnt_reg[0]_i_3_n_7 ;
  wire \wait_time_cnt_reg[12]_i_1_n_4 ;
  wire \wait_time_cnt_reg[12]_i_1_n_5 ;
  wire \wait_time_cnt_reg[12]_i_1_n_6 ;
  wire \wait_time_cnt_reg[12]_i_1_n_7 ;
  wire \wait_time_cnt_reg[4]_i_1_n_0 ;
  wire \wait_time_cnt_reg[4]_i_1_n_4 ;
  wire \wait_time_cnt_reg[4]_i_1_n_5 ;
  wire \wait_time_cnt_reg[4]_i_1_n_6 ;
  wire \wait_time_cnt_reg[4]_i_1_n_7 ;
  wire \wait_time_cnt_reg[8]_i_1_n_0 ;
  wire \wait_time_cnt_reg[8]_i_1_n_4 ;
  wire \wait_time_cnt_reg[8]_i_1_n_5 ;
  wire \wait_time_cnt_reg[8]_i_1_n_6 ;
  wire \wait_time_cnt_reg[8]_i_1_n_7 ;
  wire [2:0]\NLW_refclk_stable_count_reg[0]_i_2_CO_UNCONNECTED ;
  wire [2:0]\NLW_refclk_stable_count_reg[12]_i_1_CO_UNCONNECTED ;
  wire [3:0]\NLW_refclk_stable_count_reg[16]_i_1_CO_UNCONNECTED ;
  wire [2:0]\NLW_refclk_stable_count_reg[4]_i_1_CO_UNCONNECTED ;
  wire [2:0]\NLW_refclk_stable_count_reg[8]_i_1_CO_UNCONNECTED ;
  wire [2:0]\NLW_time_out_counter_reg[0]_i_2_CO_UNCONNECTED ;
  wire [2:0]\NLW_time_out_counter_reg[12]_i_1_CO_UNCONNECTED ;
  wire [3:0]\NLW_time_out_counter_reg[16]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_time_out_counter_reg[16]_i_1_O_UNCONNECTED ;
  wire [2:0]\NLW_time_out_counter_reg[4]_i_1_CO_UNCONNECTED ;
  wire [2:0]\NLW_time_out_counter_reg[8]_i_1_CO_UNCONNECTED ;
  wire [2:0]\NLW_wait_bypass_count_reg[0]_i_3_CO_UNCONNECTED ;
  wire [2:0]\NLW_wait_bypass_count_reg[12]_i_1_CO_UNCONNECTED ;
  wire [3:0]\NLW_wait_bypass_count_reg[16]_i_1_CO_UNCONNECTED ;
  wire [3:1]\NLW_wait_bypass_count_reg[16]_i_1_O_UNCONNECTED ;
  wire [2:0]\NLW_wait_bypass_count_reg[4]_i_1_CO_UNCONNECTED ;
  wire [2:0]\NLW_wait_bypass_count_reg[8]_i_1_CO_UNCONNECTED ;
  wire [2:0]\NLW_wait_time_cnt_reg[0]_i_3_CO_UNCONNECTED ;
  wire [3:0]\NLW_wait_time_cnt_reg[12]_i_1_CO_UNCONNECTED ;
  wire [2:0]\NLW_wait_time_cnt_reg[4]_i_1_CO_UNCONNECTED ;
  wire [2:0]\NLW_wait_time_cnt_reg[8]_i_1_CO_UNCONNECTED ;

  LUT6 #(
    .INIT(64'h11111000FFFFFFFF)) 
    \FSM_sequential_tx_state[0]_i_1 
       (.I0(\FSM_sequential_tx_state[2]_i_2_n_0 ),
        .I1(\FSM_sequential_tx_state[3]_i_5_n_0 ),
        .I2(tx_state[1]),
        .I3(time_out_2ms_reg_n_0),
        .I4(tx_state[2]),
        .I5(\FSM_sequential_tx_state[0]_i_2_n_0 ),
        .O(\FSM_sequential_tx_state[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_tx_state[0]_i_2 
       (.I0(tx_state[0]),
        .I1(tx_state[3]),
        .O(\FSM_sequential_tx_state[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00070F00)) 
    \FSM_sequential_tx_state[1]_i_1 
       (.I0(\FSM_sequential_tx_state[1]_i_2_n_0 ),
        .I1(tx_state[2]),
        .I2(tx_state[3]),
        .I3(tx_state[1]),
        .I4(tx_state[0]),
        .O(tx_state__0[1]));
  LUT3 #(
    .INIT(8'h04)) 
    \FSM_sequential_tx_state[1]_i_2 
       (.I0(mmcm_lock_reclocked),
        .I1(time_tlock_max_reg_n_0),
        .I2(reset_time_out),
        .O(\FSM_sequential_tx_state[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h4455445545444444)) 
    \FSM_sequential_tx_state[2]_i_1 
       (.I0(tx_state[3]),
        .I1(\FSM_sequential_tx_state[2]_i_2_n_0 ),
        .I2(time_out_2ms_reg_n_0),
        .I3(tx_state[0]),
        .I4(tx_state[1]),
        .I5(tx_state[2]),
        .O(\FSM_sequential_tx_state[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h44444044)) 
    \FSM_sequential_tx_state[2]_i_2 
       (.I0(tx_state[1]),
        .I1(tx_state[2]),
        .I2(reset_time_out),
        .I3(time_tlock_max_reg_n_0),
        .I4(mmcm_lock_reclocked),
        .O(\FSM_sequential_tx_state[2]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h5C50)) 
    \FSM_sequential_tx_state[3]_i_2 
       (.I0(time_out_wait_bypass_s3),
        .I1(tx_state[0]),
        .I2(tx_state[3]),
        .I3(\FSM_sequential_tx_state[3]_i_5_n_0 ),
        .O(tx_state__0[3]));
  LUT2 #(
    .INIT(4'h1)) 
    \FSM_sequential_tx_state[3]_i_4 
       (.I0(tx_state[2]),
        .I1(tx_state[1]),
        .O(\FSM_sequential_tx_state[3]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h8088)) 
    \FSM_sequential_tx_state[3]_i_5 
       (.I0(tx_state[1]),
        .I1(tx_state[2]),
        .I2(reset_time_out),
        .I3(time_out_500us_reg_n_0),
        .O(\FSM_sequential_tx_state[3]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \FSM_sequential_tx_state[3]_i_7 
       (.I0(reset_time_out),
        .I1(time_tlock_max_reg_n_0),
        .O(\FSM_sequential_tx_state[3]_i_7_n_0 ));
  (* FSM_ENCODED_STATES = "WAIT_FOR_TXOUTCLK:0100,RELEASE_PLL_RESET:0011,WAIT_FOR_PLL_LOCK:0010,ASSERT_ALL_RESETS:0001,INIT:0000,WAIT_RESET_DONE:0111,RESET_FSM_DONE:1001,WAIT_FOR_TXUSRCLK:0110,DO_PHASE_ALIGNMENT:1000,RELEASE_MMCM_RESET:0101" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_tx_state_reg[0] 
       (.C(independent_clock_bufg),
        .CE(sync_pll0lock_n_0),
        .D(\FSM_sequential_tx_state[0]_i_1_n_0 ),
        .Q(tx_state[0]),
        .R(out));
  (* FSM_ENCODED_STATES = "WAIT_FOR_TXOUTCLK:0100,RELEASE_PLL_RESET:0011,WAIT_FOR_PLL_LOCK:0010,ASSERT_ALL_RESETS:0001,INIT:0000,WAIT_RESET_DONE:0111,RESET_FSM_DONE:1001,WAIT_FOR_TXUSRCLK:0110,DO_PHASE_ALIGNMENT:1000,RELEASE_MMCM_RESET:0101" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_tx_state_reg[1] 
       (.C(independent_clock_bufg),
        .CE(sync_pll0lock_n_0),
        .D(tx_state__0[1]),
        .Q(tx_state[1]),
        .R(out));
  (* FSM_ENCODED_STATES = "WAIT_FOR_TXOUTCLK:0100,RELEASE_PLL_RESET:0011,WAIT_FOR_PLL_LOCK:0010,ASSERT_ALL_RESETS:0001,INIT:0000,WAIT_RESET_DONE:0111,RESET_FSM_DONE:1001,WAIT_FOR_TXUSRCLK:0110,DO_PHASE_ALIGNMENT:1000,RELEASE_MMCM_RESET:0101" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_tx_state_reg[2] 
       (.C(independent_clock_bufg),
        .CE(sync_pll0lock_n_0),
        .D(\FSM_sequential_tx_state[2]_i_1_n_0 ),
        .Q(tx_state[2]),
        .R(out));
  (* FSM_ENCODED_STATES = "WAIT_FOR_TXOUTCLK:0100,RELEASE_PLL_RESET:0011,WAIT_FOR_PLL_LOCK:0010,ASSERT_ALL_RESETS:0001,INIT:0000,WAIT_RESET_DONE:0111,RESET_FSM_DONE:1001,WAIT_FOR_TXUSRCLK:0110,DO_PHASE_ALIGNMENT:1000,RELEASE_MMCM_RESET:0101" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_tx_state_reg[3] 
       (.C(independent_clock_bufg),
        .CE(sync_pll0lock_n_0),
        .D(tx_state__0[3]),
        .Q(tx_state[3]),
        .R(out));
  LUT5 #(
    .INIT(32'hFFF70004)) 
    MMCM_RESET_i_1
       (.I0(tx_state[2]),
        .I1(tx_state[0]),
        .I2(tx_state[1]),
        .I3(tx_state[3]),
        .I4(mmcm_reset),
        .O(MMCM_RESET_i_1_n_0));
  FDRE #(
    .INIT(1'b1)) 
    MMCM_RESET_reg
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(MMCM_RESET_i_1_n_0),
        .Q(mmcm_reset),
        .R(out));
  LUT6 #(
    .INIT(64'hFFFFFFEF00000020)) 
    PLL0_RESET_i_1
       (.I0(PLL0_RESET0),
        .I1(tx_state[2]),
        .I2(tx_state[0]),
        .I3(tx_state[1]),
        .I4(tx_state[3]),
        .I5(PLL0_RESET_reg_0),
        .O(PLL0_RESET_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    PLL0_RESET_reg
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(PLL0_RESET_i_1_n_0),
        .Q(PLL0_RESET_reg_0),
        .R(out));
  LUT5 #(
    .INIT(32'hFFFD2000)) 
    TXUSERRDY_i_1
       (.I0(tx_state[0]),
        .I1(tx_state[3]),
        .I2(tx_state[1]),
        .I3(tx_state[2]),
        .I4(gt0_txuserrdy_i),
        .O(TXUSERRDY_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    TXUSERRDY_reg
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(TXUSERRDY_i_1_n_0),
        .Q(gt0_txuserrdy_i),
        .R(out));
  LUT3 #(
    .INIT(8'hEA)) 
    gtpe2_i_i_3
       (.I0(gt0_gttxreset_t),
        .I1(data_in),
        .I2(txn),
        .O(gt0_gttxreset_gt));
  LUT5 #(
    .INIT(32'hFFFB0002)) 
    gttxreset_i_i_1
       (.I0(tx_state[0]),
        .I1(tx_state[2]),
        .I2(tx_state[1]),
        .I3(tx_state[3]),
        .I4(gt0_gttxreset_t),
        .O(gttxreset_i_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gttxreset_i_reg
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(gttxreset_i_i_1_n_0),
        .Q(gt0_gttxreset_t),
        .R(out));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \init_wait_count[0]_i_1 
       (.I0(init_wait_count_reg[0]),
        .O(\init_wait_count[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \init_wait_count[1]_i_1 
       (.I0(init_wait_count_reg[0]),
        .I1(init_wait_count_reg[1]),
        .O(p_0_in__0[1]));
  LUT3 #(
    .INIT(8'h6A)) 
    \init_wait_count[2]_i_1 
       (.I0(init_wait_count_reg[2]),
        .I1(init_wait_count_reg[0]),
        .I2(init_wait_count_reg[1]),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \init_wait_count[3]_i_1 
       (.I0(init_wait_count_reg[3]),
        .I1(init_wait_count_reg[1]),
        .I2(init_wait_count_reg[0]),
        .I3(init_wait_count_reg[2]),
        .O(p_0_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \init_wait_count[4]_i_1 
       (.I0(init_wait_count_reg[4]),
        .I1(init_wait_count_reg[2]),
        .I2(init_wait_count_reg[0]),
        .I3(init_wait_count_reg[1]),
        .I4(init_wait_count_reg[3]),
        .O(p_0_in__0[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \init_wait_count[5]_i_1 
       (.I0(init_wait_count_reg[3]),
        .I1(init_wait_count_reg[1]),
        .I2(init_wait_count_reg[0]),
        .I3(init_wait_count_reg[2]),
        .I4(init_wait_count_reg[4]),
        .I5(init_wait_count_reg[5]),
        .O(p_0_in__0[5]));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \init_wait_count[6]_i_1 
       (.I0(init_wait_count_reg[6]),
        .I1(\init_wait_count[7]_i_4_n_0 ),
        .O(p_0_in__0[6]));
  LUT5 #(
    .INIT(32'hFEFFFFFF)) 
    \init_wait_count[7]_i_1__0 
       (.I0(\init_wait_count[7]_i_3__0_n_0 ),
        .I1(init_wait_count_reg[7]),
        .I2(init_wait_count_reg[4]),
        .I3(init_wait_count_reg[3]),
        .I4(init_wait_count_reg[2]),
        .O(init_wait_count));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \init_wait_count[7]_i_2 
       (.I0(init_wait_count_reg[7]),
        .I1(\init_wait_count[7]_i_4_n_0 ),
        .I2(init_wait_count_reg[6]),
        .O(p_0_in__0[7]));
  LUT4 #(
    .INIT(16'hDFFF)) 
    \init_wait_count[7]_i_3__0 
       (.I0(init_wait_count_reg[5]),
        .I1(init_wait_count_reg[0]),
        .I2(init_wait_count_reg[6]),
        .I3(init_wait_count_reg[1]),
        .O(\init_wait_count[7]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \init_wait_count[7]_i_4 
       (.I0(init_wait_count_reg[5]),
        .I1(init_wait_count_reg[4]),
        .I2(init_wait_count_reg[2]),
        .I3(init_wait_count_reg[0]),
        .I4(init_wait_count_reg[1]),
        .I5(init_wait_count_reg[3]),
        .O(\init_wait_count[7]_i_4_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[0] 
       (.C(independent_clock_bufg),
        .CE(init_wait_count),
        .CLR(out),
        .D(\init_wait_count[0]_i_1_n_0 ),
        .Q(init_wait_count_reg[0]));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[1] 
       (.C(independent_clock_bufg),
        .CE(init_wait_count),
        .CLR(out),
        .D(p_0_in__0[1]),
        .Q(init_wait_count_reg[1]));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[2] 
       (.C(independent_clock_bufg),
        .CE(init_wait_count),
        .CLR(out),
        .D(p_0_in__0[2]),
        .Q(init_wait_count_reg[2]));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[3] 
       (.C(independent_clock_bufg),
        .CE(init_wait_count),
        .CLR(out),
        .D(p_0_in__0[3]),
        .Q(init_wait_count_reg[3]));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[4] 
       (.C(independent_clock_bufg),
        .CE(init_wait_count),
        .CLR(out),
        .D(p_0_in__0[4]),
        .Q(init_wait_count_reg[4]));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[5] 
       (.C(independent_clock_bufg),
        .CE(init_wait_count),
        .CLR(out),
        .D(p_0_in__0[5]),
        .Q(init_wait_count_reg[5]));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[6] 
       (.C(independent_clock_bufg),
        .CE(init_wait_count),
        .CLR(out),
        .D(p_0_in__0[6]),
        .Q(init_wait_count_reg[6]));
  FDCE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[7] 
       (.C(independent_clock_bufg),
        .CE(init_wait_count),
        .CLR(out),
        .D(p_0_in__0[7]),
        .Q(init_wait_count_reg[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFF01000000)) 
    init_wait_done_i_1
       (.I0(\init_wait_count[7]_i_3__0_n_0 ),
        .I1(init_wait_count_reg[7]),
        .I2(init_wait_count_reg[4]),
        .I3(init_wait_count_reg[3]),
        .I4(init_wait_count_reg[2]),
        .I5(init_wait_done_reg_n_0),
        .O(init_wait_done_i_1_n_0));
  FDCE #(
    .INIT(1'b0)) 
    init_wait_done_reg
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .CLR(out),
        .D(init_wait_done_i_1_n_0),
        .Q(init_wait_done_reg_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \mmcm_lock_count[0]_i_1 
       (.I0(mmcm_lock_count_reg[0]),
        .O(p_0_in__1[0]));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \mmcm_lock_count[1]_i_1 
       (.I0(mmcm_lock_count_reg[1]),
        .I1(mmcm_lock_count_reg[0]),
        .O(p_0_in__1[1]));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \mmcm_lock_count[2]_i_1 
       (.I0(mmcm_lock_count_reg[2]),
        .I1(mmcm_lock_count_reg[1]),
        .I2(mmcm_lock_count_reg[0]),
        .O(p_0_in__1[2]));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \mmcm_lock_count[3]_i_1 
       (.I0(mmcm_lock_count_reg[3]),
        .I1(mmcm_lock_count_reg[0]),
        .I2(mmcm_lock_count_reg[1]),
        .I3(mmcm_lock_count_reg[2]),
        .O(p_0_in__1[3]));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \mmcm_lock_count[4]_i_1 
       (.I0(mmcm_lock_count_reg[4]),
        .I1(mmcm_lock_count_reg[2]),
        .I2(mmcm_lock_count_reg[1]),
        .I3(mmcm_lock_count_reg[0]),
        .I4(mmcm_lock_count_reg[3]),
        .O(p_0_in__1[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \mmcm_lock_count[5]_i_1 
       (.I0(mmcm_lock_count_reg[3]),
        .I1(mmcm_lock_count_reg[0]),
        .I2(mmcm_lock_count_reg[1]),
        .I3(mmcm_lock_count_reg[2]),
        .I4(mmcm_lock_count_reg[4]),
        .I5(mmcm_lock_count_reg[5]),
        .O(p_0_in__1[5]));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \mmcm_lock_count[6]_i_1 
       (.I0(mmcm_lock_count_reg[6]),
        .I1(\mmcm_lock_count[7]_i_4_n_0 ),
        .O(p_0_in__1[6]));
  LUT3 #(
    .INIT(8'h7F)) 
    \mmcm_lock_count[7]_i_2 
       (.I0(mmcm_lock_count_reg[6]),
        .I1(\mmcm_lock_count[7]_i_4_n_0 ),
        .I2(mmcm_lock_count_reg[7]),
        .O(\mmcm_lock_count[7]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \mmcm_lock_count[7]_i_3 
       (.I0(mmcm_lock_count_reg[7]),
        .I1(\mmcm_lock_count[7]_i_4_n_0 ),
        .I2(mmcm_lock_count_reg[6]),
        .O(p_0_in__1[7]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \mmcm_lock_count[7]_i_4 
       (.I0(mmcm_lock_count_reg[5]),
        .I1(mmcm_lock_count_reg[4]),
        .I2(mmcm_lock_count_reg[2]),
        .I3(mmcm_lock_count_reg[1]),
        .I4(mmcm_lock_count_reg[0]),
        .I5(mmcm_lock_count_reg[3]),
        .O(\mmcm_lock_count[7]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[0] 
       (.C(independent_clock_bufg),
        .CE(\mmcm_lock_count[7]_i_2_n_0 ),
        .D(p_0_in__1[0]),
        .Q(mmcm_lock_count_reg[0]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[1] 
       (.C(independent_clock_bufg),
        .CE(\mmcm_lock_count[7]_i_2_n_0 ),
        .D(p_0_in__1[1]),
        .Q(mmcm_lock_count_reg[1]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[2] 
       (.C(independent_clock_bufg),
        .CE(\mmcm_lock_count[7]_i_2_n_0 ),
        .D(p_0_in__1[2]),
        .Q(mmcm_lock_count_reg[2]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[3] 
       (.C(independent_clock_bufg),
        .CE(\mmcm_lock_count[7]_i_2_n_0 ),
        .D(p_0_in__1[3]),
        .Q(mmcm_lock_count_reg[3]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[4] 
       (.C(independent_clock_bufg),
        .CE(\mmcm_lock_count[7]_i_2_n_0 ),
        .D(p_0_in__1[4]),
        .Q(mmcm_lock_count_reg[4]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[5] 
       (.C(independent_clock_bufg),
        .CE(\mmcm_lock_count[7]_i_2_n_0 ),
        .D(p_0_in__1[5]),
        .Q(mmcm_lock_count_reg[5]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[6] 
       (.C(independent_clock_bufg),
        .CE(\mmcm_lock_count[7]_i_2_n_0 ),
        .D(p_0_in__1[6]),
        .Q(mmcm_lock_count_reg[6]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mmcm_lock_count_reg[7] 
       (.C(independent_clock_bufg),
        .CE(\mmcm_lock_count[7]_i_2_n_0 ),
        .D(p_0_in__1[7]),
        .Q(mmcm_lock_count_reg[7]),
        .R(sync_mmcm_lock_reclocked_n_0));
  FDRE #(
    .INIT(1'b0)) 
    mmcm_lock_reclocked_reg
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(sync_mmcm_lock_reclocked_n_1),
        .Q(mmcm_lock_reclocked),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFBFBFFFF00000400)) 
    pll_reset_asserted_i_1
       (.I0(tx_state[3]),
        .I1(tx_state[0]),
        .I2(tx_state[2]),
        .I3(PLL0_RESET0),
        .I4(tx_state[1]),
        .I5(pll_reset_asserted_reg_n_0),
        .O(pll_reset_asserted_i_1_n_0));
  LUT3 #(
    .INIT(8'h37)) 
    pll_reset_asserted_i_2
       (.I0(pll_reset_asserted_reg_n_0),
        .I1(refclk_stable_reg_n_0),
        .I2(gt0_pll0refclklost_out),
        .O(PLL0_RESET0));
  FDRE #(
    .INIT(1'b0)) 
    pll_reset_asserted_reg
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(pll_reset_asserted_i_1_n_0),
        .Q(pll_reset_asserted_reg_n_0),
        .R(out));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFEF)) 
    \refclk_stable_count[0]_i_1 
       (.I0(\refclk_stable_count[0]_i_3_n_0 ),
        .I1(refclk_stable_count_reg[4]),
        .I2(refclk_stable_count_reg[8]),
        .I3(refclk_stable_count_reg[5]),
        .I4(refclk_stable_count_reg[17]),
        .I5(\refclk_stable_count[0]_i_4_n_0 ),
        .O(refclk_stable_count));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \refclk_stable_count[0]_i_3 
       (.I0(refclk_stable_count_reg[2]),
        .I1(refclk_stable_count_reg[15]),
        .I2(refclk_stable_count_reg[0]),
        .I3(refclk_stable_count_reg[11]),
        .I4(\refclk_stable_count[0]_i_6_n_0 ),
        .I5(\refclk_stable_count[0]_i_7_n_0 ),
        .O(\refclk_stable_count[0]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFFDF)) 
    \refclk_stable_count[0]_i_4 
       (.I0(refclk_stable_count_reg[6]),
        .I1(refclk_stable_count_reg[1]),
        .I2(refclk_stable_count_reg[10]),
        .I3(refclk_stable_count_reg[18]),
        .O(\refclk_stable_count[0]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \refclk_stable_count[0]_i_5 
       (.I0(refclk_stable_count_reg[0]),
        .O(\refclk_stable_count[0]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'hFFF7)) 
    \refclk_stable_count[0]_i_6 
       (.I0(refclk_stable_count_reg[13]),
        .I1(refclk_stable_count_reg[19]),
        .I2(refclk_stable_count_reg[12]),
        .I3(refclk_stable_count_reg[14]),
        .O(\refclk_stable_count[0]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'hFF7F)) 
    \refclk_stable_count[0]_i_7 
       (.I0(refclk_stable_count_reg[16]),
        .I1(refclk_stable_count_reg[7]),
        .I2(refclk_stable_count_reg[9]),
        .I3(refclk_stable_count_reg[3]),
        .O(\refclk_stable_count[0]_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_stable_count_reg[0] 
       (.C(independent_clock_bufg),
        .CE(refclk_stable_count),
        .D(\refclk_stable_count_reg[0]_i_2_n_7 ),
        .Q(refclk_stable_count_reg[0]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \refclk_stable_count_reg[0]_i_2 
       (.CI(1'b0),
        .CO({\refclk_stable_count_reg[0]_i_2_n_0 ,\NLW_refclk_stable_count_reg[0]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\refclk_stable_count_reg[0]_i_2_n_4 ,\refclk_stable_count_reg[0]_i_2_n_5 ,\refclk_stable_count_reg[0]_i_2_n_6 ,\refclk_stable_count_reg[0]_i_2_n_7 }),
        .S({refclk_stable_count_reg[3:1],\refclk_stable_count[0]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_stable_count_reg[10] 
       (.C(independent_clock_bufg),
        .CE(refclk_stable_count),
        .D(\refclk_stable_count_reg[8]_i_1_n_5 ),
        .Q(refclk_stable_count_reg[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_stable_count_reg[11] 
       (.C(independent_clock_bufg),
        .CE(refclk_stable_count),
        .D(\refclk_stable_count_reg[8]_i_1_n_4 ),
        .Q(refclk_stable_count_reg[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_stable_count_reg[12] 
       (.C(independent_clock_bufg),
        .CE(refclk_stable_count),
        .D(\refclk_stable_count_reg[12]_i_1_n_7 ),
        .Q(refclk_stable_count_reg[12]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \refclk_stable_count_reg[12]_i_1 
       (.CI(\refclk_stable_count_reg[8]_i_1_n_0 ),
        .CO({\refclk_stable_count_reg[12]_i_1_n_0 ,\NLW_refclk_stable_count_reg[12]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\refclk_stable_count_reg[12]_i_1_n_4 ,\refclk_stable_count_reg[12]_i_1_n_5 ,\refclk_stable_count_reg[12]_i_1_n_6 ,\refclk_stable_count_reg[12]_i_1_n_7 }),
        .S(refclk_stable_count_reg[15:12]));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_stable_count_reg[13] 
       (.C(independent_clock_bufg),
        .CE(refclk_stable_count),
        .D(\refclk_stable_count_reg[12]_i_1_n_6 ),
        .Q(refclk_stable_count_reg[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_stable_count_reg[14] 
       (.C(independent_clock_bufg),
        .CE(refclk_stable_count),
        .D(\refclk_stable_count_reg[12]_i_1_n_5 ),
        .Q(refclk_stable_count_reg[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_stable_count_reg[15] 
       (.C(independent_clock_bufg),
        .CE(refclk_stable_count),
        .D(\refclk_stable_count_reg[12]_i_1_n_4 ),
        .Q(refclk_stable_count_reg[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_stable_count_reg[16] 
       (.C(independent_clock_bufg),
        .CE(refclk_stable_count),
        .D(\refclk_stable_count_reg[16]_i_1_n_7 ),
        .Q(refclk_stable_count_reg[16]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \refclk_stable_count_reg[16]_i_1 
       (.CI(\refclk_stable_count_reg[12]_i_1_n_0 ),
        .CO(\NLW_refclk_stable_count_reg[16]_i_1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\refclk_stable_count_reg[16]_i_1_n_4 ,\refclk_stable_count_reg[16]_i_1_n_5 ,\refclk_stable_count_reg[16]_i_1_n_6 ,\refclk_stable_count_reg[16]_i_1_n_7 }),
        .S(refclk_stable_count_reg[19:16]));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_stable_count_reg[17] 
       (.C(independent_clock_bufg),
        .CE(refclk_stable_count),
        .D(\refclk_stable_count_reg[16]_i_1_n_6 ),
        .Q(refclk_stable_count_reg[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_stable_count_reg[18] 
       (.C(independent_clock_bufg),
        .CE(refclk_stable_count),
        .D(\refclk_stable_count_reg[16]_i_1_n_5 ),
        .Q(refclk_stable_count_reg[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_stable_count_reg[19] 
       (.C(independent_clock_bufg),
        .CE(refclk_stable_count),
        .D(\refclk_stable_count_reg[16]_i_1_n_4 ),
        .Q(refclk_stable_count_reg[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_stable_count_reg[1] 
       (.C(independent_clock_bufg),
        .CE(refclk_stable_count),
        .D(\refclk_stable_count_reg[0]_i_2_n_6 ),
        .Q(refclk_stable_count_reg[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_stable_count_reg[2] 
       (.C(independent_clock_bufg),
        .CE(refclk_stable_count),
        .D(\refclk_stable_count_reg[0]_i_2_n_5 ),
        .Q(refclk_stable_count_reg[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_stable_count_reg[3] 
       (.C(independent_clock_bufg),
        .CE(refclk_stable_count),
        .D(\refclk_stable_count_reg[0]_i_2_n_4 ),
        .Q(refclk_stable_count_reg[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_stable_count_reg[4] 
       (.C(independent_clock_bufg),
        .CE(refclk_stable_count),
        .D(\refclk_stable_count_reg[4]_i_1_n_7 ),
        .Q(refclk_stable_count_reg[4]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \refclk_stable_count_reg[4]_i_1 
       (.CI(\refclk_stable_count_reg[0]_i_2_n_0 ),
        .CO({\refclk_stable_count_reg[4]_i_1_n_0 ,\NLW_refclk_stable_count_reg[4]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\refclk_stable_count_reg[4]_i_1_n_4 ,\refclk_stable_count_reg[4]_i_1_n_5 ,\refclk_stable_count_reg[4]_i_1_n_6 ,\refclk_stable_count_reg[4]_i_1_n_7 }),
        .S(refclk_stable_count_reg[7:4]));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_stable_count_reg[5] 
       (.C(independent_clock_bufg),
        .CE(refclk_stable_count),
        .D(\refclk_stable_count_reg[4]_i_1_n_6 ),
        .Q(refclk_stable_count_reg[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_stable_count_reg[6] 
       (.C(independent_clock_bufg),
        .CE(refclk_stable_count),
        .D(\refclk_stable_count_reg[4]_i_1_n_5 ),
        .Q(refclk_stable_count_reg[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_stable_count_reg[7] 
       (.C(independent_clock_bufg),
        .CE(refclk_stable_count),
        .D(\refclk_stable_count_reg[4]_i_1_n_4 ),
        .Q(refclk_stable_count_reg[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_stable_count_reg[8] 
       (.C(independent_clock_bufg),
        .CE(refclk_stable_count),
        .D(\refclk_stable_count_reg[8]_i_1_n_7 ),
        .Q(refclk_stable_count_reg[8]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \refclk_stable_count_reg[8]_i_1 
       (.CI(\refclk_stable_count_reg[4]_i_1_n_0 ),
        .CO({\refclk_stable_count_reg[8]_i_1_n_0 ,\NLW_refclk_stable_count_reg[8]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\refclk_stable_count_reg[8]_i_1_n_4 ,\refclk_stable_count_reg[8]_i_1_n_5 ,\refclk_stable_count_reg[8]_i_1_n_6 ,\refclk_stable_count_reg[8]_i_1_n_7 }),
        .S(refclk_stable_count_reg[11:8]));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_stable_count_reg[9] 
       (.C(independent_clock_bufg),
        .CE(refclk_stable_count),
        .D(\refclk_stable_count_reg[8]_i_1_n_6 ),
        .Q(refclk_stable_count_reg[9]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000000000000100)) 
    refclk_stable_i_1
       (.I0(\refclk_stable_count[0]_i_4_n_0 ),
        .I1(refclk_stable_count_reg[17]),
        .I2(refclk_stable_count_reg[5]),
        .I3(refclk_stable_count_reg[8]),
        .I4(refclk_stable_count_reg[4]),
        .I5(\refclk_stable_count[0]_i_3_n_0 ),
        .O(refclk_stable_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    refclk_stable_reg
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(refclk_stable_i_1_n_0),
        .Q(refclk_stable_reg_n_0),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hB833)) 
    reset_time_out_i_3
       (.I0(txresetdone_s3),
        .I1(tx_state[1]),
        .I2(mmcm_lock_reclocked),
        .I3(tx_state[2]),
        .O(reset_time_out_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    reset_time_out_reg
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(sync_pll0lock_n_1),
        .Q(reset_time_out),
        .R(out));
  LUT5 #(
    .INIT(32'hFFEF0100)) 
    run_phase_alignment_int_i_1
       (.I0(tx_state[1]),
        .I1(tx_state[2]),
        .I2(tx_state[0]),
        .I3(tx_state[3]),
        .I4(run_phase_alignment_int_reg_n_0),
        .O(run_phase_alignment_int_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    run_phase_alignment_int_reg
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(run_phase_alignment_int_i_1_n_0),
        .Q(run_phase_alignment_int_reg_n_0),
        .R(out));
  FDRE #(
    .INIT(1'b0)) 
    run_phase_alignment_int_s3_reg
       (.C(data_sync_reg6),
        .CE(1'b1),
        .D(run_phase_alignment_int_s2),
        .Q(run_phase_alignment_int_s3),
        .R(1'b0));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_21 sync_TXRESETDONE
       (.data_out(txresetdone_s2),
        .data_sync_reg1_0(data_sync_reg1),
        .independent_clock_bufg(independent_clock_bufg));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_22 sync_mmcm_lock_reclocked
       (.Q(mmcm_lock_count_reg[7:6]),
        .SR(sync_mmcm_lock_reclocked_n_0),
        .data_sync_reg1_0(data_sync_reg1_0),
        .independent_clock_bufg(independent_clock_bufg),
        .mmcm_lock_reclocked(mmcm_lock_reclocked),
        .mmcm_lock_reclocked_reg(sync_mmcm_lock_reclocked_n_1),
        .mmcm_lock_reclocked_reg_0(\mmcm_lock_count[7]_i_4_n_0 ));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_23 sync_pll0lock
       (.E(sync_pll0lock_n_0),
        .\FSM_sequential_tx_state[3]_i_3_0 (refclk_stable_reg_n_0),
        .\FSM_sequential_tx_state[3]_i_3_1 (pll_reset_asserted_reg_n_0),
        .\FSM_sequential_tx_state[3]_i_3_2 (time_out_500us_reg_n_0),
        .\FSM_sequential_tx_state[3]_i_3_3 (time_out_2ms_reg_n_0),
        .\FSM_sequential_tx_state_reg[0] (init_wait_done_reg_n_0),
        .\FSM_sequential_tx_state_reg[0]_0 (\FSM_sequential_tx_state[3]_i_4_n_0 ),
        .\FSM_sequential_tx_state_reg[0]_1 (\FSM_sequential_tx_state[3]_i_7_n_0 ),
        .\FSM_sequential_tx_state_reg[1] (sync_pll0lock_n_1),
        .Q(tx_state),
        .gt0_pll0lock_out(gt0_pll0lock_out),
        .independent_clock_bufg(independent_clock_bufg),
        .mmcm_lock_reclocked(mmcm_lock_reclocked),
        .reset_time_out(reset_time_out),
        .reset_time_out_reg(reset_time_out_i_3_n_0),
        .sel(sel),
        .txresetdone_s3(txresetdone_s3));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_24 sync_run_phase_alignment_int
       (.data_in(run_phase_alignment_int_reg_n_0),
        .data_out(run_phase_alignment_int_s2),
        .data_sync_reg1_0(data_sync_reg6));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_25 sync_time_out_wait_bypass
       (.data_in(time_out_wait_bypass_reg_n_0),
        .data_out(time_out_wait_bypass_s2),
        .independent_clock_bufg(independent_clock_bufg));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_26 sync_tx_fsm_reset_done_int
       (.data_in(data_in),
        .data_out(tx_fsm_reset_done_int_s2),
        .data_sync_reg6_0(data_sync_reg6));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT3 #(
    .INIT(8'h0B)) 
    time_out_2ms_i_1__0
       (.I0(time_out_2ms_reg_n_0),
        .I1(time_out_counter),
        .I2(reset_time_out),
        .O(time_out_2ms_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    time_out_2ms_reg
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(time_out_2ms_i_1__0_n_0),
        .Q(time_out_2ms_reg_n_0),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0000AAEA)) 
    time_out_500us_i_1
       (.I0(time_out_500us_reg_n_0),
        .I1(time_out_500us_i_2_n_0),
        .I2(time_tlock_max_i_2__0_n_0),
        .I3(time_out_500us_i_3_n_0),
        .I4(reset_time_out),
        .O(time_out_500us_i_1_n_0));
  LUT5 #(
    .INIT(32'h00002000)) 
    time_out_500us_i_2
       (.I0(\time_out_counter[0]_i_5__0_n_0 ),
        .I1(time_out_counter_reg[11]),
        .I2(time_out_counter_reg[16]),
        .I3(time_out_counter_reg[15]),
        .I4(time_tlock_max_i_3__0_n_0),
        .O(time_out_500us_i_2_n_0));
  LUT5 #(
    .INIT(32'hFFFFFEFF)) 
    time_out_500us_i_3
       (.I0(time_out_counter_reg[13]),
        .I1(time_out_counter_reg[8]),
        .I2(time_out_counter_reg[6]),
        .I3(time_out_counter_reg[7]),
        .I4(time_out_counter_reg[14]),
        .O(time_out_500us_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    time_out_500us_reg
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(time_out_500us_i_1_n_0),
        .Q(time_out_500us_reg_n_0),
        .R(1'b0));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT5 #(
    .INIT(32'hFFFFFFEF)) 
    \time_out_counter[0]_i_3__0 
       (.I0(\time_out_counter[0]_i_5__0_n_0 ),
        .I1(\time_out_counter[0]_i_6__0_n_0 ),
        .I2(\time_out_counter[0]_i_7__0_n_0 ),
        .I3(\time_out_counter[0]_i_8_n_0 ),
        .I4(time_out_500us_i_3_n_0),
        .O(time_out_counter));
  LUT1 #(
    .INIT(2'h1)) 
    \time_out_counter[0]_i_4 
       (.I0(time_out_counter_reg[0]),
        .O(\time_out_counter[0]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'h0D)) 
    \time_out_counter[0]_i_5__0 
       (.I0(time_out_counter_reg[12]),
        .I1(time_out_counter_reg[13]),
        .I2(time_out_counter_reg[14]),
        .O(\time_out_counter[0]_i_5__0_n_0 ));
  LUT4 #(
    .INIT(16'hFFEF)) 
    \time_out_counter[0]_i_6__0 
       (.I0(time_out_counter_reg[3]),
        .I1(time_out_counter_reg[5]),
        .I2(time_out_counter_reg[9]),
        .I3(time_out_counter_reg[10]),
        .O(\time_out_counter[0]_i_6__0_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \time_out_counter[0]_i_7__0 
       (.I0(time_out_counter_reg[1]),
        .I1(time_out_counter_reg[2]),
        .I2(time_out_counter_reg[0]),
        .O(\time_out_counter[0]_i_7__0_n_0 ));
  LUT6 #(
    .INIT(64'hFEFFFFFFFFFFFFFF)) 
    \time_out_counter[0]_i_8 
       (.I0(time_out_counter_reg[16]),
        .I1(time_out_counter_reg[15]),
        .I2(time_out_counter_reg[4]),
        .I3(time_out_counter_reg[18]),
        .I4(time_out_counter_reg[11]),
        .I5(time_out_counter_reg[17]),
        .O(\time_out_counter[0]_i_8_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[0] 
       (.C(independent_clock_bufg),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[0]_i_2_n_7 ),
        .Q(time_out_counter_reg[0]),
        .R(reset_time_out));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \time_out_counter_reg[0]_i_2 
       (.CI(1'b0),
        .CO({\time_out_counter_reg[0]_i_2_n_0 ,\NLW_time_out_counter_reg[0]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\time_out_counter_reg[0]_i_2_n_4 ,\time_out_counter_reg[0]_i_2_n_5 ,\time_out_counter_reg[0]_i_2_n_6 ,\time_out_counter_reg[0]_i_2_n_7 }),
        .S({time_out_counter_reg[3:1],\time_out_counter[0]_i_4_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[10] 
       (.C(independent_clock_bufg),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[8]_i_1_n_5 ),
        .Q(time_out_counter_reg[10]),
        .R(reset_time_out));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[11] 
       (.C(independent_clock_bufg),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[8]_i_1_n_4 ),
        .Q(time_out_counter_reg[11]),
        .R(reset_time_out));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[12] 
       (.C(independent_clock_bufg),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[12]_i_1_n_7 ),
        .Q(time_out_counter_reg[12]),
        .R(reset_time_out));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \time_out_counter_reg[12]_i_1 
       (.CI(\time_out_counter_reg[8]_i_1_n_0 ),
        .CO({\time_out_counter_reg[12]_i_1_n_0 ,\NLW_time_out_counter_reg[12]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\time_out_counter_reg[12]_i_1_n_4 ,\time_out_counter_reg[12]_i_1_n_5 ,\time_out_counter_reg[12]_i_1_n_6 ,\time_out_counter_reg[12]_i_1_n_7 }),
        .S(time_out_counter_reg[15:12]));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[13] 
       (.C(independent_clock_bufg),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[12]_i_1_n_6 ),
        .Q(time_out_counter_reg[13]),
        .R(reset_time_out));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[14] 
       (.C(independent_clock_bufg),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[12]_i_1_n_5 ),
        .Q(time_out_counter_reg[14]),
        .R(reset_time_out));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[15] 
       (.C(independent_clock_bufg),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[12]_i_1_n_4 ),
        .Q(time_out_counter_reg[15]),
        .R(reset_time_out));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[16] 
       (.C(independent_clock_bufg),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[16]_i_1_n_7 ),
        .Q(time_out_counter_reg[16]),
        .R(reset_time_out));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \time_out_counter_reg[16]_i_1 
       (.CI(\time_out_counter_reg[12]_i_1_n_0 ),
        .CO(\NLW_time_out_counter_reg[16]_i_1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_time_out_counter_reg[16]_i_1_O_UNCONNECTED [3],\time_out_counter_reg[16]_i_1_n_5 ,\time_out_counter_reg[16]_i_1_n_6 ,\time_out_counter_reg[16]_i_1_n_7 }),
        .S({1'b0,time_out_counter_reg[18:16]}));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[17] 
       (.C(independent_clock_bufg),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[16]_i_1_n_6 ),
        .Q(time_out_counter_reg[17]),
        .R(reset_time_out));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[18] 
       (.C(independent_clock_bufg),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[16]_i_1_n_5 ),
        .Q(time_out_counter_reg[18]),
        .R(reset_time_out));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[1] 
       (.C(independent_clock_bufg),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[0]_i_2_n_6 ),
        .Q(time_out_counter_reg[1]),
        .R(reset_time_out));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[2] 
       (.C(independent_clock_bufg),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[0]_i_2_n_5 ),
        .Q(time_out_counter_reg[2]),
        .R(reset_time_out));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[3] 
       (.C(independent_clock_bufg),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[0]_i_2_n_4 ),
        .Q(time_out_counter_reg[3]),
        .R(reset_time_out));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[4] 
       (.C(independent_clock_bufg),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[4]_i_1_n_7 ),
        .Q(time_out_counter_reg[4]),
        .R(reset_time_out));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \time_out_counter_reg[4]_i_1 
       (.CI(\time_out_counter_reg[0]_i_2_n_0 ),
        .CO({\time_out_counter_reg[4]_i_1_n_0 ,\NLW_time_out_counter_reg[4]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\time_out_counter_reg[4]_i_1_n_4 ,\time_out_counter_reg[4]_i_1_n_5 ,\time_out_counter_reg[4]_i_1_n_6 ,\time_out_counter_reg[4]_i_1_n_7 }),
        .S(time_out_counter_reg[7:4]));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[5] 
       (.C(independent_clock_bufg),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[4]_i_1_n_6 ),
        .Q(time_out_counter_reg[5]),
        .R(reset_time_out));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[6] 
       (.C(independent_clock_bufg),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[4]_i_1_n_5 ),
        .Q(time_out_counter_reg[6]),
        .R(reset_time_out));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[7] 
       (.C(independent_clock_bufg),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[4]_i_1_n_4 ),
        .Q(time_out_counter_reg[7]),
        .R(reset_time_out));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[8] 
       (.C(independent_clock_bufg),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[8]_i_1_n_7 ),
        .Q(time_out_counter_reg[8]),
        .R(reset_time_out));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \time_out_counter_reg[8]_i_1 
       (.CI(\time_out_counter_reg[4]_i_1_n_0 ),
        .CO({\time_out_counter_reg[8]_i_1_n_0 ,\NLW_time_out_counter_reg[8]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\time_out_counter_reg[8]_i_1_n_4 ,\time_out_counter_reg[8]_i_1_n_5 ,\time_out_counter_reg[8]_i_1_n_6 ,\time_out_counter_reg[8]_i_1_n_7 }),
        .S(time_out_counter_reg[11:8]));
  FDRE #(
    .INIT(1'b0)) 
    \time_out_counter_reg[9] 
       (.C(independent_clock_bufg),
        .CE(time_out_counter),
        .D(\time_out_counter_reg[8]_i_1_n_6 ),
        .Q(time_out_counter_reg[9]),
        .R(reset_time_out));
  LUT4 #(
    .INIT(16'hAB00)) 
    time_out_wait_bypass_i_1
       (.I0(time_out_wait_bypass_reg_n_0),
        .I1(\wait_bypass_count[0]_i_4_n_0 ),
        .I2(tx_fsm_reset_done_int_s3),
        .I3(run_phase_alignment_int_s3),
        .O(time_out_wait_bypass_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    time_out_wait_bypass_reg
       (.C(data_sync_reg6),
        .CE(1'b1),
        .D(time_out_wait_bypass_i_1_n_0),
        .Q(time_out_wait_bypass_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    time_out_wait_bypass_s3_reg
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(time_out_wait_bypass_s2),
        .Q(time_out_wait_bypass_s3),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00000000AAAAAAAE)) 
    time_tlock_max_i_1__0
       (.I0(time_tlock_max_reg_n_0),
        .I1(time_tlock_max_i_2__0_n_0),
        .I2(time_tlock_max_i_3__0_n_0),
        .I3(time_tlock_max_i_4__0_n_0),
        .I4(time_tlock_max_i_5__0_n_0),
        .I5(reset_time_out),
        .O(time_tlock_max_i_1__0_n_0));
  LUT6 #(
    .INIT(64'h0000000000010000)) 
    time_tlock_max_i_2__0
       (.I0(time_out_counter_reg[0]),
        .I1(time_out_counter_reg[2]),
        .I2(time_out_counter_reg[1]),
        .I3(time_out_counter_reg[4]),
        .I4(time_out_counter_reg[5]),
        .I5(time_out_counter_reg[3]),
        .O(time_tlock_max_i_2__0_n_0));
  LUT4 #(
    .INIT(16'hFFDF)) 
    time_tlock_max_i_3__0
       (.I0(time_out_counter_reg[9]),
        .I1(time_out_counter_reg[17]),
        .I2(time_out_counter_reg[10]),
        .I3(time_out_counter_reg[18]),
        .O(time_tlock_max_i_3__0_n_0));
  LUT3 #(
    .INIT(8'hFB)) 
    time_tlock_max_i_4__0
       (.I0(time_out_counter_reg[7]),
        .I1(time_out_counter_reg[11]),
        .I2(time_out_counter_reg[12]),
        .O(time_tlock_max_i_4__0_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEFF)) 
    time_tlock_max_i_5__0
       (.I0(time_out_counter_reg[13]),
        .I1(time_out_counter_reg[8]),
        .I2(time_out_counter_reg[6]),
        .I3(time_out_counter_reg[14]),
        .I4(time_out_counter_reg[15]),
        .I5(time_out_counter_reg[16]),
        .O(time_tlock_max_i_5__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    time_tlock_max_reg
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(time_tlock_max_i_1__0_n_0),
        .Q(time_tlock_max_reg_n_0),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFFF0200)) 
    tx_fsm_reset_done_int_i_1
       (.I0(tx_state[0]),
        .I1(tx_state[1]),
        .I2(tx_state[2]),
        .I3(tx_state[3]),
        .I4(data_in),
        .O(tx_fsm_reset_done_int_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    tx_fsm_reset_done_int_reg
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(tx_fsm_reset_done_int_i_1_n_0),
        .Q(data_in),
        .R(out));
  FDRE #(
    .INIT(1'b0)) 
    tx_fsm_reset_done_int_s3_reg
       (.C(data_sync_reg6),
        .CE(1'b1),
        .D(tx_fsm_reset_done_int_s2),
        .Q(tx_fsm_reset_done_int_s3),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    txresetdone_s3_reg
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(txresetdone_s2),
        .Q(txresetdone_s3),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_bypass_count[0]_i_1 
       (.I0(run_phase_alignment_int_s3),
        .O(clear));
  LUT2 #(
    .INIT(4'h2)) 
    \wait_bypass_count[0]_i_2 
       (.I0(\wait_bypass_count[0]_i_4_n_0 ),
        .I1(tx_fsm_reset_done_int_s3),
        .O(\wait_bypass_count[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \wait_bypass_count[0]_i_4 
       (.I0(\wait_bypass_count[0]_i_6_n_0 ),
        .I1(\wait_bypass_count[0]_i_7_n_0 ),
        .I2(\wait_bypass_count[0]_i_8_n_0 ),
        .I3(\wait_bypass_count[0]_i_9_n_0 ),
        .O(\wait_bypass_count[0]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_bypass_count[0]_i_5 
       (.I0(wait_bypass_count_reg[0]),
        .O(\wait_bypass_count[0]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \wait_bypass_count[0]_i_6 
       (.I0(wait_bypass_count_reg[4]),
        .I1(wait_bypass_count_reg[3]),
        .I2(wait_bypass_count_reg[6]),
        .I3(wait_bypass_count_reg[5]),
        .O(\wait_bypass_count[0]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hDFFFFFFF)) 
    \wait_bypass_count[0]_i_7 
       (.I0(wait_bypass_count_reg[0]),
        .I1(wait_bypass_count_reg[15]),
        .I2(wait_bypass_count_reg[16]),
        .I3(wait_bypass_count_reg[2]),
        .I4(wait_bypass_count_reg[1]),
        .O(\wait_bypass_count[0]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'hFFDF)) 
    \wait_bypass_count[0]_i_8 
       (.I0(wait_bypass_count_reg[12]),
        .I1(wait_bypass_count_reg[11]),
        .I2(wait_bypass_count_reg[14]),
        .I3(wait_bypass_count_reg[13]),
        .O(\wait_bypass_count[0]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'hFFDF)) 
    \wait_bypass_count[0]_i_9 
       (.I0(wait_bypass_count_reg[7]),
        .I1(wait_bypass_count_reg[8]),
        .I2(wait_bypass_count_reg[9]),
        .I3(wait_bypass_count_reg[10]),
        .O(\wait_bypass_count[0]_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[0] 
       (.C(data_sync_reg6),
        .CE(\wait_bypass_count[0]_i_2_n_0 ),
        .D(\wait_bypass_count_reg[0]_i_3_n_7 ),
        .Q(wait_bypass_count_reg[0]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \wait_bypass_count_reg[0]_i_3 
       (.CI(1'b0),
        .CO({\wait_bypass_count_reg[0]_i_3_n_0 ,\NLW_wait_bypass_count_reg[0]_i_3_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\wait_bypass_count_reg[0]_i_3_n_4 ,\wait_bypass_count_reg[0]_i_3_n_5 ,\wait_bypass_count_reg[0]_i_3_n_6 ,\wait_bypass_count_reg[0]_i_3_n_7 }),
        .S({wait_bypass_count_reg[3:1],\wait_bypass_count[0]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[10] 
       (.C(data_sync_reg6),
        .CE(\wait_bypass_count[0]_i_2_n_0 ),
        .D(\wait_bypass_count_reg[8]_i_1_n_5 ),
        .Q(wait_bypass_count_reg[10]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[11] 
       (.C(data_sync_reg6),
        .CE(\wait_bypass_count[0]_i_2_n_0 ),
        .D(\wait_bypass_count_reg[8]_i_1_n_4 ),
        .Q(wait_bypass_count_reg[11]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[12] 
       (.C(data_sync_reg6),
        .CE(\wait_bypass_count[0]_i_2_n_0 ),
        .D(\wait_bypass_count_reg[12]_i_1_n_7 ),
        .Q(wait_bypass_count_reg[12]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \wait_bypass_count_reg[12]_i_1 
       (.CI(\wait_bypass_count_reg[8]_i_1_n_0 ),
        .CO({\wait_bypass_count_reg[12]_i_1_n_0 ,\NLW_wait_bypass_count_reg[12]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\wait_bypass_count_reg[12]_i_1_n_4 ,\wait_bypass_count_reg[12]_i_1_n_5 ,\wait_bypass_count_reg[12]_i_1_n_6 ,\wait_bypass_count_reg[12]_i_1_n_7 }),
        .S(wait_bypass_count_reg[15:12]));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[13] 
       (.C(data_sync_reg6),
        .CE(\wait_bypass_count[0]_i_2_n_0 ),
        .D(\wait_bypass_count_reg[12]_i_1_n_6 ),
        .Q(wait_bypass_count_reg[13]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[14] 
       (.C(data_sync_reg6),
        .CE(\wait_bypass_count[0]_i_2_n_0 ),
        .D(\wait_bypass_count_reg[12]_i_1_n_5 ),
        .Q(wait_bypass_count_reg[14]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[15] 
       (.C(data_sync_reg6),
        .CE(\wait_bypass_count[0]_i_2_n_0 ),
        .D(\wait_bypass_count_reg[12]_i_1_n_4 ),
        .Q(wait_bypass_count_reg[15]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[16] 
       (.C(data_sync_reg6),
        .CE(\wait_bypass_count[0]_i_2_n_0 ),
        .D(\wait_bypass_count_reg[16]_i_1_n_7 ),
        .Q(wait_bypass_count_reg[16]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \wait_bypass_count_reg[16]_i_1 
       (.CI(\wait_bypass_count_reg[12]_i_1_n_0 ),
        .CO(\NLW_wait_bypass_count_reg[16]_i_1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_wait_bypass_count_reg[16]_i_1_O_UNCONNECTED [3:1],\wait_bypass_count_reg[16]_i_1_n_7 }),
        .S({1'b0,1'b0,1'b0,wait_bypass_count_reg[16]}));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[1] 
       (.C(data_sync_reg6),
        .CE(\wait_bypass_count[0]_i_2_n_0 ),
        .D(\wait_bypass_count_reg[0]_i_3_n_6 ),
        .Q(wait_bypass_count_reg[1]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[2] 
       (.C(data_sync_reg6),
        .CE(\wait_bypass_count[0]_i_2_n_0 ),
        .D(\wait_bypass_count_reg[0]_i_3_n_5 ),
        .Q(wait_bypass_count_reg[2]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[3] 
       (.C(data_sync_reg6),
        .CE(\wait_bypass_count[0]_i_2_n_0 ),
        .D(\wait_bypass_count_reg[0]_i_3_n_4 ),
        .Q(wait_bypass_count_reg[3]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[4] 
       (.C(data_sync_reg6),
        .CE(\wait_bypass_count[0]_i_2_n_0 ),
        .D(\wait_bypass_count_reg[4]_i_1_n_7 ),
        .Q(wait_bypass_count_reg[4]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \wait_bypass_count_reg[4]_i_1 
       (.CI(\wait_bypass_count_reg[0]_i_3_n_0 ),
        .CO({\wait_bypass_count_reg[4]_i_1_n_0 ,\NLW_wait_bypass_count_reg[4]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\wait_bypass_count_reg[4]_i_1_n_4 ,\wait_bypass_count_reg[4]_i_1_n_5 ,\wait_bypass_count_reg[4]_i_1_n_6 ,\wait_bypass_count_reg[4]_i_1_n_7 }),
        .S(wait_bypass_count_reg[7:4]));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[5] 
       (.C(data_sync_reg6),
        .CE(\wait_bypass_count[0]_i_2_n_0 ),
        .D(\wait_bypass_count_reg[4]_i_1_n_6 ),
        .Q(wait_bypass_count_reg[5]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[6] 
       (.C(data_sync_reg6),
        .CE(\wait_bypass_count[0]_i_2_n_0 ),
        .D(\wait_bypass_count_reg[4]_i_1_n_5 ),
        .Q(wait_bypass_count_reg[6]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[7] 
       (.C(data_sync_reg6),
        .CE(\wait_bypass_count[0]_i_2_n_0 ),
        .D(\wait_bypass_count_reg[4]_i_1_n_4 ),
        .Q(wait_bypass_count_reg[7]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[8] 
       (.C(data_sync_reg6),
        .CE(\wait_bypass_count[0]_i_2_n_0 ),
        .D(\wait_bypass_count_reg[8]_i_1_n_7 ),
        .Q(wait_bypass_count_reg[8]),
        .R(clear));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \wait_bypass_count_reg[8]_i_1 
       (.CI(\wait_bypass_count_reg[4]_i_1_n_0 ),
        .CO({\wait_bypass_count_reg[8]_i_1_n_0 ,\NLW_wait_bypass_count_reg[8]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\wait_bypass_count_reg[8]_i_1_n_4 ,\wait_bypass_count_reg[8]_i_1_n_5 ,\wait_bypass_count_reg[8]_i_1_n_6 ,\wait_bypass_count_reg[8]_i_1_n_7 }),
        .S(wait_bypass_count_reg[11:8]));
  FDRE #(
    .INIT(1'b0)) 
    \wait_bypass_count_reg[9] 
       (.C(data_sync_reg6),
        .CE(\wait_bypass_count[0]_i_2_n_0 ),
        .D(\wait_bypass_count_reg[8]_i_1_n_6 ),
        .Q(wait_bypass_count_reg[9]),
        .R(clear));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[0]_i_10 
       (.I0(wait_time_cnt_reg[1]),
        .O(\wait_time_cnt[0]_i_10_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[0]_i_11 
       (.I0(wait_time_cnt_reg[0]),
        .O(\wait_time_cnt[0]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'h0444)) 
    \wait_time_cnt[0]_i_1__0 
       (.I0(tx_state[3]),
        .I1(tx_state[0]),
        .I2(tx_state[1]),
        .I3(tx_state[2]),
        .O(wait_time_cnt0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \wait_time_cnt[0]_i_2 
       (.I0(\wait_time_cnt[0]_i_4_n_0 ),
        .I1(\wait_time_cnt[0]_i_5_n_0 ),
        .I2(\wait_time_cnt[0]_i_6_n_0 ),
        .I3(\wait_time_cnt[0]_i_7_n_0 ),
        .O(sel));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \wait_time_cnt[0]_i_4 
       (.I0(wait_time_cnt_reg[13]),
        .I1(wait_time_cnt_reg[2]),
        .I2(wait_time_cnt_reg[8]),
        .I3(wait_time_cnt_reg[9]),
        .O(\wait_time_cnt[0]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \wait_time_cnt[0]_i_5 
       (.I0(wait_time_cnt_reg[10]),
        .I1(wait_time_cnt_reg[11]),
        .I2(wait_time_cnt_reg[7]),
        .I3(wait_time_cnt_reg[4]),
        .O(\wait_time_cnt[0]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \wait_time_cnt[0]_i_6 
       (.I0(wait_time_cnt_reg[0]),
        .I1(wait_time_cnt_reg[5]),
        .I2(wait_time_cnt_reg[14]),
        .I3(wait_time_cnt_reg[12]),
        .O(\wait_time_cnt[0]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \wait_time_cnt[0]_i_7 
       (.I0(wait_time_cnt_reg[15]),
        .I1(wait_time_cnt_reg[6]),
        .I2(wait_time_cnt_reg[1]),
        .I3(wait_time_cnt_reg[3]),
        .O(\wait_time_cnt[0]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[0]_i_8 
       (.I0(wait_time_cnt_reg[3]),
        .O(\wait_time_cnt[0]_i_8_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[0]_i_9 
       (.I0(wait_time_cnt_reg[2]),
        .O(\wait_time_cnt[0]_i_9_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[12]_i_2 
       (.I0(wait_time_cnt_reg[15]),
        .O(\wait_time_cnt[12]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[12]_i_3 
       (.I0(wait_time_cnt_reg[14]),
        .O(\wait_time_cnt[12]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[12]_i_4 
       (.I0(wait_time_cnt_reg[13]),
        .O(\wait_time_cnt[12]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[12]_i_5 
       (.I0(wait_time_cnt_reg[12]),
        .O(\wait_time_cnt[12]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[4]_i_2 
       (.I0(wait_time_cnt_reg[7]),
        .O(\wait_time_cnt[4]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[4]_i_3 
       (.I0(wait_time_cnt_reg[6]),
        .O(\wait_time_cnt[4]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[4]_i_4 
       (.I0(wait_time_cnt_reg[5]),
        .O(\wait_time_cnt[4]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[4]_i_5 
       (.I0(wait_time_cnt_reg[4]),
        .O(\wait_time_cnt[4]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[8]_i_2 
       (.I0(wait_time_cnt_reg[11]),
        .O(\wait_time_cnt[8]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[8]_i_3 
       (.I0(wait_time_cnt_reg[10]),
        .O(\wait_time_cnt[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[8]_i_4 
       (.I0(wait_time_cnt_reg[9]),
        .O(\wait_time_cnt[8]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_time_cnt[8]_i_5 
       (.I0(wait_time_cnt_reg[8]),
        .O(\wait_time_cnt[8]_i_5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_time_cnt_reg[0] 
       (.C(independent_clock_bufg),
        .CE(sel),
        .D(\wait_time_cnt_reg[0]_i_3_n_7 ),
        .Q(wait_time_cnt_reg[0]),
        .R(wait_time_cnt0));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \wait_time_cnt_reg[0]_i_3 
       (.CI(1'b0),
        .CO({\wait_time_cnt_reg[0]_i_3_n_0 ,\NLW_wait_time_cnt_reg[0]_i_3_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\wait_time_cnt_reg[0]_i_3_n_4 ,\wait_time_cnt_reg[0]_i_3_n_5 ,\wait_time_cnt_reg[0]_i_3_n_6 ,\wait_time_cnt_reg[0]_i_3_n_7 }),
        .S({\wait_time_cnt[0]_i_8_n_0 ,\wait_time_cnt[0]_i_9_n_0 ,\wait_time_cnt[0]_i_10_n_0 ,\wait_time_cnt[0]_i_11_n_0 }));
  FDSE #(
    .INIT(1'b1)) 
    \wait_time_cnt_reg[10] 
       (.C(independent_clock_bufg),
        .CE(sel),
        .D(\wait_time_cnt_reg[8]_i_1_n_5 ),
        .Q(wait_time_cnt_reg[10]),
        .S(wait_time_cnt0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_time_cnt_reg[11] 
       (.C(independent_clock_bufg),
        .CE(sel),
        .D(\wait_time_cnt_reg[8]_i_1_n_4 ),
        .Q(wait_time_cnt_reg[11]),
        .R(wait_time_cnt0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_time_cnt_reg[12] 
       (.C(independent_clock_bufg),
        .CE(sel),
        .D(\wait_time_cnt_reg[12]_i_1_n_7 ),
        .Q(wait_time_cnt_reg[12]),
        .R(wait_time_cnt0));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \wait_time_cnt_reg[12]_i_1 
       (.CI(\wait_time_cnt_reg[8]_i_1_n_0 ),
        .CO(\NLW_wait_time_cnt_reg[12]_i_1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b1,1'b1,1'b1}),
        .O({\wait_time_cnt_reg[12]_i_1_n_4 ,\wait_time_cnt_reg[12]_i_1_n_5 ,\wait_time_cnt_reg[12]_i_1_n_6 ,\wait_time_cnt_reg[12]_i_1_n_7 }),
        .S({\wait_time_cnt[12]_i_2_n_0 ,\wait_time_cnt[12]_i_3_n_0 ,\wait_time_cnt[12]_i_4_n_0 ,\wait_time_cnt[12]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \wait_time_cnt_reg[13] 
       (.C(independent_clock_bufg),
        .CE(sel),
        .D(\wait_time_cnt_reg[12]_i_1_n_6 ),
        .Q(wait_time_cnt_reg[13]),
        .R(wait_time_cnt0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_time_cnt_reg[14] 
       (.C(independent_clock_bufg),
        .CE(sel),
        .D(\wait_time_cnt_reg[12]_i_1_n_5 ),
        .Q(wait_time_cnt_reg[14]),
        .R(wait_time_cnt0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_time_cnt_reg[15] 
       (.C(independent_clock_bufg),
        .CE(sel),
        .D(\wait_time_cnt_reg[12]_i_1_n_4 ),
        .Q(wait_time_cnt_reg[15]),
        .R(wait_time_cnt0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_time_cnt_reg[1] 
       (.C(independent_clock_bufg),
        .CE(sel),
        .D(\wait_time_cnt_reg[0]_i_3_n_6 ),
        .Q(wait_time_cnt_reg[1]),
        .R(wait_time_cnt0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_time_cnt_reg[2] 
       (.C(independent_clock_bufg),
        .CE(sel),
        .D(\wait_time_cnt_reg[0]_i_3_n_5 ),
        .Q(wait_time_cnt_reg[2]),
        .R(wait_time_cnt0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_time_cnt_reg[3] 
       (.C(independent_clock_bufg),
        .CE(sel),
        .D(\wait_time_cnt_reg[0]_i_3_n_4 ),
        .Q(wait_time_cnt_reg[3]),
        .R(wait_time_cnt0));
  FDSE #(
    .INIT(1'b1)) 
    \wait_time_cnt_reg[4] 
       (.C(independent_clock_bufg),
        .CE(sel),
        .D(\wait_time_cnt_reg[4]_i_1_n_7 ),
        .Q(wait_time_cnt_reg[4]),
        .S(wait_time_cnt0));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \wait_time_cnt_reg[4]_i_1 
       (.CI(\wait_time_cnt_reg[0]_i_3_n_0 ),
        .CO({\wait_time_cnt_reg[4]_i_1_n_0 ,\NLW_wait_time_cnt_reg[4]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\wait_time_cnt_reg[4]_i_1_n_4 ,\wait_time_cnt_reg[4]_i_1_n_5 ,\wait_time_cnt_reg[4]_i_1_n_6 ,\wait_time_cnt_reg[4]_i_1_n_7 }),
        .S({\wait_time_cnt[4]_i_2_n_0 ,\wait_time_cnt[4]_i_3_n_0 ,\wait_time_cnt[4]_i_4_n_0 ,\wait_time_cnt[4]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \wait_time_cnt_reg[5] 
       (.C(independent_clock_bufg),
        .CE(sel),
        .D(\wait_time_cnt_reg[4]_i_1_n_6 ),
        .Q(wait_time_cnt_reg[5]),
        .R(wait_time_cnt0));
  FDSE #(
    .INIT(1'b1)) 
    \wait_time_cnt_reg[6] 
       (.C(independent_clock_bufg),
        .CE(sel),
        .D(\wait_time_cnt_reg[4]_i_1_n_5 ),
        .Q(wait_time_cnt_reg[6]),
        .S(wait_time_cnt0));
  FDSE #(
    .INIT(1'b1)) 
    \wait_time_cnt_reg[7] 
       (.C(independent_clock_bufg),
        .CE(sel),
        .D(\wait_time_cnt_reg[4]_i_1_n_4 ),
        .Q(wait_time_cnt_reg[7]),
        .S(wait_time_cnt0));
  FDSE #(
    .INIT(1'b1)) 
    \wait_time_cnt_reg[8] 
       (.C(independent_clock_bufg),
        .CE(sel),
        .D(\wait_time_cnt_reg[8]_i_1_n_7 ),
        .Q(wait_time_cnt_reg[8]),
        .S(wait_time_cnt0));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \wait_time_cnt_reg[8]_i_1 
       (.CI(\wait_time_cnt_reg[4]_i_1_n_0 ),
        .CO({\wait_time_cnt_reg[8]_i_1_n_0 ,\NLW_wait_time_cnt_reg[8]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\wait_time_cnt_reg[8]_i_1_n_4 ,\wait_time_cnt_reg[8]_i_1_n_5 ,\wait_time_cnt_reg[8]_i_1_n_6 ,\wait_time_cnt_reg[8]_i_1_n_7 }),
        .S({\wait_time_cnt[8]_i_2_n_0 ,\wait_time_cnt[8]_i_3_n_0 ,\wait_time_cnt[8]_i_4_n_0 ,\wait_time_cnt[8]_i_5_n_0 }));
  FDSE #(
    .INIT(1'b1)) 
    \wait_time_cnt_reg[9] 
       (.C(independent_clock_bufg),
        .CE(sel),
        .D(\wait_time_cnt_reg[8]_i_1_n_6 ),
        .Q(wait_time_cnt_reg[9]),
        .S(wait_time_cnt0));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_block" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_block
   (gmii_isolate,
    status_vector,
    resetdone,
    txn,
    txp,
    rxoutclk,
    txoutclk,
    sgmii_clk_r,
    sgmii_clk_en_reg,
    gmii_rx_dv,
    gmii_rx_er,
    sgmii_clk_f,
    mmcm_reset,
    gt0_pll0reset,
    gmii_rxd,
    out,
    signal_detect,
    CLK,
    data_in,
    configuration_vector,
    data_sync_reg6,
    rxn,
    rxp,
    gt0_pll0outclk_out,
    gt0_pll0outrefclk_out,
    gt0_pll1outclk_out,
    gt0_pll1outrefclk_out,
    rxuserclk2,
    reset_sync6,
    independent_clock_bufg,
    gmii_tx_en,
    gmii_tx_er,
    gt0_pll0refclklost_out,
    speed_is_10_100,
    speed_is_100,
    gt0_pll0lock_out,
    gmii_txd,
    lopt);
  output gmii_isolate;
  output [6:0]status_vector;
  output resetdone;
  output txn;
  output txp;
  output rxoutclk;
  output txoutclk;
  output sgmii_clk_r;
  output sgmii_clk_en_reg;
  output gmii_rx_dv;
  output gmii_rx_er;
  output sgmii_clk_f;
  output mmcm_reset;
  output gt0_pll0reset;
  output [7:0]gmii_rxd;
  input [0:0]out;
  input signal_detect;
  input CLK;
  input data_in;
  input [2:0]configuration_vector;
  input data_sync_reg6;
  input rxn;
  input rxp;
  input gt0_pll0outclk_out;
  input gt0_pll0outrefclk_out;
  input gt0_pll1outclk_out;
  input gt0_pll1outrefclk_out;
  input rxuserclk2;
  input reset_sync6;
  input independent_clock_bufg;
  input gmii_tx_en;
  input gmii_tx_er;
  input gt0_pll0refclklost_out;
  input speed_is_10_100;
  input speed_is_100;
  input gt0_pll0lock_out;
  input [7:0]gmii_txd;
  output lopt;

  wire CLK;
  wire data_in;
  wire data_sync_reg6;
  wire enablealign;
  wire gmii_rx_dv;
  wire gmii_rx_dv_int;
  wire gmii_rx_er;
  wire gmii_rx_er_int;
  wire [7:0]gmii_rxd;
  wire [7:0]gmii_rxd_int;
  wire gmii_tx_en;
  wire gmii_tx_en_int;
  wire gmii_tx_er;
  wire gmii_tx_er_int;
  wire [7:0]gmii_txd;
  wire [7:0]gmii_txd_int;
  wire gt0_pll0lock_out;
  wire gt0_pll0outclk_out;
  wire gt0_pll0outrefclk_out;
  wire gt0_pll0refclklost_out;
  wire gt0_pll0reset;
  wire gt0_pll1outclk_out;
  wire gt0_pll1outrefclk_out;
  wire independent_clock_bufg;
  wire lopt;
  wire mgt_rx_reset;
  wire mgt_tx_reset;
  wire mmcm_reset;
  wire [0:0]out;
  wire reset_sync6;
  wire resetdone;
  wire [1:1]rxbufstatus;
  wire rxchariscomma;
  wire rxcharisk;
  wire [7:0]rxdata;
  wire rxdisperr;
  wire rxn;
  wire rxnotintable;
  wire rxoutclk;
  wire rxp;
  wire rxuserclk2;
  wire signal_detect;
  wire speed_is_100;
  wire speed_is_10_100;
  wire [6:0]status_vector;
  wire transceiver_inst_n_13;
  wire transceiver_inst_n_14;
  wire tx_reset_done_i;
  wire txbuferr;
  wire txchardispmode;
  wire txchardispval;
  wire txcharisk;
  wire [7:0]txdata;
  wire txn;
  wire txoutclk;
  wire txp;
  wire NLW_gig_ethernet_pcs_pma_0_core_an_adv_config_val_UNCONNECTED;
  wire NLW_gig_ethernet_pcs_pma_0_core_an_enable_UNCONNECTED;
  wire NLW_gig_ethernet_pcs_pma_0_core_an_interrupt_UNCONNECTED;
  wire NLW_gig_ethernet_pcs_pma_0_core_an_restart_config_UNCONNECTED;
  wire NLW_gig_ethernet_pcs_pma_0_core_basex_or_sgmii_UNCONNECTED;
  wire NLW_gig_ethernet_pcs_pma_0_core_configuration_valid_UNCONNECTED;
  wire NLW_gig_ethernet_pcs_pma_0_core_drp_dclk_UNCONNECTED;
  wire NLW_gig_ethernet_pcs_pma_0_core_drp_den_UNCONNECTED;
  wire NLW_gig_ethernet_pcs_pma_0_core_drp_drdy_UNCONNECTED;
  wire NLW_gig_ethernet_pcs_pma_0_core_drp_dwe_UNCONNECTED;
  wire NLW_gig_ethernet_pcs_pma_0_core_drp_gnt_UNCONNECTED;
  wire NLW_gig_ethernet_pcs_pma_0_core_drp_req_UNCONNECTED;
  wire NLW_gig_ethernet_pcs_pma_0_core_en_cdet_UNCONNECTED;
  wire NLW_gig_ethernet_pcs_pma_0_core_ewrap_UNCONNECTED;
  wire NLW_gig_ethernet_pcs_pma_0_core_gmii_isolate_UNCONNECTED;
  wire NLW_gig_ethernet_pcs_pma_0_core_gtx_clk_UNCONNECTED;
  wire NLW_gig_ethernet_pcs_pma_0_core_loc_ref_UNCONNECTED;
  wire NLW_gig_ethernet_pcs_pma_0_core_mdc_UNCONNECTED;
  wire NLW_gig_ethernet_pcs_pma_0_core_mdio_in_UNCONNECTED;
  wire NLW_gig_ethernet_pcs_pma_0_core_mdio_out_UNCONNECTED;
  wire NLW_gig_ethernet_pcs_pma_0_core_mdio_tri_UNCONNECTED;
  wire NLW_gig_ethernet_pcs_pma_0_core_pma_rx_clk0_UNCONNECTED;
  wire NLW_gig_ethernet_pcs_pma_0_core_pma_rx_clk1_UNCONNECTED;
  wire NLW_gig_ethernet_pcs_pma_0_core_powerdown_UNCONNECTED;
  wire NLW_gig_ethernet_pcs_pma_0_core_rxrecclk_UNCONNECTED;
  wire NLW_gig_ethernet_pcs_pma_0_core_s_axi_aclk_UNCONNECTED;
  wire NLW_gig_ethernet_pcs_pma_0_core_s_axi_arready_UNCONNECTED;
  wire NLW_gig_ethernet_pcs_pma_0_core_s_axi_arvalid_UNCONNECTED;
  wire NLW_gig_ethernet_pcs_pma_0_core_s_axi_awready_UNCONNECTED;
  wire NLW_gig_ethernet_pcs_pma_0_core_s_axi_awvalid_UNCONNECTED;
  wire NLW_gig_ethernet_pcs_pma_0_core_s_axi_bready_UNCONNECTED;
  wire NLW_gig_ethernet_pcs_pma_0_core_s_axi_bvalid_UNCONNECTED;
  wire NLW_gig_ethernet_pcs_pma_0_core_s_axi_resetn_UNCONNECTED;
  wire NLW_gig_ethernet_pcs_pma_0_core_s_axi_rready_UNCONNECTED;
  wire NLW_gig_ethernet_pcs_pma_0_core_s_axi_rvalid_UNCONNECTED;
  wire NLW_gig_ethernet_pcs_pma_0_core_s_axi_wready_UNCONNECTED;
  wire NLW_gig_ethernet_pcs_pma_0_core_s_axi_wvalid_UNCONNECTED;
  wire NLW_gig_ethernet_pcs_pma_0_core_speed_is_100_UNCONNECTED;
  wire NLW_gig_ethernet_pcs_pma_0_core_speed_is_10_100_UNCONNECTED;
  wire NLW_gig_ethernet_pcs_pma_0_core_userclk_UNCONNECTED;
  wire [15:0]NLW_gig_ethernet_pcs_pma_0_core_an_adv_config_vector_UNCONNECTED;
  wire [4:0]NLW_gig_ethernet_pcs_pma_0_core_configuration_vector_UNCONNECTED;
  wire [63:0]NLW_gig_ethernet_pcs_pma_0_core_correction_timer_UNCONNECTED;
  wire [9:0]NLW_gig_ethernet_pcs_pma_0_core_drp_daddr_UNCONNECTED;
  wire [15:0]NLW_gig_ethernet_pcs_pma_0_core_drp_di_UNCONNECTED;
  wire [15:0]NLW_gig_ethernet_pcs_pma_0_core_drp_do_UNCONNECTED;
  wire [9:0]NLW_gig_ethernet_pcs_pma_0_core_link_timer_basex_UNCONNECTED;
  wire [9:0]NLW_gig_ethernet_pcs_pma_0_core_link_timer_sgmii_UNCONNECTED;
  wire [9:0]NLW_gig_ethernet_pcs_pma_0_core_link_timer_value_UNCONNECTED;
  wire [4:0]NLW_gig_ethernet_pcs_pma_0_core_phyad_UNCONNECTED;
  wire [9:0]NLW_gig_ethernet_pcs_pma_0_core_rx_code_group0_UNCONNECTED;
  wire [9:0]NLW_gig_ethernet_pcs_pma_0_core_rx_code_group1_UNCONNECTED;
  wire [15:0]NLW_gig_ethernet_pcs_pma_0_core_rx_gt_nominal_latency_UNCONNECTED;
  wire [0:0]NLW_gig_ethernet_pcs_pma_0_core_rxbufstatus_UNCONNECTED;
  wire [2:0]NLW_gig_ethernet_pcs_pma_0_core_rxclkcorcnt_UNCONNECTED;
  wire [63:0]NLW_gig_ethernet_pcs_pma_0_core_rxphy_correction_timer_UNCONNECTED;
  wire [31:0]NLW_gig_ethernet_pcs_pma_0_core_rxphy_ns_field_UNCONNECTED;
  wire [47:0]NLW_gig_ethernet_pcs_pma_0_core_rxphy_s_field_UNCONNECTED;
  wire [0:0]NLW_gig_ethernet_pcs_pma_0_core_rxrundisp_UNCONNECTED;
  wire [31:0]NLW_gig_ethernet_pcs_pma_0_core_s_axi_araddr_UNCONNECTED;
  wire [31:0]NLW_gig_ethernet_pcs_pma_0_core_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_gig_ethernet_pcs_pma_0_core_s_axi_bresp_UNCONNECTED;
  wire [31:0]NLW_gig_ethernet_pcs_pma_0_core_s_axi_rdata_UNCONNECTED;
  wire [1:0]NLW_gig_ethernet_pcs_pma_0_core_s_axi_rresp_UNCONNECTED;
  wire [31:0]NLW_gig_ethernet_pcs_pma_0_core_s_axi_wdata_UNCONNECTED;
  wire [1:0]NLW_gig_ethernet_pcs_pma_0_core_speed_selection_UNCONNECTED;
  wire [15:2]NLW_gig_ethernet_pcs_pma_0_core_status_vector_UNCONNECTED;
  wire [31:0]NLW_gig_ethernet_pcs_pma_0_core_systemtimer_ns_field_UNCONNECTED;
  wire [47:0]NLW_gig_ethernet_pcs_pma_0_core_systemtimer_s_field_UNCONNECTED;
  wire [9:0]NLW_gig_ethernet_pcs_pma_0_core_tx_code_group_UNCONNECTED;
  wire NLW_sgmii_logic_sgmii_clk_en_reg_UNCONNECTED;
  wire NLW_sgmii_logic_sgmii_clk_f_UNCONNECTED;
  wire NLW_sgmii_logic_sgmii_clk_r_UNCONNECTED;
  wire NLW_transceiver_inst_powerdown_UNCONNECTED;
  wire [1:0]NLW_transceiver_inst_rxclkcorcnt_UNCONNECTED;

  (* B_SHIFTER_ADDR = "10'b0101010000" *) 
  (* C_1588 = "0" *) 
  (* C_2_5G = "FALSE" *) 
  (* C_COMPONENT_NAME = "gig_ethernet_pcs_pma_0" *) 
  (* C_DYNAMIC_SWITCHING = "FALSE" *) 
  (* C_ELABORATION_TRANSIENT_DIR = "BlankString" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_HAS_AN = "FALSE" *) 
  (* C_HAS_AXIL = "FALSE" *) 
  (* C_HAS_MDIO = "FALSE" *) 
  (* C_HAS_TEMAC = "TRUE" *) 
  (* C_IS_SGMII = "TRUE" *) 
  (* C_RX_GMII_CLK = "TXOUTCLK" *) 
  (* C_SGMII_FABRIC_BUFFER = "TRUE" *) 
  (* C_SGMII_PHY_MODE = "FALSE" *) 
  (* C_USE_LVDS = "FALSE" *) 
  (* C_USE_TBI = "FALSE" *) 
  (* C_USE_TRANSCEIVER = "TRUE" *) 
  (* GT_RX_BYTE_WIDTH = "1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_v16_2_0 gig_ethernet_pcs_pma_0_core
       (.an_adv_config_val(NLW_gig_ethernet_pcs_pma_0_core_an_adv_config_val_UNCONNECTED),
        .an_adv_config_vector(NLW_gig_ethernet_pcs_pma_0_core_an_adv_config_vector_UNCONNECTED[15:0]),
        .an_enable(NLW_gig_ethernet_pcs_pma_0_core_an_enable_UNCONNECTED),
        .an_interrupt(NLW_gig_ethernet_pcs_pma_0_core_an_interrupt_UNCONNECTED),
        .an_restart_config(NLW_gig_ethernet_pcs_pma_0_core_an_restart_config_UNCONNECTED),
        .basex_or_sgmii(NLW_gig_ethernet_pcs_pma_0_core_basex_or_sgmii_UNCONNECTED),
        .configuration_valid(NLW_gig_ethernet_pcs_pma_0_core_configuration_valid_UNCONNECTED),
        .configuration_vector(NLW_gig_ethernet_pcs_pma_0_core_configuration_vector_UNCONNECTED[4:0]),
        .correction_timer(NLW_gig_ethernet_pcs_pma_0_core_correction_timer_UNCONNECTED[63:0]),
        .dcm_locked(data_in),
        .drp_daddr(NLW_gig_ethernet_pcs_pma_0_core_drp_daddr_UNCONNECTED[9:0]),
        .drp_dclk(NLW_gig_ethernet_pcs_pma_0_core_drp_dclk_UNCONNECTED),
        .drp_den(NLW_gig_ethernet_pcs_pma_0_core_drp_den_UNCONNECTED),
        .drp_di(NLW_gig_ethernet_pcs_pma_0_core_drp_di_UNCONNECTED[15:0]),
        .drp_do(NLW_gig_ethernet_pcs_pma_0_core_drp_do_UNCONNECTED[15:0]),
        .drp_drdy(NLW_gig_ethernet_pcs_pma_0_core_drp_drdy_UNCONNECTED),
        .drp_dwe(NLW_gig_ethernet_pcs_pma_0_core_drp_dwe_UNCONNECTED),
        .drp_gnt(NLW_gig_ethernet_pcs_pma_0_core_drp_gnt_UNCONNECTED),
        .drp_req(NLW_gig_ethernet_pcs_pma_0_core_drp_req_UNCONNECTED),
        .en_cdet(NLW_gig_ethernet_pcs_pma_0_core_en_cdet_UNCONNECTED),
        .enablealign(enablealign),
        .ewrap(NLW_gig_ethernet_pcs_pma_0_core_ewrap_UNCONNECTED),
        .gmii_isolate(NLW_gig_ethernet_pcs_pma_0_core_gmii_isolate_UNCONNECTED),
        .gmii_rx_dv(gmii_rx_dv_int),
        .gmii_rx_er(gmii_rx_er_int),
        .gmii_rxd(gmii_rxd_int),
        .gmii_tx_en(gmii_tx_en_int),
        .gmii_tx_er(gmii_tx_er_int),
        .gmii_txd(gmii_txd_int),
        .gtx_clk(NLW_gig_ethernet_pcs_pma_0_core_gtx_clk_UNCONNECTED),
        .link_timer_basex(NLW_gig_ethernet_pcs_pma_0_core_link_timer_basex_UNCONNECTED[9:0]),
        .link_timer_sgmii(NLW_gig_ethernet_pcs_pma_0_core_link_timer_sgmii_UNCONNECTED[9:0]),
        .link_timer_value(NLW_gig_ethernet_pcs_pma_0_core_link_timer_value_UNCONNECTED[9:0]),
        .loc_ref(NLW_gig_ethernet_pcs_pma_0_core_loc_ref_UNCONNECTED),
        .lopt(lopt),
        .mdc(NLW_gig_ethernet_pcs_pma_0_core_mdc_UNCONNECTED),
        .mdio_in(NLW_gig_ethernet_pcs_pma_0_core_mdio_in_UNCONNECTED),
        .mdio_out(NLW_gig_ethernet_pcs_pma_0_core_mdio_out_UNCONNECTED),
        .mdio_tri(NLW_gig_ethernet_pcs_pma_0_core_mdio_tri_UNCONNECTED),
        .mgt_rx_reset(mgt_rx_reset),
        .mgt_tx_reset(mgt_tx_reset),
        .phyad(NLW_gig_ethernet_pcs_pma_0_core_phyad_UNCONNECTED[4:0]),
        .pma_rx_clk0(NLW_gig_ethernet_pcs_pma_0_core_pma_rx_clk0_UNCONNECTED),
        .pma_rx_clk1(NLW_gig_ethernet_pcs_pma_0_core_pma_rx_clk1_UNCONNECTED),
        .powerdown(NLW_gig_ethernet_pcs_pma_0_core_powerdown_UNCONNECTED),
        .reset(out),
        .reset_done(resetdone),
        .rx_code_group0(NLW_gig_ethernet_pcs_pma_0_core_rx_code_group0_UNCONNECTED[9:0]),
        .rx_code_group1(NLW_gig_ethernet_pcs_pma_0_core_rx_code_group1_UNCONNECTED[9:0]),
        .rx_gt_nominal_latency(NLW_gig_ethernet_pcs_pma_0_core_rx_gt_nominal_latency_UNCONNECTED[15:0]),
        .rxbufstatus({rxbufstatus,NLW_gig_ethernet_pcs_pma_0_core_rxbufstatus_UNCONNECTED[0]}),
        .rxchariscomma(rxchariscomma),
        .rxcharisk(rxcharisk),
        .rxclkcorcnt(NLW_gig_ethernet_pcs_pma_0_core_rxclkcorcnt_UNCONNECTED[2:0]),
        .rxdata(rxdata),
        .rxdisperr(rxdisperr),
        .rxnotintable(rxnotintable),
        .rxphy_correction_timer(NLW_gig_ethernet_pcs_pma_0_core_rxphy_correction_timer_UNCONNECTED[63:0]),
        .rxphy_ns_field(NLW_gig_ethernet_pcs_pma_0_core_rxphy_ns_field_UNCONNECTED[31:0]),
        .rxphy_s_field(NLW_gig_ethernet_pcs_pma_0_core_rxphy_s_field_UNCONNECTED[47:0]),
        .rxrecclk(NLW_gig_ethernet_pcs_pma_0_core_rxrecclk_UNCONNECTED),
        .rxrundisp(NLW_gig_ethernet_pcs_pma_0_core_rxrundisp_UNCONNECTED[0]),
        .s_axi_aclk(NLW_gig_ethernet_pcs_pma_0_core_s_axi_aclk_UNCONNECTED),
        .s_axi_araddr(NLW_gig_ethernet_pcs_pma_0_core_s_axi_araddr_UNCONNECTED[31:0]),
        .s_axi_arready(NLW_gig_ethernet_pcs_pma_0_core_s_axi_arready_UNCONNECTED),
        .s_axi_arvalid(NLW_gig_ethernet_pcs_pma_0_core_s_axi_arvalid_UNCONNECTED),
        .s_axi_awaddr(NLW_gig_ethernet_pcs_pma_0_core_s_axi_awaddr_UNCONNECTED[31:0]),
        .s_axi_awready(NLW_gig_ethernet_pcs_pma_0_core_s_axi_awready_UNCONNECTED),
        .s_axi_awvalid(NLW_gig_ethernet_pcs_pma_0_core_s_axi_awvalid_UNCONNECTED),
        .s_axi_bready(NLW_gig_ethernet_pcs_pma_0_core_s_axi_bready_UNCONNECTED),
        .s_axi_bresp(NLW_gig_ethernet_pcs_pma_0_core_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_gig_ethernet_pcs_pma_0_core_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_gig_ethernet_pcs_pma_0_core_s_axi_rdata_UNCONNECTED[31:0]),
        .s_axi_resetn(NLW_gig_ethernet_pcs_pma_0_core_s_axi_resetn_UNCONNECTED),
        .s_axi_rready(NLW_gig_ethernet_pcs_pma_0_core_s_axi_rready_UNCONNECTED),
        .s_axi_rresp(NLW_gig_ethernet_pcs_pma_0_core_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_gig_ethernet_pcs_pma_0_core_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata(NLW_gig_ethernet_pcs_pma_0_core_s_axi_wdata_UNCONNECTED[31:0]),
        .s_axi_wready(NLW_gig_ethernet_pcs_pma_0_core_s_axi_wready_UNCONNECTED),
        .s_axi_wvalid(NLW_gig_ethernet_pcs_pma_0_core_s_axi_wvalid_UNCONNECTED),
        .signal_detect(signal_detect),
        .speed_is_100(NLW_gig_ethernet_pcs_pma_0_core_speed_is_100_UNCONNECTED),
        .speed_is_10_100(NLW_gig_ethernet_pcs_pma_0_core_speed_is_10_100_UNCONNECTED),
        .speed_selection(NLW_gig_ethernet_pcs_pma_0_core_speed_selection_UNCONNECTED[1:0]),
        .status_vector({NLW_gig_ethernet_pcs_pma_0_core_status_vector_UNCONNECTED[15:2],status_vector[1:0]}),
        .systemtimer_ns_field(NLW_gig_ethernet_pcs_pma_0_core_systemtimer_ns_field_UNCONNECTED[31:0]),
        .systemtimer_s_field(NLW_gig_ethernet_pcs_pma_0_core_systemtimer_s_field_UNCONNECTED[47:0]),
        .tx_code_group(NLW_gig_ethernet_pcs_pma_0_core_tx_code_group_UNCONNECTED[9:0]),
        .txbuferr(txbuferr),
        .txchardispmode(txchardispmode),
        .txchardispval(txchardispval),
        .txcharisk(txcharisk),
        .txdata(txdata),
        .userclk(NLW_gig_ethernet_pcs_pma_0_core_userclk_UNCONNECTED),
        .userclk2(CLK));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sgmii_adapt sgmii_logic
       (.CLK(CLK),
        .D(gmii_rxd_int),
        .Q(gmii_txd_int),
        .SR(mgt_tx_reset),
        .gmii_rx_dv(gmii_rx_dv_int),
        .gmii_rx_dv_out_reg(gmii_rx_dv),
        .gmii_rx_er(gmii_rx_er_int),
        .gmii_rx_er_out_reg(gmii_rx_er),
        .gmii_rxd(gmii_rxd),
        .gmii_tx_en(gmii_tx_en_int),
        .gmii_tx_en_out_reg(gmii_tx_en),
        .gmii_tx_er(gmii_tx_er_int),
        .gmii_tx_er_out_reg(gmii_tx_er),
        .gmii_txd(gmii_txd),
        .sgmii_clk_en_reg(NLW_sgmii_logic_sgmii_clk_en_reg_UNCONNECTED),
        .sgmii_clk_f(NLW_sgmii_logic_sgmii_clk_f_UNCONNECTED),
        .sgmii_clk_r(NLW_sgmii_logic_sgmii_clk_r_UNCONNECTED),
        .speed_is_100(speed_is_100),
        .speed_is_10_100(speed_is_10_100));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block sync_block_rx_reset_done
       (.CLK(CLK),
        .data_in(transceiver_inst_n_14),
        .data_out(tx_reset_done_i),
        .resetdone(resetdone));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_0 sync_block_tx_reset_done
       (.CLK(CLK),
        .data_in(transceiver_inst_n_13),
        .data_out(tx_reset_done_i));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_transceiver transceiver_inst
       (.CLK(CLK),
        .D(txchardispmode),
        .Q(rxdata),
        .SR(mgt_tx_reset),
        .data_in(transceiver_inst_n_13),
        .data_sync_reg1(data_in),
        .data_sync_reg6(data_sync_reg6),
        .enablealign(enablealign),
        .gt0_pll0lock_out(gt0_pll0lock_out),
        .gt0_pll0outclk_out(gt0_pll0outclk_out),
        .gt0_pll0outrefclk_out(gt0_pll0outrefclk_out),
        .gt0_pll0refclklost_out(gt0_pll0refclklost_out),
        .gt0_pll1outclk_out(gt0_pll1outclk_out),
        .gt0_pll1outrefclk_out(gt0_pll1outrefclk_out),
        .independent_clock_bufg(independent_clock_bufg),
        .mgt_rx_reset(mgt_rx_reset),
        .mmcm_reset(mmcm_reset),
        .out(out),
        .powerdown(NLW_transceiver_inst_powerdown_UNCONNECTED),
        .reset_in(gt0_pll0reset),
        .reset_sync6(reset_sync6),
        .rx_fsm_reset_done_int_reg(transceiver_inst_n_14),
        .rxbufstatus(rxbufstatus),
        .rxchariscomma(rxchariscomma),
        .rxcharisk(rxcharisk),
        .rxclkcorcnt(NLW_transceiver_inst_rxclkcorcnt_UNCONNECTED[1:0]),
        .rxdisperr(rxdisperr),
        .rxn(rxn),
        .rxnotintable(rxnotintable),
        .rxoutclk(rxoutclk),
        .rxp(rxp),
        .rxuserclk2(rxuserclk2),
        .status_vector(status_vector[1]),
        .txbuferr(txbuferr),
        .txchardispval_reg_reg_0(txchardispval),
        .txcharisk_reg_reg_0(txcharisk),
        .\txdata_reg_reg[7]_0 (txdata),
        .txn(txn),
        .txoutclk(txoutclk),
        .txp(txp));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_clk_gen" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_clk_gen
   (sgmii_clk_r,
    sgmii_clk_en_reg_0,
    sgmii_clk_f,
    CLK,
    reset_out,
    data_out,
    speed_is_10_100_fall_reg_0);
  output sgmii_clk_r;
  output sgmii_clk_en_reg_0;
  output sgmii_clk_f;
  input CLK;
  input reset_out;
  input data_out;
  input speed_is_10_100_fall_reg_0;

  wire CLK;
  wire clk12_5;
  wire clk12_5_reg;
  wire clk1_25;
  wire clk1_25_reg;
  wire clk_en_12_5_fall;
  wire clk_en_12_5_fall0;
  wire clk_en_12_5_rise;
  wire clk_en_12_5_rise0;
  wire clk_en_1_25_fall;
  wire clk_en_1_25_fall0;
  wire data_out;
  wire reset_out;
  wire sgmii_clk_en_i_1_n_0;
  wire sgmii_clk_en_reg_0;
  wire speed_is_10_100_fall_reg_0;
  wire NLW_clk_div1_clk1_25_UNCONNECTED;
  wire NLW_clk_div1_reset_fall_UNCONNECTED;
  wire NLW_clk_div1_speed_is_100_fall_UNCONNECTED;
  wire NLW_clk_div1_speed_is_10_100_fall_UNCONNECTED;
  wire NLW_clk_div1_speed_is_10_100_fall_reg_UNCONNECTED;
  wire NLW_clk_div2_clk12_5_UNCONNECTED;
  wire NLW_clk_div2_data_out_UNCONNECTED;
  wire NLW_clk_div2_sgmii_clk_r0_out_UNCONNECTED;
  wire NLW_clk_div2_sgmii_clk_r_reg_UNCONNECTED;

  FDRE #(
    .INIT(1'b0)) 
    clk12_5_reg_reg
       (.C(CLK),
        .CE(1'b1),
        .D(clk12_5),
        .Q(clk12_5_reg),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    clk1_25_reg_reg
       (.C(CLK),
        .CE(1'b1),
        .D(clk1_25),
        .Q(clk1_25_reg),
        .R(reset_out));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_johnson_cntr clk_div1
       (.CLK(CLK),
        .clk12_5(clk12_5),
        .clk12_5_reg(clk12_5_reg),
        .clk1_25(NLW_clk_div1_clk1_25_UNCONNECTED),
        .clk_en_12_5_fall0(clk_en_12_5_fall0),
        .clk_en_12_5_rise0(clk_en_12_5_rise0),
        .reset_fall(NLW_clk_div1_reset_fall_UNCONNECTED),
        .reset_out(reset_out),
        .speed_is_100_fall(NLW_clk_div1_speed_is_100_fall_UNCONNECTED),
        .speed_is_10_100_fall(NLW_clk_div1_speed_is_10_100_fall_UNCONNECTED),
        .speed_is_10_100_fall_reg(NLW_clk_div1_speed_is_10_100_fall_reg_UNCONNECTED));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_johnson_cntr_37 clk_div2
       (.CLK(CLK),
        .clk12_5(NLW_clk_div2_clk12_5_UNCONNECTED),
        .clk1_25(clk1_25),
        .clk1_25_reg(clk1_25_reg),
        .clk_en_12_5_rise(clk_en_12_5_rise),
        .clk_en_1_25_fall0(clk_en_1_25_fall0),
        .data_out(NLW_clk_div2_data_out_UNCONNECTED),
        .reset_out(reset_out),
        .sgmii_clk_r0_out(NLW_clk_div2_sgmii_clk_r0_out_UNCONNECTED),
        .sgmii_clk_r_reg(NLW_clk_div2_sgmii_clk_r_reg_UNCONNECTED));
  FDRE #(
    .INIT(1'b0)) 
    clk_en_12_5_fall_reg
       (.C(CLK),
        .CE(1'b1),
        .D(clk_en_12_5_fall0),
        .Q(clk_en_12_5_fall),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    clk_en_12_5_rise_reg
       (.C(CLK),
        .CE(1'b1),
        .D(clk_en_12_5_rise0),
        .Q(clk_en_12_5_rise),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    clk_en_1_25_fall_reg
       (.C(CLK),
        .CE(1'b1),
        .D(clk_en_1_25_fall0),
        .Q(clk_en_1_25_fall),
        .R(reset_out));
  LUT4 #(
    .INIT(16'hE2FF)) 
    sgmii_clk_en_i_1
       (.I0(clk_en_1_25_fall),
        .I1(data_out),
        .I2(clk_en_12_5_fall),
        .I3(speed_is_10_100_fall_reg_0),
        .O(sgmii_clk_en_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sgmii_clk_en_reg
       (.C(CLK),
        .CE(1'b1),
        .D(sgmii_clk_en_i_1_n_0),
        .Q(sgmii_clk_en_reg_0),
        .R(reset_out));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_clocking" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_clocking
   (gtrefclk_out,
    gtrefclk_bufg,
    mmcm_locked,
    userclk,
    userclk2,
    rxuserclk2,
    gtrefclk_p,
    gtrefclk_n,
    txoutclk,
    mmcm_reset,
    rxoutclk);
  output gtrefclk_out;
  output gtrefclk_bufg;
  output mmcm_locked;
  output userclk;
  output userclk2;
  output rxuserclk2;
  input gtrefclk_p;
  input gtrefclk_n;
  input txoutclk;
  input mmcm_reset;
  input rxoutclk;

  wire clkfbout;
  wire clkout0;
  wire clkout1;
  wire gtrefclk_bufg;
  wire gtrefclk_n;
  wire gtrefclk_out;
  wire gtrefclk_p;
  wire mmcm_locked;
  wire mmcm_reset;
  wire rxoutclk;
  wire rxuserclk2;
  wire txoutclk;
  wire txoutclk_bufg;
  wire userclk;
  wire userclk2;
  wire NLW_ibufds_gtrefclk_ODIV2_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKFBOUTB_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKFBSTOPPED_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKINSTOPPED_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT0B_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT1B_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT2_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT2B_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT3_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT3B_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT4_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT5_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT6_UNCONNECTED;
  wire NLW_mmcm_adv_inst_DRDY_UNCONNECTED;
  wire NLW_mmcm_adv_inst_PSDONE_UNCONNECTED;
  wire [15:0]NLW_mmcm_adv_inst_DO_UNCONNECTED;

  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFG bufg_gtrefclk
       (.I(gtrefclk_out),
        .O(gtrefclk_bufg));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFG bufg_txoutclk
       (.I(txoutclk),
        .O(txoutclk_bufg));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFG bufg_userclk
       (.I(clkout1),
        .O(userclk));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFG bufg_userclk2
       (.I(clkout0),
        .O(userclk2));
  (* BOX_TYPE = "PRIMITIVE" *) 
  IBUFDS_GTE2 #(
    .CLKCM_CFG("TRUE"),
    .CLKRCV_TRST("TRUE"),
    .CLKSWING_CFG(2'b11)) 
    ibufds_gtrefclk
       (.CEB(1'b0),
        .I(gtrefclk_p),
        .IB(gtrefclk_n),
        .O(gtrefclk_out),
        .ODIV2(NLW_ibufds_gtrefclk_ODIV2_UNCONNECTED));
  (* BOX_TYPE = "PRIMITIVE" *) 
  MMCME2_ADV #(
    .BANDWIDTH("OPTIMIZED"),
    .CLKFBOUT_MULT_F(16.000000),
    .CLKFBOUT_PHASE(0.000000),
    .CLKFBOUT_USE_FINE_PS("FALSE"),
    .CLKIN1_PERIOD(16.000000),
    .CLKIN2_PERIOD(0.000000),
    .CLKOUT0_DIVIDE_F(8.000000),
    .CLKOUT0_DUTY_CYCLE(0.500000),
    .CLKOUT0_PHASE(0.000000),
    .CLKOUT0_USE_FINE_PS("FALSE"),
    .CLKOUT1_DIVIDE(16),
    .CLKOUT1_DUTY_CYCLE(0.500000),
    .CLKOUT1_PHASE(0.000000),
    .CLKOUT1_USE_FINE_PS("FALSE"),
    .CLKOUT2_DIVIDE(1),
    .CLKOUT2_DUTY_CYCLE(0.500000),
    .CLKOUT2_PHASE(0.000000),
    .CLKOUT2_USE_FINE_PS("FALSE"),
    .CLKOUT3_DIVIDE(1),
    .CLKOUT3_DUTY_CYCLE(0.500000),
    .CLKOUT3_PHASE(0.000000),
    .CLKOUT3_USE_FINE_PS("FALSE"),
    .CLKOUT4_CASCADE("FALSE"),
    .CLKOUT4_DIVIDE(1),
    .CLKOUT4_DUTY_CYCLE(0.500000),
    .CLKOUT4_PHASE(0.000000),
    .CLKOUT4_USE_FINE_PS("FALSE"),
    .CLKOUT5_DIVIDE(1),
    .CLKOUT5_DUTY_CYCLE(0.500000),
    .CLKOUT5_PHASE(0.000000),
    .CLKOUT5_USE_FINE_PS("FALSE"),
    .CLKOUT6_DIVIDE(1),
    .CLKOUT6_DUTY_CYCLE(0.500000),
    .CLKOUT6_PHASE(0.000000),
    .CLKOUT6_USE_FINE_PS("FALSE"),
    .COMPENSATION("INTERNAL"),
    .DIVCLK_DIVIDE(1),
    .IS_CLKINSEL_INVERTED(1'b0),
    .IS_PSEN_INVERTED(1'b0),
    .IS_PSINCDEC_INVERTED(1'b0),
    .IS_PWRDWN_INVERTED(1'b0),
    .IS_RST_INVERTED(1'b0),
    .REF_JITTER1(0.010000),
    .REF_JITTER2(0.010000),
    .SS_EN("FALSE"),
    .SS_MODE("CENTER_HIGH"),
    .SS_MOD_PERIOD(10000),
    .STARTUP_WAIT("FALSE")) 
    mmcm_adv_inst
       (.CLKFBIN(clkfbout),
        .CLKFBOUT(clkfbout),
        .CLKFBOUTB(NLW_mmcm_adv_inst_CLKFBOUTB_UNCONNECTED),
        .CLKFBSTOPPED(NLW_mmcm_adv_inst_CLKFBSTOPPED_UNCONNECTED),
        .CLKIN1(txoutclk_bufg),
        .CLKIN2(1'b0),
        .CLKINSEL(1'b1),
        .CLKINSTOPPED(NLW_mmcm_adv_inst_CLKINSTOPPED_UNCONNECTED),
        .CLKOUT0(clkout0),
        .CLKOUT0B(NLW_mmcm_adv_inst_CLKOUT0B_UNCONNECTED),
        .CLKOUT1(clkout1),
        .CLKOUT1B(NLW_mmcm_adv_inst_CLKOUT1B_UNCONNECTED),
        .CLKOUT2(NLW_mmcm_adv_inst_CLKOUT2_UNCONNECTED),
        .CLKOUT2B(NLW_mmcm_adv_inst_CLKOUT2B_UNCONNECTED),
        .CLKOUT3(NLW_mmcm_adv_inst_CLKOUT3_UNCONNECTED),
        .CLKOUT3B(NLW_mmcm_adv_inst_CLKOUT3B_UNCONNECTED),
        .CLKOUT4(NLW_mmcm_adv_inst_CLKOUT4_UNCONNECTED),
        .CLKOUT5(NLW_mmcm_adv_inst_CLKOUT5_UNCONNECTED),
        .CLKOUT6(NLW_mmcm_adv_inst_CLKOUT6_UNCONNECTED),
        .DADDR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DCLK(1'b0),
        .DEN(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DO(NLW_mmcm_adv_inst_DO_UNCONNECTED[15:0]),
        .DRDY(NLW_mmcm_adv_inst_DRDY_UNCONNECTED),
        .DWE(1'b0),
        .LOCKED(mmcm_locked),
        .PSCLK(1'b0),
        .PSDONE(NLW_mmcm_adv_inst_PSDONE_UNCONNECTED),
        .PSEN(1'b0),
        .PSINCDEC(1'b0),
        .PWRDWN(1'b0),
        .RST(mmcm_reset));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFG rxrecclkbufg
       (.I(rxoutclk),
        .O(rxuserclk2));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_common_reset" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_common_reset
   (PLL0RESET_I,
    independent_clock_bufg,
    out,
    gt0_pll0reset,
    cpll_reset_i);
  output PLL0RESET_I;
  input independent_clock_bufg;
  input [0:0]out;
  input gt0_pll0reset;
  input cpll_reset_i;

  wire COMMON_RESET_i_1_n_0;
  wire PLL0RESET_I;
  wire common_reset_asserted;
  wire common_reset_asserted_i_1_n_0;
  wire commonreset_i;
  wire cpll_reset_i;
  wire gt0_pll0reset;
  wire independent_clock_bufg;
  wire init_wait_count;
  wire \init_wait_count[0]_i_1__1_n_0 ;
  wire \init_wait_count[7]_i_3_n_0 ;
  wire \init_wait_count[7]_i_4__1_n_0 ;
  wire [7:0]init_wait_count_reg;
  wire init_wait_done_i_1__1_n_0;
  wire init_wait_done_reg_n_0;
  wire [0:0]out;
  wire [7:1]p_0_in;
  wire state;
  wire state_i_1_n_0;

  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT3 #(
    .INIT(8'h74)) 
    COMMON_RESET_i_1
       (.I0(common_reset_asserted),
        .I1(state),
        .I2(commonreset_i),
        .O(COMMON_RESET_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    COMMON_RESET_reg
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(COMMON_RESET_i_1_n_0),
        .Q(commonreset_i),
        .R(out));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'hE)) 
    common_reset_asserted_i_1
       (.I0(state),
        .I1(common_reset_asserted),
        .O(common_reset_asserted_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    common_reset_asserted_reg
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(common_reset_asserted_i_1_n_0),
        .Q(common_reset_asserted),
        .R(out));
  LUT3 #(
    .INIT(8'hFE)) 
    gtpe2_common_i_i_1
       (.I0(commonreset_i),
        .I1(gt0_pll0reset),
        .I2(cpll_reset_i),
        .O(PLL0RESET_I));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \init_wait_count[0]_i_1__1 
       (.I0(init_wait_count_reg[0]),
        .O(\init_wait_count[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \init_wait_count[1]_i_1__1 
       (.I0(init_wait_count_reg[0]),
        .I1(init_wait_count_reg[1]),
        .O(p_0_in[1]));
  LUT3 #(
    .INIT(8'h6A)) 
    \init_wait_count[2]_i_1__1 
       (.I0(init_wait_count_reg[2]),
        .I1(init_wait_count_reg[0]),
        .I2(init_wait_count_reg[1]),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \init_wait_count[3]_i_1__1 
       (.I0(init_wait_count_reg[3]),
        .I1(init_wait_count_reg[1]),
        .I2(init_wait_count_reg[0]),
        .I3(init_wait_count_reg[2]),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \init_wait_count[4]_i_1__1 
       (.I0(init_wait_count_reg[4]),
        .I1(init_wait_count_reg[2]),
        .I2(init_wait_count_reg[0]),
        .I3(init_wait_count_reg[1]),
        .I4(init_wait_count_reg[3]),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \init_wait_count[5]_i_1__1 
       (.I0(init_wait_count_reg[3]),
        .I1(init_wait_count_reg[1]),
        .I2(init_wait_count_reg[0]),
        .I3(init_wait_count_reg[2]),
        .I4(init_wait_count_reg[4]),
        .I5(init_wait_count_reg[5]),
        .O(p_0_in[5]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \init_wait_count[6]_i_1__1 
       (.I0(init_wait_count_reg[6]),
        .I1(\init_wait_count[7]_i_4__1_n_0 ),
        .O(p_0_in[6]));
  LUT5 #(
    .INIT(32'hFFFFEFFF)) 
    \init_wait_count[7]_i_1 
       (.I0(init_wait_count_reg[4]),
        .I1(init_wait_count_reg[7]),
        .I2(init_wait_count_reg[2]),
        .I3(init_wait_count_reg[3]),
        .I4(\init_wait_count[7]_i_3_n_0 ),
        .O(init_wait_count));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \init_wait_count[7]_i_2__1 
       (.I0(init_wait_count_reg[7]),
        .I1(\init_wait_count[7]_i_4__1_n_0 ),
        .I2(init_wait_count_reg[6]),
        .O(p_0_in[7]));
  LUT4 #(
    .INIT(16'hFF7F)) 
    \init_wait_count[7]_i_3 
       (.I0(init_wait_count_reg[5]),
        .I1(init_wait_count_reg[1]),
        .I2(init_wait_count_reg[6]),
        .I3(init_wait_count_reg[0]),
        .O(\init_wait_count[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \init_wait_count[7]_i_4__1 
       (.I0(init_wait_count_reg[5]),
        .I1(init_wait_count_reg[4]),
        .I2(init_wait_count_reg[2]),
        .I3(init_wait_count_reg[0]),
        .I4(init_wait_count_reg[1]),
        .I5(init_wait_count_reg[3]),
        .O(\init_wait_count[7]_i_4__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[0] 
       (.C(independent_clock_bufg),
        .CE(init_wait_count),
        .D(\init_wait_count[0]_i_1__1_n_0 ),
        .Q(init_wait_count_reg[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[1] 
       (.C(independent_clock_bufg),
        .CE(init_wait_count),
        .D(p_0_in[1]),
        .Q(init_wait_count_reg[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[2] 
       (.C(independent_clock_bufg),
        .CE(init_wait_count),
        .D(p_0_in[2]),
        .Q(init_wait_count_reg[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[3] 
       (.C(independent_clock_bufg),
        .CE(init_wait_count),
        .D(p_0_in[3]),
        .Q(init_wait_count_reg[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[4] 
       (.C(independent_clock_bufg),
        .CE(init_wait_count),
        .D(p_0_in[4]),
        .Q(init_wait_count_reg[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[5] 
       (.C(independent_clock_bufg),
        .CE(init_wait_count),
        .D(p_0_in[5]),
        .Q(init_wait_count_reg[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[6] 
       (.C(independent_clock_bufg),
        .CE(init_wait_count),
        .D(p_0_in[6]),
        .Q(init_wait_count_reg[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \init_wait_count_reg[7] 
       (.C(independent_clock_bufg),
        .CE(init_wait_count),
        .D(p_0_in[7]),
        .Q(init_wait_count_reg[7]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFFF00001000)) 
    init_wait_done_i_1__1
       (.I0(init_wait_count_reg[4]),
        .I1(init_wait_count_reg[7]),
        .I2(init_wait_count_reg[2]),
        .I3(init_wait_count_reg[3]),
        .I4(\init_wait_count[7]_i_3_n_0 ),
        .I5(init_wait_done_reg_n_0),
        .O(init_wait_done_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    init_wait_done_reg
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(init_wait_done_i_1__1_n_0),
        .Q(init_wait_done_reg_n_0),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    state_i_1
       (.I0(init_wait_done_reg_n_0),
        .I1(state),
        .O(state_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    state_reg
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(state_i_1_n_0),
        .Q(state),
        .R(out));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_gt_common" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_gt_common
   (gt0_pll0lock_out,
    gt0_pll0outclk_out,
    gt0_pll0outrefclk_out,
    gt0_pll0refclklost_out,
    gt0_pll1outclk_out,
    gt0_pll1outrefclk_out,
    cpll_reset_i,
    gtrefclk_out,
    independent_clock_bufg,
    PLL0RESET_I,
    gtrefclk_bufg);
  output gt0_pll0lock_out;
  output gt0_pll0outclk_out;
  output gt0_pll0outrefclk_out;
  output gt0_pll0refclklost_out;
  output gt0_pll1outclk_out;
  output gt0_pll1outrefclk_out;
  output cpll_reset_i;
  input gtrefclk_out;
  input independent_clock_bufg;
  input PLL0RESET_I;
  input gtrefclk_bufg;

  wire PLL0RESET_I;
  wire cpll_pd_i;
  wire cpll_reset_i;
  wire \cpllpd_wait_reg[31]_srl32_n_1 ;
  wire \cpllpd_wait_reg[63]_srl32_n_1 ;
  wire \cpllpd_wait_reg[94]_srl31_n_0 ;
  wire \cpllreset_wait_reg[126]_srl31_n_0 ;
  wire \cpllreset_wait_reg[31]_srl32_n_1 ;
  wire \cpllreset_wait_reg[63]_srl32_n_1 ;
  wire \cpllreset_wait_reg[95]_srl32_n_1 ;
  wire gt0_pll0lock_out;
  wire gt0_pll0outclk_out;
  wire gt0_pll0outrefclk_out;
  wire gt0_pll0refclklost_out;
  wire gt0_pll1outclk_out;
  wire gt0_pll1outrefclk_out;
  wire gtrefclk_bufg;
  wire gtrefclk_out;
  wire independent_clock_bufg;
  wire \NLW_cpllpd_wait_reg[31]_srl32_Q_UNCONNECTED ;
  wire \NLW_cpllpd_wait_reg[63]_srl32_Q_UNCONNECTED ;
  wire \NLW_cpllpd_wait_reg[94]_srl31_Q31_UNCONNECTED ;
  wire \NLW_cpllreset_wait_reg[126]_srl31_Q31_UNCONNECTED ;
  wire \NLW_cpllreset_wait_reg[31]_srl32_Q_UNCONNECTED ;
  wire \NLW_cpllreset_wait_reg[63]_srl32_Q_UNCONNECTED ;
  wire \NLW_cpllreset_wait_reg[95]_srl32_Q_UNCONNECTED ;
  wire NLW_gtpe2_common_i_DRPRDY_UNCONNECTED;
  wire NLW_gtpe2_common_i_PLL0FBCLKLOST_UNCONNECTED;
  wire NLW_gtpe2_common_i_PLL1FBCLKLOST_UNCONNECTED;
  wire NLW_gtpe2_common_i_PLL1LOCK_UNCONNECTED;
  wire NLW_gtpe2_common_i_PLL1REFCLKLOST_UNCONNECTED;
  wire NLW_gtpe2_common_i_REFCLKOUTMONITOR0_UNCONNECTED;
  wire NLW_gtpe2_common_i_REFCLKOUTMONITOR1_UNCONNECTED;
  wire [7:0]NLW_gtpe2_common_i_DMONITOROUT_UNCONNECTED;
  wire [15:0]NLW_gtpe2_common_i_DRPDO_UNCONNECTED;
  wire [15:0]NLW_gtpe2_common_i_PMARSVDOUT_UNCONNECTED;

  (* srl_bus_name = "inst/\core_gt_common_i/cpllpd_wait_reg " *) 
  (* srl_name = "inst/\core_gt_common_i/cpllpd_wait_reg[31]_srl32 " *) 
  SRLC32E #(
    .INIT(32'hFFFFFFFF)) 
    \cpllpd_wait_reg[31]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gtrefclk_bufg),
        .D(1'b0),
        .Q(\NLW_cpllpd_wait_reg[31]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllpd_wait_reg[31]_srl32_n_1 ));
  (* srl_bus_name = "inst/\core_gt_common_i/cpllpd_wait_reg " *) 
  (* srl_name = "inst/\core_gt_common_i/cpllpd_wait_reg[63]_srl32 " *) 
  SRLC32E #(
    .INIT(32'hFFFFFFFF)) 
    \cpllpd_wait_reg[63]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gtrefclk_bufg),
        .D(\cpllpd_wait_reg[31]_srl32_n_1 ),
        .Q(\NLW_cpllpd_wait_reg[63]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllpd_wait_reg[63]_srl32_n_1 ));
  (* srl_bus_name = "inst/\core_gt_common_i/cpllpd_wait_reg " *) 
  (* srl_name = "inst/\core_gt_common_i/cpllpd_wait_reg[94]_srl31 " *) 
  SRLC32E #(
    .INIT(32'h7FFFFFFF)) 
    \cpllpd_wait_reg[94]_srl31 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(gtrefclk_bufg),
        .D(\cpllpd_wait_reg[63]_srl32_n_1 ),
        .Q(\cpllpd_wait_reg[94]_srl31_n_0 ),
        .Q31(\NLW_cpllpd_wait_reg[94]_srl31_Q31_UNCONNECTED ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b1)) 
    \cpllpd_wait_reg[95] 
       (.C(gtrefclk_bufg),
        .CE(1'b1),
        .D(\cpllpd_wait_reg[94]_srl31_n_0 ),
        .Q(cpll_pd_i),
        .R(1'b0));
  (* srl_bus_name = "inst/\core_gt_common_i/cpllreset_wait_reg " *) 
  (* srl_name = "inst/\core_gt_common_i/cpllreset_wait_reg[126]_srl31 " *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    \cpllreset_wait_reg[126]_srl31 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(gtrefclk_bufg),
        .D(\cpllreset_wait_reg[95]_srl32_n_1 ),
        .Q(\cpllreset_wait_reg[126]_srl31_n_0 ),
        .Q31(\NLW_cpllreset_wait_reg[126]_srl31_Q31_UNCONNECTED ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \cpllreset_wait_reg[127] 
       (.C(gtrefclk_bufg),
        .CE(1'b1),
        .D(\cpllreset_wait_reg[126]_srl31_n_0 ),
        .Q(cpll_reset_i),
        .R(1'b0));
  (* srl_bus_name = "inst/\core_gt_common_i/cpllreset_wait_reg " *) 
  (* srl_name = "inst/\core_gt_common_i/cpllreset_wait_reg[31]_srl32 " *) 
  SRLC32E #(
    .INIT(32'h000000FF)) 
    \cpllreset_wait_reg[31]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gtrefclk_bufg),
        .D(1'b0),
        .Q(\NLW_cpllreset_wait_reg[31]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllreset_wait_reg[31]_srl32_n_1 ));
  (* srl_bus_name = "inst/\core_gt_common_i/cpllreset_wait_reg " *) 
  (* srl_name = "inst/\core_gt_common_i/cpllreset_wait_reg[63]_srl32 " *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    \cpllreset_wait_reg[63]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gtrefclk_bufg),
        .D(\cpllreset_wait_reg[31]_srl32_n_1 ),
        .Q(\NLW_cpllreset_wait_reg[63]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllreset_wait_reg[63]_srl32_n_1 ));
  (* srl_bus_name = "inst/\core_gt_common_i/cpllreset_wait_reg " *) 
  (* srl_name = "inst/\core_gt_common_i/cpllreset_wait_reg[95]_srl32 " *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    \cpllreset_wait_reg[95]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gtrefclk_bufg),
        .D(\cpllreset_wait_reg[63]_srl32_n_1 ),
        .Q(\NLW_cpllreset_wait_reg[95]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllreset_wait_reg[95]_srl32_n_1 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  GTPE2_COMMON #(
    .BIAS_CFG(64'h0000000000050001),
    .COMMON_CFG(32'h00000000),
    .IS_DRPCLK_INVERTED(1'b0),
    .IS_GTGREFCLK0_INVERTED(1'b0),
    .IS_GTGREFCLK1_INVERTED(1'b0),
    .IS_PLL0LOCKDETCLK_INVERTED(1'b0),
    .IS_PLL1LOCKDETCLK_INVERTED(1'b0),
    .PLL0_CFG(27'h01F03DC),
    .PLL0_DMON_CFG(1'b0),
    .PLL0_FBDIV(4),
    .PLL0_FBDIV_45(5),
    .PLL0_INIT_CFG(24'h00001E),
    .PLL0_LOCK_CFG(9'h1E8),
    .PLL0_REFCLK_DIV(1),
    .PLL1_CFG(27'h01F03DC),
    .PLL1_DMON_CFG(1'b0),
    .PLL1_FBDIV(1),
    .PLL1_FBDIV_45(4),
    .PLL1_INIT_CFG(24'h00001E),
    .PLL1_LOCK_CFG(9'h1E8),
    .PLL1_REFCLK_DIV(1),
    .PLL_CLKOUT_CFG(8'b00000000),
    .RSVD_ATTR0(16'h0000),
    .RSVD_ATTR1(16'h0000),
    .SIM_PLL0REFCLK_SEL(3'b001),
    .SIM_PLL1REFCLK_SEL(3'b001),
    .SIM_RESET_SPEEDUP("FALSE"),
    .SIM_VERSION("2.0")) 
    gtpe2_common_i
       (.BGBYPASSB(1'b1),
        .BGMONITORENB(1'b1),
        .BGPDB(1'b1),
        .BGRCALOVRD({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .BGRCALOVRDENB(1'b1),
        .DMONITOROUT(NLW_gtpe2_common_i_DMONITOROUT_UNCONNECTED[7:0]),
        .DRPADDR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DRPCLK(1'b0),
        .DRPDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DRPDO(NLW_gtpe2_common_i_DRPDO_UNCONNECTED[15:0]),
        .DRPEN(1'b0),
        .DRPRDY(NLW_gtpe2_common_i_DRPRDY_UNCONNECTED),
        .DRPWE(1'b0),
        .GTEASTREFCLK0(1'b0),
        .GTEASTREFCLK1(1'b0),
        .GTGREFCLK0(1'b0),
        .GTGREFCLK1(1'b0),
        .GTREFCLK0(gtrefclk_out),
        .GTREFCLK1(1'b0),
        .GTWESTREFCLK0(1'b0),
        .GTWESTREFCLK1(1'b0),
        .PLL0FBCLKLOST(NLW_gtpe2_common_i_PLL0FBCLKLOST_UNCONNECTED),
        .PLL0LOCK(gt0_pll0lock_out),
        .PLL0LOCKDETCLK(independent_clock_bufg),
        .PLL0LOCKEN(1'b1),
        .PLL0OUTCLK(gt0_pll0outclk_out),
        .PLL0OUTREFCLK(gt0_pll0outrefclk_out),
        .PLL0PD(cpll_pd_i),
        .PLL0REFCLKLOST(gt0_pll0refclklost_out),
        .PLL0REFCLKSEL({1'b0,1'b0,1'b1}),
        .PLL0RESET(PLL0RESET_I),
        .PLL1FBCLKLOST(NLW_gtpe2_common_i_PLL1FBCLKLOST_UNCONNECTED),
        .PLL1LOCK(NLW_gtpe2_common_i_PLL1LOCK_UNCONNECTED),
        .PLL1LOCKDETCLK(1'b0),
        .PLL1LOCKEN(1'b1),
        .PLL1OUTCLK(gt0_pll1outclk_out),
        .PLL1OUTREFCLK(gt0_pll1outrefclk_out),
        .PLL1PD(1'b1),
        .PLL1REFCLKLOST(NLW_gtpe2_common_i_PLL1REFCLKLOST_UNCONNECTED),
        .PLL1REFCLKSEL({1'b0,1'b0,1'b1}),
        .PLL1RESET(1'b0),
        .PLLRSVD1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PLLRSVD2({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PMARSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PMARSVDOUT(NLW_gtpe2_common_i_PMARSVDOUT_UNCONNECTED[15:0]),
        .RCALENB(1'b1),
        .REFCLKOUTMONITOR0(NLW_gtpe2_common_i_REFCLKOUTMONITOR0_UNCONNECTED),
        .REFCLKOUTMONITOR1(NLW_gtpe2_common_i_REFCLKOUTMONITOR1_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_gtwizard_gtrxreset_seq" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_gtwizard_gtrxreset_seq
   (gtrxreset_out,
    \FSM_onehot_state_reg[5]_0 ,
    DRPDI,
    \FSM_onehot_state_reg[7]_0 ,
    DRPADDR,
    data_sync_reg6,
    \original_rd_data_reg[0]_0 ,
    SR,
    data_in,
    reset_sync5,
    D);
  output gtrxreset_out;
  output \FSM_onehot_state_reg[5]_0 ;
  output [15:0]DRPDI;
  output \FSM_onehot_state_reg[7]_0 ;
  output [0:0]DRPADDR;
  input data_sync_reg6;
  input \original_rd_data_reg[0]_0 ;
  input [0:0]SR;
  input data_in;
  input reset_sync5;
  input [15:0]D;

  wire [15:0]D;
  wire [0:0]DRPADDR;
  wire [15:0]DRPDI;
  wire DRP_OP_DONE_i_1_n_0;
  wire \FSM_onehot_state[0]_i_1_n_0 ;
  wire \FSM_onehot_state[1]_i_1_n_0 ;
  wire \FSM_onehot_state[2]_i_1_n_0 ;
  wire \FSM_onehot_state[3]_i_1_n_0 ;
  wire \FSM_onehot_state[4]_i_1_n_0 ;
  wire \FSM_onehot_state[5]_i_1_n_0 ;
  wire \FSM_onehot_state[6]_i_1_n_0 ;
  wire \FSM_onehot_state[7]_i_1_n_0 ;
  wire \FSM_onehot_state_reg[5]_0 ;
  wire \FSM_onehot_state_reg[7]_0 ;
  wire \FSM_onehot_state_reg_n_0_[1] ;
  wire \FSM_onehot_state_reg_n_0_[5] ;
  wire \FSM_onehot_state_reg_n_0_[7] ;
  wire [0:0]SR;
  wire data_in;
  wire data_sync_reg6;
  wire drp_op_done;
  wire flag;
  wire flag_i_1_n_0;
  wire flag_reg_n_0;
  wire gtrxreset_i__0;
  wire gtrxreset_in_sync;
  wire gtrxreset_out;
  wire gtrxreset_s;
  wire gtrxreset_ss;
  wire [15:0]in7;
  wire next_rd_data;
  wire [15:0]original_rd_data;
  wire original_rd_data0;
  wire \original_rd_data_reg[0]_0 ;
  wire p_0_in;
  wire p_1_in;
  wire p_2_in;
  wire p_3_in;
  wire \rd_data[0]_i_1_n_0 ;
  wire \rd_data[10]_i_1_n_0 ;
  wire \rd_data[11]_i_1_n_0 ;
  wire \rd_data[12]_i_1_n_0 ;
  wire \rd_data[13]_i_1_n_0 ;
  wire \rd_data[14]_i_1_n_0 ;
  wire \rd_data[15]_i_2_n_0 ;
  wire \rd_data[1]_i_1_n_0 ;
  wire \rd_data[2]_i_1_n_0 ;
  wire \rd_data[3]_i_1_n_0 ;
  wire \rd_data[4]_i_1_n_0 ;
  wire \rd_data[5]_i_1_n_0 ;
  wire \rd_data[6]_i_1_n_0 ;
  wire \rd_data[7]_i_1_n_0 ;
  wire \rd_data[8]_i_1_n_0 ;
  wire \rd_data[9]_i_1_n_0 ;
  wire \rd_data_reg_n_0_[11] ;
  wire reset_sync5;
  wire rst_sync;
  wire rxpmaresetdone_s;
  wire rxpmaresetdone_ss;
  wire rxpmaresetdone_sss;
  wire rxpmaresetdone_sync;

  LUT3 #(
    .INIT(8'hF8)) 
    DRP_OP_DONE_i_1
       (.I0(\original_rd_data_reg[0]_0 ),
        .I1(flag),
        .I2(drp_op_done),
        .O(DRP_OP_DONE_i_1_n_0));
  FDCE #(
    .INIT(1'b0)) 
    DRP_OP_DONE_reg
       (.C(data_sync_reg6),
        .CE(1'b1),
        .CLR(gtrxreset_ss),
        .D(DRP_OP_DONE_i_1_n_0),
        .Q(drp_op_done));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \FSM_onehot_state[0]_i_1 
       (.I0(p_2_in),
        .I1(\original_rd_data_reg[0]_0 ),
        .I2(flag),
        .O(\FSM_onehot_state[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8F88)) 
    \FSM_onehot_state[1]_i_1 
       (.I0(\original_rd_data_reg[0]_0 ),
        .I1(flag),
        .I2(gtrxreset_ss),
        .I3(\FSM_onehot_state_reg_n_0_[1] ),
        .O(\FSM_onehot_state[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \FSM_onehot_state[2]_i_1 
       (.I0(p_1_in),
        .I1(rxpmaresetdone_ss),
        .I2(rxpmaresetdone_sss),
        .O(\FSM_onehot_state[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT5 #(
    .INIT(32'hFFD0D0D0)) 
    \FSM_onehot_state[3]_i_1 
       (.I0(rxpmaresetdone_sss),
        .I1(rxpmaresetdone_ss),
        .I2(p_1_in),
        .I3(\original_rd_data_reg[0]_0 ),
        .I4(p_3_in),
        .O(\FSM_onehot_state[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \FSM_onehot_state[4]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[5] ),
        .I1(\original_rd_data_reg[0]_0 ),
        .I2(p_3_in),
        .O(\FSM_onehot_state[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_state[5]_i_1 
       (.I0(p_0_in),
        .I1(\original_rd_data_reg[0]_0 ),
        .O(\FSM_onehot_state[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \FSM_onehot_state[6]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[7] ),
        .I1(\original_rd_data_reg[0]_0 ),
        .I2(p_0_in),
        .O(\FSM_onehot_state[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_state[7]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[1] ),
        .I1(gtrxreset_ss),
        .O(\FSM_onehot_state[7]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "drp_rd:10000000,wait_rd_data:01000000,wr_16:00100000,wait_wr_done1:00010000,wait_pmareset:00001000,wr_20:00000100,wait_wr_done2:00000001,idle:00000010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[0] 
       (.C(data_sync_reg6),
        .CE(1'b1),
        .CLR(rst_sync),
        .D(\FSM_onehot_state[0]_i_1_n_0 ),
        .Q(flag));
  (* FSM_ENCODED_STATES = "drp_rd:10000000,wait_rd_data:01000000,wr_16:00100000,wait_wr_done1:00010000,wait_pmareset:00001000,wr_20:00000100,wait_wr_done2:00000001,idle:00000010" *) 
  FDPE #(
    .INIT(1'b1)) 
    \FSM_onehot_state_reg[1] 
       (.C(data_sync_reg6),
        .CE(1'b1),
        .D(\FSM_onehot_state[1]_i_1_n_0 ),
        .PRE(rst_sync),
        .Q(\FSM_onehot_state_reg_n_0_[1] ));
  (* FSM_ENCODED_STATES = "drp_rd:10000000,wait_rd_data:01000000,wr_16:00100000,wait_wr_done1:00010000,wait_pmareset:00001000,wr_20:00000100,wait_wr_done2:00000001,idle:00000010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[2] 
       (.C(data_sync_reg6),
        .CE(1'b1),
        .CLR(rst_sync),
        .D(\FSM_onehot_state[2]_i_1_n_0 ),
        .Q(p_2_in));
  (* FSM_ENCODED_STATES = "drp_rd:10000000,wait_rd_data:01000000,wr_16:00100000,wait_wr_done1:00010000,wait_pmareset:00001000,wr_20:00000100,wait_wr_done2:00000001,idle:00000010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[3] 
       (.C(data_sync_reg6),
        .CE(1'b1),
        .CLR(rst_sync),
        .D(\FSM_onehot_state[3]_i_1_n_0 ),
        .Q(p_1_in));
  (* FSM_ENCODED_STATES = "drp_rd:10000000,wait_rd_data:01000000,wr_16:00100000,wait_wr_done1:00010000,wait_pmareset:00001000,wr_20:00000100,wait_wr_done2:00000001,idle:00000010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[4] 
       (.C(data_sync_reg6),
        .CE(1'b1),
        .CLR(rst_sync),
        .D(\FSM_onehot_state[4]_i_1_n_0 ),
        .Q(p_3_in));
  (* FSM_ENCODED_STATES = "drp_rd:10000000,wait_rd_data:01000000,wr_16:00100000,wait_wr_done1:00010000,wait_pmareset:00001000,wr_20:00000100,wait_wr_done2:00000001,idle:00000010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[5] 
       (.C(data_sync_reg6),
        .CE(1'b1),
        .CLR(rst_sync),
        .D(\FSM_onehot_state[5]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[5] ));
  (* FSM_ENCODED_STATES = "drp_rd:10000000,wait_rd_data:01000000,wr_16:00100000,wait_wr_done1:00010000,wait_pmareset:00001000,wr_20:00000100,wait_wr_done2:00000001,idle:00000010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[6] 
       (.C(data_sync_reg6),
        .CE(1'b1),
        .CLR(rst_sync),
        .D(\FSM_onehot_state[6]_i_1_n_0 ),
        .Q(p_0_in));
  (* FSM_ENCODED_STATES = "drp_rd:10000000,wait_rd_data:01000000,wr_16:00100000,wait_wr_done1:00010000,wait_pmareset:00001000,wr_20:00000100,wait_wr_done2:00000001,idle:00000010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[7] 
       (.C(data_sync_reg6),
        .CE(1'b1),
        .CLR(rst_sync),
        .D(\FSM_onehot_state[7]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[7] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFF4)) 
    flag_i_1
       (.I0(flag),
        .I1(flag_reg_n_0),
        .I2(p_2_in),
        .I3(p_1_in),
        .I4(\FSM_onehot_state_reg_n_0_[5] ),
        .I5(p_3_in),
        .O(flag_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    flag_reg
       (.C(data_sync_reg6),
        .CE(1'b1),
        .D(flag_i_1_n_0),
        .Q(flag_reg_n_0),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h00FE)) 
    gtpe2_i_i_1
       (.I0(\FSM_onehot_state_reg_n_0_[7] ),
        .I1(p_2_in),
        .I2(\FSM_onehot_state_reg_n_0_[5] ),
        .I3(drp_op_done),
        .O(\FSM_onehot_state_reg[7]_0 ));
  LUT4 #(
    .INIT(16'h00E0)) 
    gtpe2_i_i_10
       (.I0(p_2_in),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(in7[9]),
        .I3(drp_op_done),
        .O(DRPDI[9]));
  LUT4 #(
    .INIT(16'h00E0)) 
    gtpe2_i_i_11
       (.I0(p_2_in),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(in7[8]),
        .I3(drp_op_done),
        .O(DRPDI[8]));
  LUT4 #(
    .INIT(16'h00E0)) 
    gtpe2_i_i_12
       (.I0(p_2_in),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(in7[7]),
        .I3(drp_op_done),
        .O(DRPDI[7]));
  LUT4 #(
    .INIT(16'h00E0)) 
    gtpe2_i_i_13
       (.I0(p_2_in),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(in7[6]),
        .I3(drp_op_done),
        .O(DRPDI[6]));
  LUT4 #(
    .INIT(16'h00E0)) 
    gtpe2_i_i_14
       (.I0(p_2_in),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(in7[5]),
        .I3(drp_op_done),
        .O(DRPDI[5]));
  LUT4 #(
    .INIT(16'h00E0)) 
    gtpe2_i_i_15
       (.I0(p_2_in),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(in7[4]),
        .I3(drp_op_done),
        .O(DRPDI[4]));
  LUT4 #(
    .INIT(16'h00E0)) 
    gtpe2_i_i_16
       (.I0(p_2_in),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(in7[3]),
        .I3(drp_op_done),
        .O(DRPDI[3]));
  LUT4 #(
    .INIT(16'h00E0)) 
    gtpe2_i_i_17
       (.I0(p_2_in),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(in7[2]),
        .I3(drp_op_done),
        .O(DRPDI[2]));
  LUT4 #(
    .INIT(16'h00E0)) 
    gtpe2_i_i_18
       (.I0(p_2_in),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(in7[1]),
        .I3(drp_op_done),
        .O(DRPDI[1]));
  LUT4 #(
    .INIT(16'h00E0)) 
    gtpe2_i_i_19
       (.I0(p_2_in),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(in7[0]),
        .I3(drp_op_done),
        .O(DRPDI[0]));
  LUT3 #(
    .INIT(8'h0E)) 
    gtpe2_i_i_2
       (.I0(\FSM_onehot_state_reg_n_0_[5] ),
        .I1(p_2_in),
        .I2(drp_op_done),
        .O(\FSM_onehot_state_reg[5]_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    gtpe2_i_i_20
       (.I0(drp_op_done),
        .O(DRPADDR));
  LUT4 #(
    .INIT(16'h00E0)) 
    gtpe2_i_i_4
       (.I0(p_2_in),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(in7[15]),
        .I3(drp_op_done),
        .O(DRPDI[15]));
  LUT4 #(
    .INIT(16'h00E0)) 
    gtpe2_i_i_5
       (.I0(p_2_in),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(in7[14]),
        .I3(drp_op_done),
        .O(DRPDI[14]));
  LUT4 #(
    .INIT(16'h00E0)) 
    gtpe2_i_i_6
       (.I0(p_2_in),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(in7[13]),
        .I3(drp_op_done),
        .O(DRPDI[13]));
  LUT4 #(
    .INIT(16'h00E0)) 
    gtpe2_i_i_7
       (.I0(p_2_in),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(in7[12]),
        .I3(drp_op_done),
        .O(DRPDI[12]));
  LUT3 #(
    .INIT(8'h08)) 
    gtpe2_i_i_8
       (.I0(\rd_data_reg_n_0_[11] ),
        .I1(p_2_in),
        .I2(drp_op_done),
        .O(DRPDI[11]));
  LUT4 #(
    .INIT(16'h00E0)) 
    gtpe2_i_i_9
       (.I0(p_2_in),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(in7[10]),
        .I3(drp_op_done),
        .O(DRPDI[10]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEEE)) 
    gtrxreset_i
       (.I0(\FSM_onehot_state_reg_n_0_[7] ),
        .I1(p_3_in),
        .I2(gtrxreset_ss),
        .I3(p_1_in),
        .I4(p_0_in),
        .I5(\FSM_onehot_state_reg_n_0_[5] ),
        .O(gtrxreset_i__0));
  FDCE #(
    .INIT(1'b0)) 
    gtrxreset_o_reg
       (.C(data_sync_reg6),
        .CE(1'b1),
        .CLR(rst_sync),
        .D(gtrxreset_i__0),
        .Q(gtrxreset_out));
  FDCE #(
    .INIT(1'b0)) 
    gtrxreset_s_reg
       (.C(data_sync_reg6),
        .CE(1'b1),
        .CLR(rst_sync),
        .D(gtrxreset_in_sync),
        .Q(gtrxreset_s));
  FDCE #(
    .INIT(1'b0)) 
    gtrxreset_ss_reg
       (.C(data_sync_reg6),
        .CE(1'b1),
        .CLR(rst_sync),
        .D(gtrxreset_s),
        .Q(gtrxreset_ss));
  LUT3 #(
    .INIT(8'h20)) 
    \original_rd_data[15]_i_1 
       (.I0(p_0_in),
        .I1(flag_reg_n_0),
        .I2(\original_rd_data_reg[0]_0 ),
        .O(original_rd_data0));
  FDRE #(
    .INIT(1'b0)) 
    \original_rd_data_reg[0] 
       (.C(data_sync_reg6),
        .CE(original_rd_data0),
        .D(D[0]),
        .Q(original_rd_data[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \original_rd_data_reg[10] 
       (.C(data_sync_reg6),
        .CE(original_rd_data0),
        .D(D[10]),
        .Q(original_rd_data[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \original_rd_data_reg[11] 
       (.C(data_sync_reg6),
        .CE(original_rd_data0),
        .D(D[11]),
        .Q(original_rd_data[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \original_rd_data_reg[12] 
       (.C(data_sync_reg6),
        .CE(original_rd_data0),
        .D(D[12]),
        .Q(original_rd_data[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \original_rd_data_reg[13] 
       (.C(data_sync_reg6),
        .CE(original_rd_data0),
        .D(D[13]),
        .Q(original_rd_data[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \original_rd_data_reg[14] 
       (.C(data_sync_reg6),
        .CE(original_rd_data0),
        .D(D[14]),
        .Q(original_rd_data[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \original_rd_data_reg[15] 
       (.C(data_sync_reg6),
        .CE(original_rd_data0),
        .D(D[15]),
        .Q(original_rd_data[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \original_rd_data_reg[1] 
       (.C(data_sync_reg6),
        .CE(original_rd_data0),
        .D(D[1]),
        .Q(original_rd_data[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \original_rd_data_reg[2] 
       (.C(data_sync_reg6),
        .CE(original_rd_data0),
        .D(D[2]),
        .Q(original_rd_data[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \original_rd_data_reg[3] 
       (.C(data_sync_reg6),
        .CE(original_rd_data0),
        .D(D[3]),
        .Q(original_rd_data[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \original_rd_data_reg[4] 
       (.C(data_sync_reg6),
        .CE(original_rd_data0),
        .D(D[4]),
        .Q(original_rd_data[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \original_rd_data_reg[5] 
       (.C(data_sync_reg6),
        .CE(original_rd_data0),
        .D(D[5]),
        .Q(original_rd_data[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \original_rd_data_reg[6] 
       (.C(data_sync_reg6),
        .CE(original_rd_data0),
        .D(D[6]),
        .Q(original_rd_data[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \original_rd_data_reg[7] 
       (.C(data_sync_reg6),
        .CE(original_rd_data0),
        .D(D[7]),
        .Q(original_rd_data[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \original_rd_data_reg[8] 
       (.C(data_sync_reg6),
        .CE(original_rd_data0),
        .D(D[8]),
        .Q(original_rd_data[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \original_rd_data_reg[9] 
       (.C(data_sync_reg6),
        .CE(original_rd_data0),
        .D(D[9]),
        .Q(original_rd_data[9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[0]_i_1 
       (.I0(D[0]),
        .I1(original_rd_data[0]),
        .I2(flag_reg_n_0),
        .O(\rd_data[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[10]_i_1 
       (.I0(D[10]),
        .I1(original_rd_data[10]),
        .I2(flag_reg_n_0),
        .O(\rd_data[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[11]_i_1 
       (.I0(D[11]),
        .I1(original_rd_data[11]),
        .I2(flag_reg_n_0),
        .O(\rd_data[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[12]_i_1 
       (.I0(D[12]),
        .I1(original_rd_data[12]),
        .I2(flag_reg_n_0),
        .O(\rd_data[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[13]_i_1 
       (.I0(D[13]),
        .I1(original_rd_data[13]),
        .I2(flag_reg_n_0),
        .O(\rd_data[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[14]_i_1 
       (.I0(D[14]),
        .I1(original_rd_data[14]),
        .I2(flag_reg_n_0),
        .O(\rd_data[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \rd_data[15]_i_1 
       (.I0(p_0_in),
        .I1(\original_rd_data_reg[0]_0 ),
        .O(next_rd_data));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[15]_i_2 
       (.I0(D[15]),
        .I1(original_rd_data[15]),
        .I2(flag_reg_n_0),
        .O(\rd_data[15]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[1]_i_1 
       (.I0(D[1]),
        .I1(original_rd_data[1]),
        .I2(flag_reg_n_0),
        .O(\rd_data[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[2]_i_1 
       (.I0(D[2]),
        .I1(original_rd_data[2]),
        .I2(flag_reg_n_0),
        .O(\rd_data[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[3]_i_1 
       (.I0(D[3]),
        .I1(original_rd_data[3]),
        .I2(flag_reg_n_0),
        .O(\rd_data[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[4]_i_1 
       (.I0(D[4]),
        .I1(original_rd_data[4]),
        .I2(flag_reg_n_0),
        .O(\rd_data[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[5]_i_1 
       (.I0(D[5]),
        .I1(original_rd_data[5]),
        .I2(flag_reg_n_0),
        .O(\rd_data[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[6]_i_1 
       (.I0(D[6]),
        .I1(original_rd_data[6]),
        .I2(flag_reg_n_0),
        .O(\rd_data[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[7]_i_1 
       (.I0(D[7]),
        .I1(original_rd_data[7]),
        .I2(flag_reg_n_0),
        .O(\rd_data[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[8]_i_1 
       (.I0(D[8]),
        .I1(original_rd_data[8]),
        .I2(flag_reg_n_0),
        .O(\rd_data[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[9]_i_1 
       (.I0(D[9]),
        .I1(original_rd_data[9]),
        .I2(flag_reg_n_0),
        .O(\rd_data[9]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \rd_data_reg[0] 
       (.C(data_sync_reg6),
        .CE(next_rd_data),
        .CLR(rst_sync),
        .D(\rd_data[0]_i_1_n_0 ),
        .Q(in7[0]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_data_reg[10] 
       (.C(data_sync_reg6),
        .CE(next_rd_data),
        .CLR(rst_sync),
        .D(\rd_data[10]_i_1_n_0 ),
        .Q(in7[10]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_data_reg[11] 
       (.C(data_sync_reg6),
        .CE(next_rd_data),
        .CLR(rst_sync),
        .D(\rd_data[11]_i_1_n_0 ),
        .Q(\rd_data_reg_n_0_[11] ));
  FDCE #(
    .INIT(1'b0)) 
    \rd_data_reg[12] 
       (.C(data_sync_reg6),
        .CE(next_rd_data),
        .CLR(rst_sync),
        .D(\rd_data[12]_i_1_n_0 ),
        .Q(in7[12]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_data_reg[13] 
       (.C(data_sync_reg6),
        .CE(next_rd_data),
        .CLR(rst_sync),
        .D(\rd_data[13]_i_1_n_0 ),
        .Q(in7[13]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_data_reg[14] 
       (.C(data_sync_reg6),
        .CE(next_rd_data),
        .CLR(rst_sync),
        .D(\rd_data[14]_i_1_n_0 ),
        .Q(in7[14]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_data_reg[15] 
       (.C(data_sync_reg6),
        .CE(next_rd_data),
        .CLR(rst_sync),
        .D(\rd_data[15]_i_2_n_0 ),
        .Q(in7[15]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_data_reg[1] 
       (.C(data_sync_reg6),
        .CE(next_rd_data),
        .CLR(rst_sync),
        .D(\rd_data[1]_i_1_n_0 ),
        .Q(in7[1]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_data_reg[2] 
       (.C(data_sync_reg6),
        .CE(next_rd_data),
        .CLR(rst_sync),
        .D(\rd_data[2]_i_1_n_0 ),
        .Q(in7[2]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_data_reg[3] 
       (.C(data_sync_reg6),
        .CE(next_rd_data),
        .CLR(rst_sync),
        .D(\rd_data[3]_i_1_n_0 ),
        .Q(in7[3]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_data_reg[4] 
       (.C(data_sync_reg6),
        .CE(next_rd_data),
        .CLR(rst_sync),
        .D(\rd_data[4]_i_1_n_0 ),
        .Q(in7[4]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_data_reg[5] 
       (.C(data_sync_reg6),
        .CE(next_rd_data),
        .CLR(rst_sync),
        .D(\rd_data[5]_i_1_n_0 ),
        .Q(in7[5]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_data_reg[6] 
       (.C(data_sync_reg6),
        .CE(next_rd_data),
        .CLR(rst_sync),
        .D(\rd_data[6]_i_1_n_0 ),
        .Q(in7[6]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_data_reg[7] 
       (.C(data_sync_reg6),
        .CE(next_rd_data),
        .CLR(rst_sync),
        .D(\rd_data[7]_i_1_n_0 ),
        .Q(in7[7]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_data_reg[8] 
       (.C(data_sync_reg6),
        .CE(next_rd_data),
        .CLR(rst_sync),
        .D(\rd_data[8]_i_1_n_0 ),
        .Q(in7[8]));
  FDCE #(
    .INIT(1'b0)) 
    \rd_data_reg[9] 
       (.C(data_sync_reg6),
        .CE(next_rd_data),
        .CLR(rst_sync),
        .D(\rd_data[9]_i_1_n_0 ),
        .Q(in7[9]));
  FDCE #(
    .INIT(1'b0)) 
    rxpmaresetdone_s_reg
       (.C(data_sync_reg6),
        .CE(1'b1),
        .CLR(rst_sync),
        .D(rxpmaresetdone_sync),
        .Q(rxpmaresetdone_s));
  FDCE #(
    .INIT(1'b0)) 
    rxpmaresetdone_ss_reg
       (.C(data_sync_reg6),
        .CE(1'b1),
        .CLR(rst_sync),
        .D(rxpmaresetdone_s),
        .Q(rxpmaresetdone_ss));
  FDCE #(
    .INIT(1'b0)) 
    rxpmaresetdone_sss_reg
       (.C(data_sync_reg6),
        .CE(1'b1),
        .CLR(rst_sync),
        .D(rxpmaresetdone_ss),
        .Q(rxpmaresetdone_sss));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_reset_sync_18 sync_gtrxreset_in
       (.SR(SR),
        .reset_out(gtrxreset_in_sync),
        .reset_sync1_0(data_sync_reg6));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_reset_sync_19 sync_rst
       (.reset_out(rst_sync),
        .reset_sync1_0(data_sync_reg6),
        .reset_sync5_0(reset_sync5));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_20 sync_rxpmaresetdone
       (.data_in(data_in),
        .data_out(rxpmaresetdone_sync),
        .data_sync_reg6_0(data_sync_reg6));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_johnson_cntr" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_johnson_cntr
   (clk12_5,
    clk_en_12_5_fall0,
    clk_en_12_5_rise0,
    speed_is_10_100_fall_reg,
    CLK,
    reset_out,
    clk12_5_reg,
    speed_is_10_100_fall,
    speed_is_100_fall,
    clk1_25,
    reset_fall);
  output clk12_5;
  output clk_en_12_5_fall0;
  output clk_en_12_5_rise0;
  output speed_is_10_100_fall_reg;
  input CLK;
  input reset_out;
  input clk12_5_reg;
  input speed_is_10_100_fall;
  input speed_is_100_fall;
  input clk1_25;
  input reset_fall;

  wire CLK;
  wire clk12_5;
  wire clk12_5_reg;
  wire clk_en_12_5_fall0;
  wire clk_en_12_5_rise0;
  wire reg1;
  wire reg1_i_1_n_0;
  wire reg2;
  wire reg4;
  wire reg5;
  wire reg5_reg_n_0;
  wire reset_out;

  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT2 #(
    .INIT(4'h2)) 
    clk_en_12_5_fall_i_1
       (.I0(clk12_5_reg),
        .I1(clk12_5),
        .O(clk_en_12_5_fall0));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT2 #(
    .INIT(4'h2)) 
    clk_en_12_5_rise_i_1
       (.I0(clk12_5),
        .I1(clk12_5_reg),
        .O(clk_en_12_5_rise0));
  LUT1 #(
    .INIT(2'h1)) 
    reg1_i_1
       (.I0(reg5_reg_n_0),
        .O(reg1_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    reg1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(reg1_i_1_n_0),
        .Q(reg1),
        .R(reg5));
  FDRE #(
    .INIT(1'b0)) 
    reg2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(reg1),
        .Q(reg2),
        .R(reg5));
  FDRE #(
    .INIT(1'b0)) 
    reg3_reg
       (.C(CLK),
        .CE(1'b1),
        .D(reg2),
        .Q(clk12_5),
        .R(reg5));
  FDRE #(
    .INIT(1'b0)) 
    reg4_reg
       (.C(CLK),
        .CE(1'b1),
        .D(clk12_5),
        .Q(reg4),
        .R(reg5));
  LUT3 #(
    .INIT(8'hF4)) 
    reg5_i_1
       (.I0(reg4),
        .I1(reg5_reg_n_0),
        .I2(reset_out),
        .O(reg5));
  FDRE #(
    .INIT(1'b0)) 
    reg5_reg
       (.C(CLK),
        .CE(1'b1),
        .D(reg4),
        .Q(reg5_reg_n_0),
        .R(reg5));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_johnson_cntr" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_johnson_cntr_37
   (clk1_25,
    sgmii_clk_r0_out,
    clk_en_1_25_fall0,
    clk_en_12_5_rise,
    CLK,
    reset_out,
    sgmii_clk_r_reg,
    data_out,
    clk12_5,
    clk1_25_reg);
  output clk1_25;
  output sgmii_clk_r0_out;
  output clk_en_1_25_fall0;
  input clk_en_12_5_rise;
  input CLK;
  input reset_out;
  input sgmii_clk_r_reg;
  input data_out;
  input clk12_5;
  input clk1_25_reg;

  wire CLK;
  wire clk1_25;
  wire clk1_25_reg;
  wire clk_en_12_5_rise;
  wire clk_en_1_25_fall0;
  wire reg1_i_1__0_n_0;
  wire reg1_reg_n_0;
  wire reg2_reg_n_0;
  wire reg4;
  wire reg5;
  wire reg5_reg_n_0;
  wire reset_out;

  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT2 #(
    .INIT(4'h2)) 
    clk_en_1_25_fall_i_1
       (.I0(clk1_25_reg),
        .I1(clk1_25),
        .O(clk_en_1_25_fall0));
  LUT1 #(
    .INIT(2'h1)) 
    reg1_i_1__0
       (.I0(reg5_reg_n_0),
        .O(reg1_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    reg1_reg
       (.C(CLK),
        .CE(clk_en_12_5_rise),
        .D(reg1_i_1__0_n_0),
        .Q(reg1_reg_n_0),
        .R(reg5));
  FDRE #(
    .INIT(1'b0)) 
    reg2_reg
       (.C(CLK),
        .CE(clk_en_12_5_rise),
        .D(reg1_reg_n_0),
        .Q(reg2_reg_n_0),
        .R(reg5));
  FDRE #(
    .INIT(1'b0)) 
    reg3_reg
       (.C(CLK),
        .CE(clk_en_12_5_rise),
        .D(reg2_reg_n_0),
        .Q(clk1_25),
        .R(reg5));
  FDRE #(
    .INIT(1'b0)) 
    reg4_reg
       (.C(CLK),
        .CE(clk_en_12_5_rise),
        .D(clk1_25),
        .Q(reg4),
        .R(reg5));
  LUT4 #(
    .INIT(16'hFF40)) 
    reg5_i_1__0
       (.I0(reg4),
        .I1(clk_en_12_5_rise),
        .I2(reg5_reg_n_0),
        .I3(reset_out),
        .O(reg5));
  FDRE #(
    .INIT(1'b0)) 
    reg5_reg
       (.C(CLK),
        .CE(clk_en_12_5_rise),
        .D(reg4),
        .Q(reg5_reg_n_0),
        .R(reg5));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_reset_sync" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_reset_sync
   (reset_out,
    rxuserclk2,
    enablealign);
  output reset_out;
  input rxuserclk2;
  input enablealign;

  wire enablealign;
  wire reset_out;
  wire reset_stage1;
  wire reset_stage2;
  wire reset_stage3;
  wire reset_stage4;
  wire reset_stage5;
  wire rxuserclk2;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync1
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(1'b0),
        .PRE(enablealign),
        .Q(reset_stage1));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync2
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(reset_stage1),
        .PRE(enablealign),
        .Q(reset_stage2));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync3
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(reset_stage2),
        .PRE(enablealign),
        .Q(reset_stage3));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync4
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(reset_stage3),
        .PRE(enablealign),
        .Q(reset_stage4));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync5
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(reset_stage4),
        .PRE(enablealign),
        .Q(reset_stage5));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync6
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(reset_stage5),
        .PRE(1'b0),
        .Q(reset_out));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_reset_sync" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_reset_sync_1
   (SR,
    reset_out,
    reset_sync6_0,
    initialize_ram_complete,
    initialize_ram_complete_pulse,
    rxuserclk2,
    mgt_rx_reset);
  output [0:0]SR;
  output reset_out;
  output [0:0]reset_sync6_0;
  input initialize_ram_complete;
  input initialize_ram_complete_pulse;
  input rxuserclk2;
  input mgt_rx_reset;

  wire [0:0]SR;
  wire initialize_ram_complete;
  wire initialize_ram_complete_pulse;
  wire mgt_rx_reset;
  wire reset_out;
  wire reset_stage1;
  wire reset_stage2;
  wire reset_stage3;
  wire reset_stage4;
  wire reset_stage5;
  wire [0:0]reset_sync6_0;
  wire rxuserclk2;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync1
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(1'b0),
        .PRE(mgt_rx_reset),
        .Q(reset_stage1));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync2
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(reset_stage1),
        .PRE(mgt_rx_reset),
        .Q(reset_stage2));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync3
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(reset_stage2),
        .PRE(mgt_rx_reset),
        .Q(reset_stage3));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync4
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(reset_stage3),
        .PRE(mgt_rx_reset),
        .Q(reset_stage4));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync5
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(reset_stage4),
        .PRE(mgt_rx_reset),
        .Q(reset_stage5));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync6
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(reset_stage5),
        .PRE(1'b0),
        .Q(reset_out));
  LUT2 #(
    .INIT(4'hE)) 
    \wr_addr[4]_i_1 
       (.I0(reset_out),
        .I1(initialize_ram_complete_pulse),
        .O(reset_sync6_0));
  LUT2 #(
    .INIT(4'hB)) 
    \wr_data_reg[28]_i_1 
       (.I0(reset_out),
        .I1(initialize_ram_complete),
        .O(SR));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_reset_sync" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_reset_sync_18
   (reset_out,
    reset_sync1_0,
    SR);
  output reset_out;
  input reset_sync1_0;
  input [0:0]SR;

  wire [0:0]SR;
  wire reset_out;
  wire reset_stage1;
  wire reset_stage2;
  wire reset_stage3;
  wire reset_stage4;
  wire reset_stage5;
  wire reset_sync1_0;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync1
       (.C(reset_sync1_0),
        .CE(1'b1),
        .D(1'b0),
        .PRE(SR),
        .Q(reset_stage1));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync2
       (.C(reset_sync1_0),
        .CE(1'b1),
        .D(reset_stage1),
        .PRE(SR),
        .Q(reset_stage2));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync3
       (.C(reset_sync1_0),
        .CE(1'b1),
        .D(reset_stage2),
        .PRE(SR),
        .Q(reset_stage3));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync4
       (.C(reset_sync1_0),
        .CE(1'b1),
        .D(reset_stage3),
        .PRE(SR),
        .Q(reset_stage4));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync5
       (.C(reset_sync1_0),
        .CE(1'b1),
        .D(reset_stage4),
        .PRE(SR),
        .Q(reset_stage5));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync6
       (.C(reset_sync1_0),
        .CE(1'b1),
        .D(reset_stage5),
        .PRE(1'b0),
        .Q(reset_out));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_reset_sync" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_reset_sync_19
   (reset_out,
    reset_sync1_0,
    reset_sync5_0);
  output reset_out;
  input reset_sync1_0;
  input reset_sync5_0;

  wire reset_out;
  wire reset_stage1;
  wire reset_stage2;
  wire reset_stage3;
  wire reset_stage4;
  wire reset_stage5;
  wire reset_sync1_0;
  wire reset_sync5_0;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync1
       (.C(reset_sync1_0),
        .CE(1'b1),
        .D(1'b0),
        .PRE(reset_sync5_0),
        .Q(reset_stage1));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync2
       (.C(reset_sync1_0),
        .CE(1'b1),
        .D(reset_stage1),
        .PRE(reset_sync5_0),
        .Q(reset_stage2));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync3
       (.C(reset_sync1_0),
        .CE(1'b1),
        .D(reset_stage2),
        .PRE(reset_sync5_0),
        .Q(reset_stage3));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync4
       (.C(reset_sync1_0),
        .CE(1'b1),
        .D(reset_stage3),
        .PRE(reset_sync5_0),
        .Q(reset_stage4));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync5
       (.C(reset_sync1_0),
        .CE(1'b1),
        .D(reset_stage4),
        .PRE(reset_sync5_0),
        .Q(reset_stage5));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync6
       (.C(reset_sync1_0),
        .CE(1'b1),
        .D(reset_stage5),
        .PRE(1'b0),
        .Q(reset_out));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_reset_sync" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_reset_sync_2
   (reset_out,
    independent_clock_bufg,
    mgt_rx_reset);
  output reset_out;
  input independent_clock_bufg;
  input mgt_rx_reset;

  wire independent_clock_bufg;
  wire mgt_rx_reset;
  wire reset_out;
  wire reset_stage1;
  wire reset_stage2;
  wire reset_stage3;
  wire reset_stage4;
  wire reset_stage5;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync1
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(1'b0),
        .PRE(mgt_rx_reset),
        .Q(reset_stage1));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync2
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(reset_stage1),
        .PRE(mgt_rx_reset),
        .Q(reset_stage2));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync3
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(reset_stage2),
        .PRE(mgt_rx_reset),
        .Q(reset_stage3));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync4
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(reset_stage3),
        .PRE(mgt_rx_reset),
        .Q(reset_stage4));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync5
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(reset_stage4),
        .PRE(mgt_rx_reset),
        .Q(reset_stage5));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync6
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(reset_stage5),
        .PRE(1'b0),
        .Q(reset_out));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_reset_sync" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_reset_sync_3
   (reset_out,
    reset_sync6_0,
    SR);
  output reset_out;
  input reset_sync6_0;
  input [0:0]SR;

  wire [0:0]SR;
  wire reset_out;
  wire reset_stage1;
  wire reset_stage2;
  wire reset_stage3;
  wire reset_stage4;
  wire reset_stage5;
  wire reset_sync6_0;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync1
       (.C(reset_sync6_0),
        .CE(1'b1),
        .D(1'b0),
        .PRE(SR),
        .Q(reset_stage1));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync2
       (.C(reset_sync6_0),
        .CE(1'b1),
        .D(reset_stage1),
        .PRE(SR),
        .Q(reset_stage2));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync3
       (.C(reset_sync6_0),
        .CE(1'b1),
        .D(reset_stage2),
        .PRE(SR),
        .Q(reset_stage3));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync4
       (.C(reset_sync6_0),
        .CE(1'b1),
        .D(reset_stage3),
        .PRE(SR),
        .Q(reset_stage4));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync5
       (.C(reset_sync6_0),
        .CE(1'b1),
        .D(reset_stage4),
        .PRE(SR),
        .Q(reset_stage5));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync6
       (.C(reset_sync6_0),
        .CE(1'b1),
        .D(reset_stage5),
        .PRE(1'b0),
        .Q(reset_out));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_reset_sync" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_reset_sync_34
   (reset_out,
    CLK,
    SR);
  output reset_out;
  input CLK;
  input [0:0]SR;

  wire CLK;
  wire [0:0]SR;
  wire reset_out;
  wire reset_stage1;
  wire reset_stage2;
  wire reset_stage3;
  wire reset_stage4;
  wire reset_stage5;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync1
       (.C(CLK),
        .CE(1'b1),
        .D(1'b0),
        .PRE(SR),
        .Q(reset_stage1));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync2
       (.C(CLK),
        .CE(1'b1),
        .D(reset_stage1),
        .PRE(SR),
        .Q(reset_stage2));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync3
       (.C(CLK),
        .CE(1'b1),
        .D(reset_stage2),
        .PRE(SR),
        .Q(reset_stage3));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync4
       (.C(CLK),
        .CE(1'b1),
        .D(reset_stage3),
        .PRE(SR),
        .Q(reset_stage4));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync5
       (.C(CLK),
        .CE(1'b1),
        .D(reset_stage4),
        .PRE(SR),
        .Q(reset_stage5));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync6
       (.C(CLK),
        .CE(1'b1),
        .D(reset_stage5),
        .PRE(1'b0),
        .Q(reset_out));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_reset_wtd_timer" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_reset_wtd_timer
   (wtd_rxpcsreset_in,
    independent_clock_bufg,
    data_out);
  output wtd_rxpcsreset_in;
  input independent_clock_bufg;
  input data_out;

  wire \counter_stg1[5]_i_1_n_0 ;
  wire [5:5]counter_stg1_reg;
  wire [4:0]counter_stg1_reg__0;
  wire counter_stg1_roll;
  wire \counter_stg2[0]_i_3_n_0 ;
  wire [11:0]counter_stg2_reg;
  wire \counter_stg2_reg[0]_i_2_n_0 ;
  wire \counter_stg2_reg[0]_i_2_n_4 ;
  wire \counter_stg2_reg[0]_i_2_n_5 ;
  wire \counter_stg2_reg[0]_i_2_n_6 ;
  wire \counter_stg2_reg[0]_i_2_n_7 ;
  wire \counter_stg2_reg[4]_i_1_n_0 ;
  wire \counter_stg2_reg[4]_i_1_n_4 ;
  wire \counter_stg2_reg[4]_i_1_n_5 ;
  wire \counter_stg2_reg[4]_i_1_n_6 ;
  wire \counter_stg2_reg[4]_i_1_n_7 ;
  wire \counter_stg2_reg[8]_i_1_n_4 ;
  wire \counter_stg2_reg[8]_i_1_n_5 ;
  wire \counter_stg2_reg[8]_i_1_n_6 ;
  wire \counter_stg2_reg[8]_i_1_n_7 ;
  wire counter_stg30;
  wire \counter_stg3[0]_i_3_n_0 ;
  wire \counter_stg3[0]_i_4_n_0 ;
  wire \counter_stg3[0]_i_5_n_0 ;
  wire [11:0]counter_stg3_reg;
  wire \counter_stg3_reg[0]_i_2_n_0 ;
  wire \counter_stg3_reg[0]_i_2_n_4 ;
  wire \counter_stg3_reg[0]_i_2_n_5 ;
  wire \counter_stg3_reg[0]_i_2_n_6 ;
  wire \counter_stg3_reg[0]_i_2_n_7 ;
  wire \counter_stg3_reg[4]_i_1_n_0 ;
  wire \counter_stg3_reg[4]_i_1_n_4 ;
  wire \counter_stg3_reg[4]_i_1_n_5 ;
  wire \counter_stg3_reg[4]_i_1_n_6 ;
  wire \counter_stg3_reg[4]_i_1_n_7 ;
  wire \counter_stg3_reg[8]_i_1_n_4 ;
  wire \counter_stg3_reg[8]_i_1_n_5 ;
  wire \counter_stg3_reg[8]_i_1_n_6 ;
  wire \counter_stg3_reg[8]_i_1_n_7 ;
  wire data_out;
  wire independent_clock_bufg;
  wire [5:0]p_0_in;
  wire reset0;
  wire reset_i_2_n_0;
  wire reset_i_3_n_0;
  wire reset_i_4_n_0;
  wire reset_i_5_n_0;
  wire reset_i_6_n_0;
  wire reset_i_7_n_0;
  wire reset_i_8_n_0;
  wire wtd_rxpcsreset_in;
  wire [2:0]\NLW_counter_stg2_reg[0]_i_2_CO_UNCONNECTED ;
  wire [2:0]\NLW_counter_stg2_reg[4]_i_1_CO_UNCONNECTED ;
  wire [3:0]\NLW_counter_stg2_reg[8]_i_1_CO_UNCONNECTED ;
  wire [2:0]\NLW_counter_stg3_reg[0]_i_2_CO_UNCONNECTED ;
  wire [2:0]\NLW_counter_stg3_reg[4]_i_1_CO_UNCONNECTED ;
  wire [3:0]\NLW_counter_stg3_reg[8]_i_1_CO_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \counter_stg1[0]_i_1 
       (.I0(counter_stg1_reg__0[0]),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \counter_stg1[1]_i_1 
       (.I0(counter_stg1_reg__0[1]),
        .I1(counter_stg1_reg__0[0]),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \counter_stg1[2]_i_1 
       (.I0(counter_stg1_reg__0[2]),
        .I1(counter_stg1_reg__0[1]),
        .I2(counter_stg1_reg__0[0]),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \counter_stg1[3]_i_1 
       (.I0(counter_stg1_reg__0[3]),
        .I1(counter_stg1_reg__0[0]),
        .I2(counter_stg1_reg__0[1]),
        .I3(counter_stg1_reg__0[2]),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \counter_stg1[4]_i_1 
       (.I0(counter_stg1_reg__0[4]),
        .I1(counter_stg1_reg__0[2]),
        .I2(counter_stg1_reg__0[1]),
        .I3(counter_stg1_reg__0[0]),
        .I4(counter_stg1_reg__0[3]),
        .O(p_0_in[4]));
  LUT3 #(
    .INIT(8'hBA)) 
    \counter_stg1[5]_i_1 
       (.I0(data_out),
        .I1(reset_i_2_n_0),
        .I2(counter_stg1_roll),
        .O(\counter_stg1[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \counter_stg1[5]_i_2 
       (.I0(counter_stg1_reg__0[3]),
        .I1(counter_stg1_reg__0[0]),
        .I2(counter_stg1_reg__0[1]),
        .I3(counter_stg1_reg__0[2]),
        .I4(counter_stg1_reg__0[4]),
        .I5(counter_stg1_reg),
        .O(p_0_in[5]));
  FDRE #(
    .INIT(1'b0)) 
    \counter_stg1_reg[0] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(p_0_in[0]),
        .Q(counter_stg1_reg__0[0]),
        .R(\counter_stg1[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \counter_stg1_reg[1] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(p_0_in[1]),
        .Q(counter_stg1_reg__0[1]),
        .R(\counter_stg1[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \counter_stg1_reg[2] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(p_0_in[2]),
        .Q(counter_stg1_reg__0[2]),
        .R(\counter_stg1[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \counter_stg1_reg[3] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(p_0_in[3]),
        .Q(counter_stg1_reg__0[3]),
        .R(\counter_stg1[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \counter_stg1_reg[4] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(p_0_in[4]),
        .Q(counter_stg1_reg__0[4]),
        .R(\counter_stg1[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \counter_stg1_reg[5] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(p_0_in[5]),
        .Q(counter_stg1_reg),
        .R(\counter_stg1[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \counter_stg2[0]_i_1 
       (.I0(counter_stg1_reg),
        .I1(counter_stg1_reg__0[4]),
        .I2(counter_stg1_reg__0[2]),
        .I3(counter_stg1_reg__0[1]),
        .I4(counter_stg1_reg__0[0]),
        .I5(counter_stg1_reg__0[3]),
        .O(counter_stg1_roll));
  LUT1 #(
    .INIT(2'h1)) 
    \counter_stg2[0]_i_3 
       (.I0(counter_stg2_reg[0]),
        .O(\counter_stg2[0]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \counter_stg2_reg[0] 
       (.C(independent_clock_bufg),
        .CE(counter_stg1_roll),
        .D(\counter_stg2_reg[0]_i_2_n_7 ),
        .Q(counter_stg2_reg[0]),
        .R(\counter_stg1[5]_i_1_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \counter_stg2_reg[0]_i_2 
       (.CI(1'b0),
        .CO({\counter_stg2_reg[0]_i_2_n_0 ,\NLW_counter_stg2_reg[0]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\counter_stg2_reg[0]_i_2_n_4 ,\counter_stg2_reg[0]_i_2_n_5 ,\counter_stg2_reg[0]_i_2_n_6 ,\counter_stg2_reg[0]_i_2_n_7 }),
        .S({counter_stg2_reg[3:1],\counter_stg2[0]_i_3_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \counter_stg2_reg[10] 
       (.C(independent_clock_bufg),
        .CE(counter_stg1_roll),
        .D(\counter_stg2_reg[8]_i_1_n_5 ),
        .Q(counter_stg2_reg[10]),
        .R(\counter_stg1[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \counter_stg2_reg[11] 
       (.C(independent_clock_bufg),
        .CE(counter_stg1_roll),
        .D(\counter_stg2_reg[8]_i_1_n_4 ),
        .Q(counter_stg2_reg[11]),
        .R(\counter_stg1[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \counter_stg2_reg[1] 
       (.C(independent_clock_bufg),
        .CE(counter_stg1_roll),
        .D(\counter_stg2_reg[0]_i_2_n_6 ),
        .Q(counter_stg2_reg[1]),
        .R(\counter_stg1[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \counter_stg2_reg[2] 
       (.C(independent_clock_bufg),
        .CE(counter_stg1_roll),
        .D(\counter_stg2_reg[0]_i_2_n_5 ),
        .Q(counter_stg2_reg[2]),
        .R(\counter_stg1[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \counter_stg2_reg[3] 
       (.C(independent_clock_bufg),
        .CE(counter_stg1_roll),
        .D(\counter_stg2_reg[0]_i_2_n_4 ),
        .Q(counter_stg2_reg[3]),
        .R(\counter_stg1[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \counter_stg2_reg[4] 
       (.C(independent_clock_bufg),
        .CE(counter_stg1_roll),
        .D(\counter_stg2_reg[4]_i_1_n_7 ),
        .Q(counter_stg2_reg[4]),
        .R(\counter_stg1[5]_i_1_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \counter_stg2_reg[4]_i_1 
       (.CI(\counter_stg2_reg[0]_i_2_n_0 ),
        .CO({\counter_stg2_reg[4]_i_1_n_0 ,\NLW_counter_stg2_reg[4]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\counter_stg2_reg[4]_i_1_n_4 ,\counter_stg2_reg[4]_i_1_n_5 ,\counter_stg2_reg[4]_i_1_n_6 ,\counter_stg2_reg[4]_i_1_n_7 }),
        .S(counter_stg2_reg[7:4]));
  FDRE #(
    .INIT(1'b0)) 
    \counter_stg2_reg[5] 
       (.C(independent_clock_bufg),
        .CE(counter_stg1_roll),
        .D(\counter_stg2_reg[4]_i_1_n_6 ),
        .Q(counter_stg2_reg[5]),
        .R(\counter_stg1[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \counter_stg2_reg[6] 
       (.C(independent_clock_bufg),
        .CE(counter_stg1_roll),
        .D(\counter_stg2_reg[4]_i_1_n_5 ),
        .Q(counter_stg2_reg[6]),
        .R(\counter_stg1[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \counter_stg2_reg[7] 
       (.C(independent_clock_bufg),
        .CE(counter_stg1_roll),
        .D(\counter_stg2_reg[4]_i_1_n_4 ),
        .Q(counter_stg2_reg[7]),
        .R(\counter_stg1[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \counter_stg2_reg[8] 
       (.C(independent_clock_bufg),
        .CE(counter_stg1_roll),
        .D(\counter_stg2_reg[8]_i_1_n_7 ),
        .Q(counter_stg2_reg[8]),
        .R(\counter_stg1[5]_i_1_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \counter_stg2_reg[8]_i_1 
       (.CI(\counter_stg2_reg[4]_i_1_n_0 ),
        .CO(\NLW_counter_stg2_reg[8]_i_1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\counter_stg2_reg[8]_i_1_n_4 ,\counter_stg2_reg[8]_i_1_n_5 ,\counter_stg2_reg[8]_i_1_n_6 ,\counter_stg2_reg[8]_i_1_n_7 }),
        .S(counter_stg2_reg[11:8]));
  FDRE #(
    .INIT(1'b0)) 
    \counter_stg2_reg[9] 
       (.C(independent_clock_bufg),
        .CE(counter_stg1_roll),
        .D(\counter_stg2_reg[8]_i_1_n_6 ),
        .Q(counter_stg2_reg[9]),
        .R(\counter_stg1[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2000000000000000)) 
    \counter_stg3[0]_i_1 
       (.I0(counter_stg1_roll),
        .I1(\counter_stg3[0]_i_3_n_0 ),
        .I2(counter_stg2_reg[3]),
        .I3(counter_stg2_reg[8]),
        .I4(counter_stg2_reg[11]),
        .I5(counter_stg2_reg[4]),
        .O(counter_stg30));
  LUT5 #(
    .INIT(32'hFFFF7FFF)) 
    \counter_stg3[0]_i_3 
       (.I0(counter_stg2_reg[9]),
        .I1(counter_stg2_reg[0]),
        .I2(counter_stg2_reg[7]),
        .I3(counter_stg2_reg[10]),
        .I4(\counter_stg3[0]_i_5_n_0 ),
        .O(\counter_stg3[0]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \counter_stg3[0]_i_4 
       (.I0(counter_stg3_reg[0]),
        .O(\counter_stg3[0]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \counter_stg3[0]_i_5 
       (.I0(counter_stg2_reg[1]),
        .I1(counter_stg2_reg[6]),
        .I2(counter_stg2_reg[5]),
        .I3(counter_stg2_reg[2]),
        .O(\counter_stg3[0]_i_5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \counter_stg3_reg[0] 
       (.C(independent_clock_bufg),
        .CE(counter_stg30),
        .D(\counter_stg3_reg[0]_i_2_n_7 ),
        .Q(counter_stg3_reg[0]),
        .R(\counter_stg1[5]_i_1_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \counter_stg3_reg[0]_i_2 
       (.CI(1'b0),
        .CO({\counter_stg3_reg[0]_i_2_n_0 ,\NLW_counter_stg3_reg[0]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\counter_stg3_reg[0]_i_2_n_4 ,\counter_stg3_reg[0]_i_2_n_5 ,\counter_stg3_reg[0]_i_2_n_6 ,\counter_stg3_reg[0]_i_2_n_7 }),
        .S({counter_stg3_reg[3:1],\counter_stg3[0]_i_4_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \counter_stg3_reg[10] 
       (.C(independent_clock_bufg),
        .CE(counter_stg30),
        .D(\counter_stg3_reg[8]_i_1_n_5 ),
        .Q(counter_stg3_reg[10]),
        .R(\counter_stg1[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \counter_stg3_reg[11] 
       (.C(independent_clock_bufg),
        .CE(counter_stg30),
        .D(\counter_stg3_reg[8]_i_1_n_4 ),
        .Q(counter_stg3_reg[11]),
        .R(\counter_stg1[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \counter_stg3_reg[1] 
       (.C(independent_clock_bufg),
        .CE(counter_stg30),
        .D(\counter_stg3_reg[0]_i_2_n_6 ),
        .Q(counter_stg3_reg[1]),
        .R(\counter_stg1[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \counter_stg3_reg[2] 
       (.C(independent_clock_bufg),
        .CE(counter_stg30),
        .D(\counter_stg3_reg[0]_i_2_n_5 ),
        .Q(counter_stg3_reg[2]),
        .R(\counter_stg1[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \counter_stg3_reg[3] 
       (.C(independent_clock_bufg),
        .CE(counter_stg30),
        .D(\counter_stg3_reg[0]_i_2_n_4 ),
        .Q(counter_stg3_reg[3]),
        .R(\counter_stg1[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \counter_stg3_reg[4] 
       (.C(independent_clock_bufg),
        .CE(counter_stg30),
        .D(\counter_stg3_reg[4]_i_1_n_7 ),
        .Q(counter_stg3_reg[4]),
        .R(\counter_stg1[5]_i_1_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \counter_stg3_reg[4]_i_1 
       (.CI(\counter_stg3_reg[0]_i_2_n_0 ),
        .CO({\counter_stg3_reg[4]_i_1_n_0 ,\NLW_counter_stg3_reg[4]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\counter_stg3_reg[4]_i_1_n_4 ,\counter_stg3_reg[4]_i_1_n_5 ,\counter_stg3_reg[4]_i_1_n_6 ,\counter_stg3_reg[4]_i_1_n_7 }),
        .S(counter_stg3_reg[7:4]));
  FDRE #(
    .INIT(1'b0)) 
    \counter_stg3_reg[5] 
       (.C(independent_clock_bufg),
        .CE(counter_stg30),
        .D(\counter_stg3_reg[4]_i_1_n_6 ),
        .Q(counter_stg3_reg[5]),
        .R(\counter_stg1[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \counter_stg3_reg[6] 
       (.C(independent_clock_bufg),
        .CE(counter_stg30),
        .D(\counter_stg3_reg[4]_i_1_n_5 ),
        .Q(counter_stg3_reg[6]),
        .R(\counter_stg1[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \counter_stg3_reg[7] 
       (.C(independent_clock_bufg),
        .CE(counter_stg30),
        .D(\counter_stg3_reg[4]_i_1_n_4 ),
        .Q(counter_stg3_reg[7]),
        .R(\counter_stg1[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \counter_stg3_reg[8] 
       (.C(independent_clock_bufg),
        .CE(counter_stg30),
        .D(\counter_stg3_reg[8]_i_1_n_7 ),
        .Q(counter_stg3_reg[8]),
        .R(\counter_stg1[5]_i_1_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \counter_stg3_reg[8]_i_1 
       (.CI(\counter_stg3_reg[4]_i_1_n_0 ),
        .CO(\NLW_counter_stg3_reg[8]_i_1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\counter_stg3_reg[8]_i_1_n_4 ,\counter_stg3_reg[8]_i_1_n_5 ,\counter_stg3_reg[8]_i_1_n_6 ,\counter_stg3_reg[8]_i_1_n_7 }),
        .S(counter_stg3_reg[11:8]));
  FDRE #(
    .INIT(1'b0)) 
    \counter_stg3_reg[9] 
       (.C(independent_clock_bufg),
        .CE(counter_stg30),
        .D(\counter_stg3_reg[8]_i_1_n_6 ),
        .Q(counter_stg3_reg[9]),
        .R(\counter_stg1[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    reset_i_1
       (.I0(counter_stg1_reg),
        .I1(reset_i_2_n_0),
        .O(reset0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    reset_i_2
       (.I0(reset_i_3_n_0),
        .I1(reset_i_4_n_0),
        .I2(reset_i_5_n_0),
        .I3(reset_i_6_n_0),
        .I4(reset_i_7_n_0),
        .I5(reset_i_8_n_0),
        .O(reset_i_2_n_0));
  LUT4 #(
    .INIT(16'hFFFD)) 
    reset_i_3
       (.I0(counter_stg3_reg[4]),
        .I1(counter_stg3_reg[8]),
        .I2(counter_stg3_reg[1]),
        .I3(counter_stg3_reg[10]),
        .O(reset_i_3_n_0));
  LUT4 #(
    .INIT(16'hFFEF)) 
    reset_i_4
       (.I0(counter_stg3_reg[9]),
        .I1(counter_stg2_reg[5]),
        .I2(counter_stg3_reg[7]),
        .I3(counter_stg2_reg[0]),
        .O(reset_i_4_n_0));
  LUT4 #(
    .INIT(16'h7FFF)) 
    reset_i_5
       (.I0(counter_stg2_reg[3]),
        .I1(counter_stg2_reg[8]),
        .I2(counter_stg2_reg[11]),
        .I3(counter_stg2_reg[4]),
        .O(reset_i_5_n_0));
  LUT4 #(
    .INIT(16'hFFDF)) 
    reset_i_6
       (.I0(counter_stg3_reg[11]),
        .I1(counter_stg3_reg[2]),
        .I2(counter_stg2_reg[10]),
        .I3(counter_stg3_reg[0]),
        .O(reset_i_6_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    reset_i_7
       (.I0(counter_stg2_reg[2]),
        .I1(counter_stg2_reg[9]),
        .I2(counter_stg2_reg[1]),
        .I3(counter_stg2_reg[7]),
        .O(reset_i_7_n_0));
  LUT4 #(
    .INIT(16'hFFDF)) 
    reset_i_8
       (.I0(counter_stg3_reg[6]),
        .I1(counter_stg3_reg[3]),
        .I2(counter_stg3_reg[5]),
        .I3(counter_stg2_reg[6]),
        .O(reset_i_8_n_0));
  FDRE #(
    .INIT(1'b0)) 
    reset_reg
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(reset0),
        .Q(wtd_rxpcsreset_in),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_resets" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_resets
   (out,
    independent_clock_bufg,
    reset);
  output [0:0]out;
  input independent_clock_bufg;
  input reset;

  wire independent_clock_bufg;
  (* async_reg = "true" *) wire [3:0]pma_reset_pipe;
  wire reset;

  assign out[0] = pma_reset_pipe[3];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \pma_reset_pipe_reg[0] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(1'b0),
        .PRE(reset),
        .Q(pma_reset_pipe[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \pma_reset_pipe_reg[1] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(pma_reset_pipe[0]),
        .PRE(reset),
        .Q(pma_reset_pipe[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \pma_reset_pipe_reg[2] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(pma_reset_pipe[1]),
        .PRE(reset),
        .Q(pma_reset_pipe[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \pma_reset_pipe_reg[3] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(pma_reset_pipe[2]),
        .PRE(reset),
        .Q(pma_reset_pipe[3]));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_rx_elastic_buffer" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_rx_elastic_buffer
   (rxchariscomma,
    rxcharisk,
    rxdisperr,
    rxnotintable,
    rxclkcorcnt,
    initialize_ram_complete,
    initialize_ram_complete_pulse,
    rxbufstatus,
    Q,
    CLK,
    rxuserclk2,
    reset_out,
    SR,
    \wr_data_reg_reg[0]_0 ,
    D,
    mgt_rx_reset);
  output [0:0]rxchariscomma;
  output [0:0]rxcharisk;
  output [0:0]rxdisperr;
  output [0:0]rxnotintable;
  output [1:0]rxclkcorcnt;
  output initialize_ram_complete;
  output initialize_ram_complete_pulse;
  output [0:0]rxbufstatus;
  output [7:0]Q;
  input CLK;
  input rxuserclk2;
  input reset_out;
  input [0:0]SR;
  input [0:0]\wr_data_reg_reg[0]_0 ;
  input [23:0]D;
  input mgt_rx_reset;

  wire CLK;
  wire [23:0]D;
  wire [7:0]Q;
  wire [0:0]SR;
  wire d16p2_wr_reg;
  wire d21p5_wr_reg;
  wire d21p5_wr_reg2;
  wire d21p5_wr_reg_i_2_n_0;
  wire d2p2_wr_reg;
  wire d2p2_wr_reg2;
  wire d2p2_wr_reg_i_2_n_0;
  wire [28:0]dpo;
  wire even;
  wire even_i_1_n_0;
  wire initialize_counter0;
  wire [4:0]initialize_counter_reg;
  wire initialize_ram;
  wire initialize_ram0;
  wire initialize_ram_complete;
  wire initialize_ram_complete_i_1_n_0;
  wire initialize_ram_complete_pulse;
  wire initialize_ram_complete_pulse0;
  wire initialize_ram_complete_reg__0;
  wire initialize_ram_complete_sync;
  wire initialize_ram_complete_sync_reg1;
  wire initialize_ram_complete_sync_ris_edg;
  wire initialize_ram_complete_sync_ris_edg0;
  wire initialize_ram_i_1_n_0;
  wire k28p5_wr_reg;
  wire k28p5_wr_reg2;
  wire k28p5_wr_reg_i_2_n_0;
  wire mgt_rx_reset;
  wire p_0_in;
  wire [4:0]p_0_in__4;
  wire [5:0]p_0_in__5;
  wire p_13_in;
  wire p_14_in;
  wire p_1_in;
  wire p_1_in23_in;
  wire p_1_out;
  wire p_2_in16_in;
  wire p_2_in24_in;
  wire p_2_out;
  wire p_3_in;
  wire p_3_in26_in;
  wire p_3_out;
  wire p_4_in;
  wire p_4_in19_in;
  wire p_4_in28_in;
  wire p_4_out;
  wire [4:1]p_5_out;
  wire p_6_in;
  wire p_7_in;
  wire p_9_in;
  wire [5:0]rd_addr;
  wire [4:0]rd_addr_gray;
  wire \rd_addr_gray[0]_i_1_n_0 ;
  wire \rd_addr_gray[1]_i_1_n_0 ;
  wire \rd_addr_gray[2]_i_1_n_0 ;
  wire \rd_addr_gray[3]_i_1_n_0 ;
  wire \rd_addr_gray[4]_i_1_n_0 ;
  wire [5:0]rd_addr_plus1;
  wire \rd_addr_plus2_reg_n_0_[0] ;
  wire \rd_addr_plus2_reg_n_0_[5] ;
  wire [27:0]rd_data;
  wire [28:0]rd_data_reg;
  wire \rd_data_reg_n_0_[28] ;
  wire rd_enable;
  wire rd_enable_i_10_n_0;
  wire rd_enable_i_11_n_0;
  wire rd_enable_i_12_n_0;
  wire rd_enable_i_1_n_0;
  wire rd_enable_i_2_n_0;
  wire rd_enable_i_4_n_0;
  wire rd_enable_i_5_n_0;
  wire rd_enable_i_6_n_0;
  wire rd_enable_i_7_n_0;
  wire rd_enable_i_8_n_0;
  wire rd_enable_i_9_n_0;
  wire [5:0]rd_occupancy;
  wire [5:0]rd_occupancy01_out;
  wire rd_occupancy0_carry_n_0;
  wire [4:0]rd_wr_addr;
  wire rd_wr_addr_gray_0;
  wire rd_wr_addr_gray_5;
  wire \reclock_rd_addrgray[1].sync_rd_addrgray_n_0 ;
  wire \reclock_rd_addrgray[2].sync_rd_addrgray_n_0 ;
  wire \reclock_rd_addrgray[3].sync_rd_addrgray_n_0 ;
  wire \reclock_rd_addrgray[4].sync_rd_addrgray_n_0 ;
  wire \reclock_rd_addrgray[5].sync_rd_addrgray_n_0 ;
  wire \reclock_rd_addrgray[5].sync_rd_addrgray_n_1 ;
  wire \reclock_wr_addrgray[1].sync_wr_addrgray_n_0 ;
  wire \reclock_wr_addrgray[2].sync_wr_addrgray_n_0 ;
  wire \reclock_wr_addrgray[3].sync_wr_addrgray_n_0 ;
  wire \reclock_wr_addrgray[4].sync_wr_addrgray_n_0 ;
  wire \reclock_wr_addrgray[5].sync_wr_addrgray_n_0 ;
  wire \reclock_wr_addrgray[5].sync_wr_addrgray_n_1 ;
  wire remove_idle;
  wire remove_idle_i_1_n_0;
  wire remove_idle_i_2_n_0;
  wire remove_idle_i_3_n_0;
  wire remove_idle_i_4_n_0;
  wire remove_idle_i_5_n_0;
  wire remove_idle_i_6_n_0;
  wire remove_idle_reg1;
  wire remove_idle_reg2;
  wire reset_modified;
  wire reset_modified_i_1_n_0;
  wire reset_out;
  wire rxbuferr0;
  wire rxbuferr_i_1_n_0;
  wire [0:0]rxbufstatus;
  wire [0:0]rxchariscomma;
  wire rxchariscomma_usr_i_1_n_0;
  wire [0:0]rxcharisk;
  wire rxcharisk_usr_i_1_n_0;
  wire \rxdata_usr[0]_i_1_n_0 ;
  wire \rxdata_usr[1]_i_1_n_0 ;
  wire \rxdata_usr[2]_i_1_n_0 ;
  wire \rxdata_usr[3]_i_1_n_0 ;
  wire \rxdata_usr[4]_i_1_n_0 ;
  wire \rxdata_usr[5]_i_1_n_0 ;
  wire \rxdata_usr[6]_i_1_n_0 ;
  wire \rxdata_usr[7]_i_1_n_0 ;
  wire [0:0]rxdisperr;
  wire rxdisperr_usr_i_1_n_0;
  wire [0:0]rxnotintable;
  wire rxnotintable_usr_i_1_n_0;
  wire rxuserclk2;
  wire start;
  wire [5:0]wr_addr;
  wire \wr_addr[5]_i_1_n_0 ;
  wire [5:0]wr_addr_gray;
  wire [5:0]wr_addr_plus1;
  wire \wr_addr_plus1[5]_i_1_n_0 ;
  wire \wr_addr_plus2[0]_i_1_n_0 ;
  wire \wr_addr_plus2[1]_i_1_n_0 ;
  wire \wr_addr_plus2[2]_i_1_n_0 ;
  wire \wr_addr_plus2[3]_i_1_n_0 ;
  wire \wr_addr_plus2[4]_i_1_n_0 ;
  wire \wr_addr_plus2[5]_i_1_n_0 ;
  wire \wr_addr_plus2[5]_i_2_n_0 ;
  wire \wr_addr_plus2_reg_n_0_[0] ;
  wire \wr_addr_plus2_reg_n_0_[5] ;
  wire [28:0]wr_data_reg;
  wire \wr_data_reg_n_0_[0] ;
  wire \wr_data_reg_n_0_[10] ;
  wire \wr_data_reg_n_0_[12] ;
  wire \wr_data_reg_n_0_[16] ;
  wire \wr_data_reg_n_0_[17] ;
  wire \wr_data_reg_n_0_[18] ;
  wire \wr_data_reg_n_0_[19] ;
  wire \wr_data_reg_n_0_[1] ;
  wire \wr_data_reg_n_0_[20] ;
  wire \wr_data_reg_n_0_[21] ;
  wire \wr_data_reg_n_0_[22] ;
  wire \wr_data_reg_n_0_[23] ;
  wire \wr_data_reg_n_0_[25] ;
  wire \wr_data_reg_n_0_[26] ;
  wire \wr_data_reg_n_0_[27] ;
  wire \wr_data_reg_n_0_[28] ;
  wire \wr_data_reg_n_0_[2] ;
  wire \wr_data_reg_n_0_[3] ;
  wire \wr_data_reg_n_0_[4] ;
  wire \wr_data_reg_n_0_[5] ;
  wire \wr_data_reg_n_0_[6] ;
  wire \wr_data_reg_n_0_[7] ;
  wire \wr_data_reg_n_0_[9] ;
  wire [0:0]\wr_data_reg_reg[0]_0 ;
  wire wr_enable;
  wire wr_enable_i_1_n_0;
  wire wr_enable_i_2_n_0;
  wire wr_enable_i_3_n_0;
  wire wr_enable_i_4_n_0;
  wire wr_enable_i_5_n_0;
  wire wr_enable_i_6_n_0;
  wire wr_enable_i_7_n_0;
  wire wr_enable_i_8_n_0;
  wire wr_enable_i_9_n_0;
  wire [5:0]wr_occupancy;
  wire [5:0]wr_occupancy00_out;
  wire wr_occupancy0_carry_n_0;
  wire wr_rd_addr_gray_0;
  wire wr_rd_addr_gray_1;
  wire wr_rd_addr_gray_2;
  wire wr_rd_addr_gray_3;
  wire wr_rd_addr_gray_4;
  wire wr_rd_addr_gray_5;
  wire NLW_ram_reg_0_63_0_2_DOD_UNCONNECTED;
  wire NLW_ram_reg_0_63_12_14_DOB_UNCONNECTED;
  wire NLW_ram_reg_0_63_12_14_DOC_UNCONNECTED;
  wire NLW_ram_reg_0_63_12_14_DOD_UNCONNECTED;
  wire NLW_ram_reg_0_63_15_17_DOA_UNCONNECTED;
  wire NLW_ram_reg_0_63_15_17_DOD_UNCONNECTED;
  wire NLW_ram_reg_0_63_18_20_DOD_UNCONNECTED;
  wire NLW_ram_reg_0_63_21_23_DOD_UNCONNECTED;
  wire NLW_ram_reg_0_63_24_26_DOA_UNCONNECTED;
  wire NLW_ram_reg_0_63_24_26_DOD_UNCONNECTED;
  wire NLW_ram_reg_0_63_27_29_DOC_UNCONNECTED;
  wire NLW_ram_reg_0_63_27_29_DOD_UNCONNECTED;
  wire NLW_ram_reg_0_63_3_5_DOD_UNCONNECTED;
  wire NLW_ram_reg_0_63_6_8_DOC_UNCONNECTED;
  wire NLW_ram_reg_0_63_6_8_DOD_UNCONNECTED;
  wire NLW_ram_reg_0_63_9_11_DOD_UNCONNECTED;
  wire [2:0]NLW_rd_occupancy0_carry_CO_UNCONNECTED;
  wire [3:0]NLW_rd_occupancy0_carry__0_CO_UNCONNECTED;
  wire [3:2]NLW_rd_occupancy0_carry__0_O_UNCONNECTED;
  wire [2:0]NLW_wr_occupancy0_carry_CO_UNCONNECTED;
  wire [3:0]NLW_wr_occupancy0_carry__0_CO_UNCONNECTED;
  wire [3:2]NLW_wr_occupancy0_carry__0_O_UNCONNECTED;

  LUT5 #(
    .INIT(32'h96696996)) 
    \/i_ 
       (.I0(wr_rd_addr_gray_1),
        .I1(wr_rd_addr_gray_3),
        .I2(wr_rd_addr_gray_5),
        .I3(wr_rd_addr_gray_4),
        .I4(wr_rd_addr_gray_2),
        .O(p_6_in));
  LUT6 #(
    .INIT(64'h0000000000010000)) 
    d16p2_wr_reg_i_1
       (.I0(\wr_data_reg_n_0_[3] ),
        .I1(\wr_data_reg_n_0_[2] ),
        .I2(\wr_data_reg_n_0_[7] ),
        .I3(\wr_data_reg_n_0_[1] ),
        .I4(\wr_data_reg_n_0_[4] ),
        .I5(d2p2_wr_reg_i_2_n_0),
        .O(p_13_in));
  FDRE #(
    .INIT(1'b0)) 
    d16p2_wr_reg_reg
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(p_13_in),
        .Q(d16p2_wr_reg),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    d21p5_wr_reg2_reg
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(d21p5_wr_reg),
        .Q(d21p5_wr_reg2),
        .R(reset_out));
  LUT4 #(
    .INIT(16'h0004)) 
    d21p5_wr_reg_i_1
       (.I0(p_0_in),
        .I1(\wr_data_reg_n_0_[7] ),
        .I2(\wr_data_reg_n_0_[3] ),
        .I3(d21p5_wr_reg_i_2_n_0),
        .O(p_9_in));
  LUT6 #(
    .INIT(64'hFFFFDFFFFFFFFFFF)) 
    d21p5_wr_reg_i_2
       (.I0(\wr_data_reg_n_0_[4] ),
        .I1(\wr_data_reg_n_0_[1] ),
        .I2(\wr_data_reg_n_0_[2] ),
        .I3(\wr_data_reg_n_0_[0] ),
        .I4(\wr_data_reg_n_0_[6] ),
        .I5(\wr_data_reg_n_0_[5] ),
        .O(d21p5_wr_reg_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    d21p5_wr_reg_reg
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(p_9_in),
        .Q(d21p5_wr_reg),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    d2p2_wr_reg2_reg
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(d2p2_wr_reg),
        .Q(d2p2_wr_reg2),
        .R(reset_out));
  LUT6 #(
    .INIT(64'h0000000000010000)) 
    d2p2_wr_reg_i_1
       (.I0(\wr_data_reg_n_0_[3] ),
        .I1(\wr_data_reg_n_0_[2] ),
        .I2(\wr_data_reg_n_0_[7] ),
        .I3(\wr_data_reg_n_0_[4] ),
        .I4(\wr_data_reg_n_0_[1] ),
        .I5(d2p2_wr_reg_i_2_n_0),
        .O(p_7_in));
  LUT4 #(
    .INIT(16'hFFFD)) 
    d2p2_wr_reg_i_2
       (.I0(\wr_data_reg_n_0_[6] ),
        .I1(\wr_data_reg_n_0_[0] ),
        .I2(\wr_data_reg_n_0_[5] ),
        .I3(p_0_in),
        .O(d2p2_wr_reg_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    d2p2_wr_reg_reg
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(p_7_in),
        .Q(d2p2_wr_reg),
        .R(reset_out));
  LUT1 #(
    .INIT(2'h1)) 
    even_i_1
       (.I0(even),
        .O(even_i_1_n_0));
  FDSE #(
    .INIT(1'b1)) 
    even_reg
       (.C(CLK),
        .CE(1'b1),
        .D(even_i_1_n_0),
        .Q(even),
        .S(reset_modified));
  LUT1 #(
    .INIT(2'h1)) 
    \initialize_counter[0]_i_1 
       (.I0(initialize_counter_reg[0]),
        .O(p_0_in__4[0]));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \initialize_counter[1]_i_1 
       (.I0(initialize_counter_reg[0]),
        .I1(initialize_counter_reg[1]),
        .O(p_0_in__4[1]));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \initialize_counter[2]_i_1 
       (.I0(initialize_counter_reg[2]),
        .I1(initialize_counter_reg[0]),
        .I2(initialize_counter_reg[1]),
        .O(p_0_in__4[2]));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \initialize_counter[3]_i_1 
       (.I0(initialize_counter_reg[3]),
        .I1(initialize_counter_reg[1]),
        .I2(initialize_counter_reg[0]),
        .I3(initialize_counter_reg[2]),
        .O(p_0_in__4[3]));
  LUT6 #(
    .INIT(64'h2AAAAAAAAAAAAAAA)) 
    \initialize_counter[4]_i_1 
       (.I0(initialize_ram),
        .I1(initialize_counter_reg[2]),
        .I2(initialize_counter_reg[0]),
        .I3(initialize_counter_reg[1]),
        .I4(initialize_counter_reg[3]),
        .I5(initialize_counter_reg[4]),
        .O(initialize_counter0));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \initialize_counter[4]_i_2 
       (.I0(initialize_counter_reg[2]),
        .I1(initialize_counter_reg[0]),
        .I2(initialize_counter_reg[1]),
        .I3(initialize_counter_reg[3]),
        .I4(initialize_counter_reg[4]),
        .O(p_0_in__4[4]));
  FDRE #(
    .INIT(1'b0)) 
    \initialize_counter_reg[0] 
       (.C(rxuserclk2),
        .CE(initialize_counter0),
        .D(p_0_in__4[0]),
        .Q(initialize_counter_reg[0]),
        .R(initialize_ram0));
  FDRE #(
    .INIT(1'b0)) 
    \initialize_counter_reg[1] 
       (.C(rxuserclk2),
        .CE(initialize_counter0),
        .D(p_0_in__4[1]),
        .Q(initialize_counter_reg[1]),
        .R(initialize_ram0));
  FDRE #(
    .INIT(1'b0)) 
    \initialize_counter_reg[2] 
       (.C(rxuserclk2),
        .CE(initialize_counter0),
        .D(p_0_in__4[2]),
        .Q(initialize_counter_reg[2]),
        .R(initialize_ram0));
  FDRE #(
    .INIT(1'b0)) 
    \initialize_counter_reg[3] 
       (.C(rxuserclk2),
        .CE(initialize_counter0),
        .D(p_0_in__4[3]),
        .Q(initialize_counter_reg[3]),
        .R(initialize_ram0));
  FDRE #(
    .INIT(1'b0)) 
    \initialize_counter_reg[4] 
       (.C(rxuserclk2),
        .CE(initialize_counter0),
        .D(p_0_in__4[4]),
        .Q(initialize_counter_reg[4]),
        .R(initialize_ram0));
  LUT6 #(
    .INIT(64'hFFFFFFFF80000000)) 
    initialize_ram_complete_i_1
       (.I0(initialize_counter_reg[2]),
        .I1(initialize_counter_reg[0]),
        .I2(initialize_counter_reg[1]),
        .I3(initialize_counter_reg[3]),
        .I4(initialize_counter_reg[4]),
        .I5(initialize_ram_complete),
        .O(initialize_ram_complete_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    initialize_ram_complete_pulse_i_1
       (.I0(initialize_ram_complete),
        .I1(initialize_ram_complete_reg__0),
        .O(initialize_ram_complete_pulse0));
  FDRE #(
    .INIT(1'b0)) 
    initialize_ram_complete_pulse_reg
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(initialize_ram_complete_pulse0),
        .Q(initialize_ram_complete_pulse),
        .R(initialize_ram0));
  FDRE #(
    .INIT(1'b0)) 
    initialize_ram_complete_reg
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(initialize_ram_complete_i_1_n_0),
        .Q(initialize_ram_complete),
        .R(initialize_ram0));
  LUT2 #(
    .INIT(4'hE)) 
    initialize_ram_complete_reg_i_1
       (.I0(start),
        .I1(reset_out),
        .O(initialize_ram0));
  FDRE #(
    .INIT(1'b0)) 
    initialize_ram_complete_reg_reg
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(initialize_ram_complete),
        .Q(initialize_ram_complete_reg__0),
        .R(initialize_ram0));
  FDRE #(
    .INIT(1'b0)) 
    initialize_ram_complete_sync_reg1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(initialize_ram_complete_sync),
        .Q(initialize_ram_complete_sync_reg1),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    initialize_ram_complete_sync_ris_edg_reg
       (.C(CLK),
        .CE(1'b1),
        .D(initialize_ram_complete_sync_ris_edg0),
        .Q(initialize_ram_complete_sync_ris_edg),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h4)) 
    initialize_ram_i_1
       (.I0(initialize_ram_complete),
        .I1(initialize_ram),
        .O(initialize_ram_i_1_n_0));
  FDSE #(
    .INIT(1'b1)) 
    initialize_ram_reg
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(initialize_ram_i_1_n_0),
        .Q(initialize_ram),
        .S(initialize_ram0));
  FDRE #(
    .INIT(1'b0)) 
    k28p5_wr_reg2_reg
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(k28p5_wr_reg),
        .Q(k28p5_wr_reg2),
        .R(reset_out));
  LUT4 #(
    .INIT(16'h0100)) 
    k28p5_wr_reg_i_1
       (.I0(k28p5_wr_reg_i_2_n_0),
        .I1(\wr_data_reg_n_0_[16] ),
        .I2(\wr_data_reg_n_0_[17] ),
        .I3(\wr_data_reg_n_0_[20] ),
        .O(p_14_in));
  LUT6 #(
    .INIT(64'hDFFFFFFFFFFFFFFF)) 
    k28p5_wr_reg_i_2
       (.I0(\wr_data_reg_n_0_[18] ),
        .I1(\wr_data_reg_n_0_[22] ),
        .I2(\wr_data_reg_n_0_[21] ),
        .I3(\wr_data_reg_n_0_[23] ),
        .I4(\wr_data_reg_n_0_[19] ),
        .I5(\wr_data_reg_n_0_[27] ),
        .O(k28p5_wr_reg_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    k28p5_wr_reg_reg
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(p_14_in),
        .Q(k28p5_wr_reg),
        .R(reset_out));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2304" *) 
  (* RTL_RAM_NAME = "pcs_pma_block_i/transceiver_inst/rx_elastic_buffer_inst/ram" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "63" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "2" *) 
  RAM64M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    ram_reg_0_63_0_2
       (.ADDRA(rd_addr),
        .ADDRB(rd_addr),
        .ADDRC(rd_addr),
        .ADDRD(wr_addr),
        .DIA(wr_data_reg[0]),
        .DIB(wr_data_reg[1]),
        .DIC(wr_data_reg[2]),
        .DID(1'b0),
        .DOA(dpo[0]),
        .DOB(dpo[1]),
        .DOC(dpo[2]),
        .DOD(NLW_ram_reg_0_63_0_2_DOD_UNCONNECTED),
        .WCLK(rxuserclk2),
        .WE(wr_enable));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  (* RTL_RAM_BITS = "2304" *) 
  (* RTL_RAM_NAME = "pcs_pma_block_i/transceiver_inst/rx_elastic_buffer_inst/ram" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "63" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "12" *) 
  (* ram_slice_end = "14" *) 
  RAM64M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    ram_reg_0_63_12_14
       (.ADDRA(rd_addr),
        .ADDRB(rd_addr),
        .ADDRC(rd_addr),
        .ADDRD(wr_addr),
        .DIA(wr_data_reg[12]),
        .DIB(wr_data_reg[13]),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(dpo[12]),
        .DOB(NLW_ram_reg_0_63_12_14_DOB_UNCONNECTED),
        .DOC(NLW_ram_reg_0_63_12_14_DOC_UNCONNECTED),
        .DOD(NLW_ram_reg_0_63_12_14_DOD_UNCONNECTED),
        .WCLK(rxuserclk2),
        .WE(wr_enable));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  (* RTL_RAM_BITS = "2304" *) 
  (* RTL_RAM_NAME = "pcs_pma_block_i/transceiver_inst/rx_elastic_buffer_inst/ram" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "63" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "15" *) 
  (* ram_slice_end = "17" *) 
  RAM64M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    ram_reg_0_63_15_17
       (.ADDRA(rd_addr),
        .ADDRB(rd_addr),
        .ADDRC(rd_addr),
        .ADDRD(wr_addr),
        .DIA(1'b0),
        .DIB(wr_data_reg[16]),
        .DIC(wr_data_reg[17]),
        .DID(1'b0),
        .DOA(NLW_ram_reg_0_63_15_17_DOA_UNCONNECTED),
        .DOB(dpo[16]),
        .DOC(dpo[17]),
        .DOD(NLW_ram_reg_0_63_15_17_DOD_UNCONNECTED),
        .WCLK(rxuserclk2),
        .WE(wr_enable));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2304" *) 
  (* RTL_RAM_NAME = "pcs_pma_block_i/transceiver_inst/rx_elastic_buffer_inst/ram" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "63" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "18" *) 
  (* ram_slice_end = "20" *) 
  RAM64M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    ram_reg_0_63_18_20
       (.ADDRA(rd_addr),
        .ADDRB(rd_addr),
        .ADDRC(rd_addr),
        .ADDRD(wr_addr),
        .DIA(wr_data_reg[18]),
        .DIB(wr_data_reg[19]),
        .DIC(wr_data_reg[20]),
        .DID(1'b0),
        .DOA(dpo[18]),
        .DOB(dpo[19]),
        .DOC(dpo[20]),
        .DOD(NLW_ram_reg_0_63_18_20_DOD_UNCONNECTED),
        .WCLK(rxuserclk2),
        .WE(wr_enable));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2304" *) 
  (* RTL_RAM_NAME = "pcs_pma_block_i/transceiver_inst/rx_elastic_buffer_inst/ram" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "63" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "21" *) 
  (* ram_slice_end = "23" *) 
  RAM64M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    ram_reg_0_63_21_23
       (.ADDRA(rd_addr),
        .ADDRB(rd_addr),
        .ADDRC(rd_addr),
        .ADDRD(wr_addr),
        .DIA(wr_data_reg[21]),
        .DIB(wr_data_reg[22]),
        .DIC(wr_data_reg[23]),
        .DID(1'b0),
        .DOA(dpo[21]),
        .DOB(dpo[22]),
        .DOC(dpo[23]),
        .DOD(NLW_ram_reg_0_63_21_23_DOD_UNCONNECTED),
        .WCLK(rxuserclk2),
        .WE(wr_enable));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  (* RTL_RAM_BITS = "2304" *) 
  (* RTL_RAM_NAME = "pcs_pma_block_i/transceiver_inst/rx_elastic_buffer_inst/ram" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "63" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "24" *) 
  (* ram_slice_end = "26" *) 
  RAM64M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    ram_reg_0_63_24_26
       (.ADDRA(rd_addr),
        .ADDRB(rd_addr),
        .ADDRC(rd_addr),
        .ADDRD(wr_addr),
        .DIA(1'b0),
        .DIB(wr_data_reg[25]),
        .DIC(wr_data_reg[26]),
        .DID(1'b0),
        .DOA(NLW_ram_reg_0_63_24_26_DOA_UNCONNECTED),
        .DOB(dpo[25]),
        .DOC(dpo[26]),
        .DOD(NLW_ram_reg_0_63_24_26_DOD_UNCONNECTED),
        .WCLK(rxuserclk2),
        .WE(wr_enable));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  (* RTL_RAM_BITS = "2304" *) 
  (* RTL_RAM_NAME = "pcs_pma_block_i/transceiver_inst/rx_elastic_buffer_inst/ram" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "63" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "27" *) 
  (* ram_slice_end = "29" *) 
  RAM64M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    ram_reg_0_63_27_29
       (.ADDRA(rd_addr),
        .ADDRB(rd_addr),
        .ADDRC(rd_addr),
        .ADDRD(wr_addr),
        .DIA(wr_data_reg[27]),
        .DIB(wr_data_reg[28]),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(dpo[27]),
        .DOB(dpo[28]),
        .DOC(NLW_ram_reg_0_63_27_29_DOC_UNCONNECTED),
        .DOD(NLW_ram_reg_0_63_27_29_DOD_UNCONNECTED),
        .WCLK(rxuserclk2),
        .WE(wr_enable));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2304" *) 
  (* RTL_RAM_NAME = "pcs_pma_block_i/transceiver_inst/rx_elastic_buffer_inst/ram" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "63" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "3" *) 
  (* ram_slice_end = "5" *) 
  RAM64M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    ram_reg_0_63_3_5
       (.ADDRA(rd_addr),
        .ADDRB(rd_addr),
        .ADDRC(rd_addr),
        .ADDRD(wr_addr),
        .DIA(wr_data_reg[3]),
        .DIB(wr_data_reg[4]),
        .DIC(wr_data_reg[5]),
        .DID(1'b0),
        .DOA(dpo[3]),
        .DOB(dpo[4]),
        .DOC(dpo[5]),
        .DOD(NLW_ram_reg_0_63_3_5_DOD_UNCONNECTED),
        .WCLK(rxuserclk2),
        .WE(wr_enable));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  (* RTL_RAM_BITS = "2304" *) 
  (* RTL_RAM_NAME = "pcs_pma_block_i/transceiver_inst/rx_elastic_buffer_inst/ram" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "63" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "6" *) 
  (* ram_slice_end = "8" *) 
  RAM64M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    ram_reg_0_63_6_8
       (.ADDRA(rd_addr),
        .ADDRB(rd_addr),
        .ADDRC(rd_addr),
        .ADDRD(wr_addr),
        .DIA(wr_data_reg[6]),
        .DIB(wr_data_reg[7]),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(dpo[6]),
        .DOB(dpo[7]),
        .DOC(NLW_ram_reg_0_63_6_8_DOC_UNCONNECTED),
        .DOD(NLW_ram_reg_0_63_6_8_DOD_UNCONNECTED),
        .WCLK(rxuserclk2),
        .WE(wr_enable));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2304" *) 
  (* RTL_RAM_NAME = "pcs_pma_block_i/transceiver_inst/rx_elastic_buffer_inst/ram" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "63" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "9" *) 
  (* ram_slice_end = "11" *) 
  RAM64M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000)) 
    ram_reg_0_63_9_11
       (.ADDRA(rd_addr),
        .ADDRB(rd_addr),
        .ADDRC(rd_addr),
        .ADDRD(wr_addr),
        .DIA(wr_data_reg[9]),
        .DIB(wr_data_reg[10]),
        .DIC(wr_data_reg[11]),
        .DID(1'b0),
        .DOA(dpo[9]),
        .DOB(dpo[10]),
        .DOC(dpo[11]),
        .DOD(NLW_ram_reg_0_63_9_11_DOD_UNCONNECTED),
        .WCLK(rxuserclk2),
        .WE(wr_enable));
  LUT2 #(
    .INIT(4'h6)) 
    \rd_addr_gray[0]_i_1 
       (.I0(\rd_addr_plus2_reg_n_0_[0] ),
        .I1(p_1_in),
        .O(\rd_addr_gray[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_addr_gray[1]_i_1 
       (.I0(p_1_in),
        .I1(p_2_in16_in),
        .O(\rd_addr_gray[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_addr_gray[2]_i_1 
       (.I0(p_2_in16_in),
        .I1(p_3_in),
        .O(\rd_addr_gray[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_addr_gray[3]_i_1 
       (.I0(p_3_in),
        .I1(p_4_in19_in),
        .O(\rd_addr_gray[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_addr_gray[4]_i_1 
       (.I0(p_4_in19_in),
        .I1(\rd_addr_plus2_reg_n_0_[5] ),
        .O(\rd_addr_gray[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_gray_reg[0] 
       (.C(CLK),
        .CE(rd_enable),
        .D(\rd_addr_gray[0]_i_1_n_0 ),
        .Q(rd_addr_gray[0]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_gray_reg[1] 
       (.C(CLK),
        .CE(rd_enable),
        .D(\rd_addr_gray[1]_i_1_n_0 ),
        .Q(rd_addr_gray[1]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_gray_reg[2] 
       (.C(CLK),
        .CE(rd_enable),
        .D(\rd_addr_gray[2]_i_1_n_0 ),
        .Q(rd_addr_gray[2]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_gray_reg[3] 
       (.C(CLK),
        .CE(rd_enable),
        .D(\rd_addr_gray[3]_i_1_n_0 ),
        .Q(rd_addr_gray[3]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_gray_reg[4] 
       (.C(CLK),
        .CE(rd_enable),
        .D(\rd_addr_gray[4]_i_1_n_0 ),
        .Q(rd_addr_gray[4]),
        .R(reset_modified));
  FDSE #(
    .INIT(1'b1)) 
    \rd_addr_plus1_reg[0] 
       (.C(CLK),
        .CE(rd_enable),
        .D(\rd_addr_plus2_reg_n_0_[0] ),
        .Q(rd_addr_plus1[0]),
        .S(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_plus1_reg[1] 
       (.C(CLK),
        .CE(rd_enable),
        .D(p_1_in),
        .Q(rd_addr_plus1[1]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_plus1_reg[2] 
       (.C(CLK),
        .CE(rd_enable),
        .D(p_2_in16_in),
        .Q(rd_addr_plus1[2]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_plus1_reg[3] 
       (.C(CLK),
        .CE(rd_enable),
        .D(p_3_in),
        .Q(rd_addr_plus1[3]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_plus1_reg[4] 
       (.C(CLK),
        .CE(rd_enable),
        .D(p_4_in19_in),
        .Q(rd_addr_plus1[4]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_plus1_reg[5] 
       (.C(CLK),
        .CE(rd_enable),
        .D(\rd_addr_plus2_reg_n_0_[5] ),
        .Q(rd_addr_plus1[5]),
        .R(reset_modified));
  LUT1 #(
    .INIT(2'h1)) 
    \rd_addr_plus2[0]_i_1 
       (.I0(\rd_addr_plus2_reg_n_0_[0] ),
        .O(p_0_in__5[0]));
  LUT3 #(
    .INIT(8'h78)) 
    \rd_addr_plus2[2]_i_1 
       (.I0(\rd_addr_plus2_reg_n_0_[0] ),
        .I1(p_1_in),
        .I2(p_2_in16_in),
        .O(p_0_in__5[2]));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \rd_addr_plus2[3]_i_1 
       (.I0(p_1_in),
        .I1(\rd_addr_plus2_reg_n_0_[0] ),
        .I2(p_2_in16_in),
        .I3(p_3_in),
        .O(p_0_in__5[3]));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \rd_addr_plus2[4]_i_1 
       (.I0(p_2_in16_in),
        .I1(\rd_addr_plus2_reg_n_0_[0] ),
        .I2(p_1_in),
        .I3(p_3_in),
        .I4(p_4_in19_in),
        .O(p_0_in__5[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \rd_addr_plus2[5]_i_1 
       (.I0(p_4_in19_in),
        .I1(p_3_in),
        .I2(p_1_in),
        .I3(\rd_addr_plus2_reg_n_0_[0] ),
        .I4(p_2_in16_in),
        .I5(\rd_addr_plus2_reg_n_0_[5] ),
        .O(p_0_in__5[5]));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_plus2_reg[0] 
       (.C(CLK),
        .CE(rd_enable),
        .D(p_0_in__5[0]),
        .Q(\rd_addr_plus2_reg_n_0_[0] ),
        .R(reset_modified));
  FDSE #(
    .INIT(1'b1)) 
    \rd_addr_plus2_reg[1] 
       (.C(CLK),
        .CE(rd_enable),
        .D(\rd_addr_gray[0]_i_1_n_0 ),
        .Q(p_1_in),
        .S(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_plus2_reg[2] 
       (.C(CLK),
        .CE(rd_enable),
        .D(p_0_in__5[2]),
        .Q(p_2_in16_in),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_plus2_reg[3] 
       (.C(CLK),
        .CE(rd_enable),
        .D(p_0_in__5[3]),
        .Q(p_3_in),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_plus2_reg[4] 
       (.C(CLK),
        .CE(rd_enable),
        .D(p_0_in__5[4]),
        .Q(p_4_in19_in),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_plus2_reg[5] 
       (.C(CLK),
        .CE(rd_enable),
        .D(p_0_in__5[5]),
        .Q(\rd_addr_plus2_reg_n_0_[5] ),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_reg[0] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_addr_plus1[0]),
        .Q(rd_addr[0]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_reg[1] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_addr_plus1[1]),
        .Q(rd_addr[1]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_reg[2] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_addr_plus1[2]),
        .Q(rd_addr[2]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_reg[3] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_addr_plus1[3]),
        .Q(rd_addr[3]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_reg[4] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_addr_plus1[4]),
        .Q(rd_addr[4]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_reg[5] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_addr_plus1[5]),
        .Q(rd_addr[5]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[0]),
        .Q(rd_data[0]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[10] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[10]),
        .Q(rd_data[10]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[11] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[11]),
        .Q(rd_data[11]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[12] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[12]),
        .Q(rd_data[12]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[16] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[16]),
        .Q(rd_data[16]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[17] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[17]),
        .Q(rd_data[17]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[18] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[18]),
        .Q(rd_data[18]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[19] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[19]),
        .Q(rd_data[19]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[1]),
        .Q(rd_data[1]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[20] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[20]),
        .Q(rd_data[20]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[21] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[21]),
        .Q(rd_data[21]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[22] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[22]),
        .Q(rd_data[22]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[23] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[23]),
        .Q(rd_data[23]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[25] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[25]),
        .Q(rd_data[25]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[26] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[26]),
        .Q(rd_data[26]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[27] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[27]),
        .Q(rd_data[27]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[28] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[28]),
        .Q(\rd_data_reg_n_0_[28] ),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[2]),
        .Q(rd_data[2]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[3]),
        .Q(rd_data[3]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[4]),
        .Q(rd_data[4]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[5]),
        .Q(rd_data[5]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[6]),
        .Q(rd_data[6]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[7]),
        .Q(rd_data[7]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[9] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[9]),
        .Q(rd_data[9]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg_reg[0] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[0]),
        .Q(rd_data_reg[0]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg_reg[10] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[10]),
        .Q(rd_data_reg[10]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg_reg[11] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[11]),
        .Q(rd_data_reg[11]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg_reg[12] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[12]),
        .Q(rd_data_reg[12]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg_reg[16] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[16]),
        .Q(rd_data_reg[16]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg_reg[17] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[17]),
        .Q(rd_data_reg[17]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg_reg[18] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[18]),
        .Q(rd_data_reg[18]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg_reg[19] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[19]),
        .Q(rd_data_reg[19]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg_reg[1] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[1]),
        .Q(rd_data_reg[1]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg_reg[20] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[20]),
        .Q(rd_data_reg[20]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg_reg[21] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[21]),
        .Q(rd_data_reg[21]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg_reg[22] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[22]),
        .Q(rd_data_reg[22]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg_reg[23] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[23]),
        .Q(rd_data_reg[23]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg_reg[25] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[25]),
        .Q(rd_data_reg[25]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg_reg[26] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[26]),
        .Q(rd_data_reg[26]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg_reg[27] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[27]),
        .Q(rd_data_reg[27]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg_reg[28] 
       (.C(CLK),
        .CE(rd_enable),
        .D(\rd_data_reg_n_0_[28] ),
        .Q(rd_data_reg[28]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg_reg[2] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[2]),
        .Q(rd_data_reg[2]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg_reg[3] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[3]),
        .Q(rd_data_reg[3]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg_reg[4] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[4]),
        .Q(rd_data_reg[4]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg_reg[5] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[5]),
        .Q(rd_data_reg[5]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg_reg[6] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[6]),
        .Q(rd_data_reg[6]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg_reg[7] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[7]),
        .Q(rd_data_reg[7]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg_reg[9] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[9]),
        .Q(rd_data_reg[9]),
        .R(reset_modified));
  LUT6 #(
    .INIT(64'h0044044404440444)) 
    rd_enable_i_1
       (.I0(reset_modified),
        .I1(even),
        .I2(rd_enable_i_2_n_0),
        .I3(p_4_in),
        .I4(rd_enable_i_4_n_0),
        .I5(rd_enable_i_5_n_0),
        .O(rd_enable_i_1_n_0));
  LUT2 #(
    .INIT(4'h7)) 
    rd_enable_i_10
       (.I0(rd_occupancy[2]),
        .I1(rd_occupancy[3]),
        .O(rd_enable_i_10_n_0));
  LUT4 #(
    .INIT(16'h4000)) 
    rd_enable_i_11
       (.I0(rd_data[6]),
        .I1(rd_data[7]),
        .I2(rd_data[5]),
        .I3(rd_data[4]),
        .O(rd_enable_i_11_n_0));
  LUT4 #(
    .INIT(16'h0004)) 
    rd_enable_i_12
       (.I0(rd_data[7]),
        .I1(rd_data[6]),
        .I2(rd_data[5]),
        .I3(rd_data[4]),
        .O(rd_enable_i_12_n_0));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    rd_enable_i_2
       (.I0(rd_data[1]),
        .I1(rd_data[0]),
        .I2(rd_data[3]),
        .I3(rd_data[2]),
        .I4(rd_enable_i_6_n_0),
        .I5(rd_enable_i_7_n_0),
        .O(rd_enable_i_2_n_0));
  LUT4 #(
    .INIT(16'h0020)) 
    rd_enable_i_3
       (.I0(rd_enable_i_8_n_0),
        .I1(rd_data[16]),
        .I2(rd_data[18]),
        .I3(rd_data[17]),
        .O(p_4_in));
  LUT6 #(
    .INIT(64'h0001000100010000)) 
    rd_enable_i_4
       (.I0(rd_occupancy[4]),
        .I1(rd_occupancy[5]),
        .I2(rd_data[3]),
        .I3(rd_data[11]),
        .I4(rd_enable_i_9_n_0),
        .I5(rd_enable_i_10_n_0),
        .O(rd_enable_i_4_n_0));
  LUT5 #(
    .INIT(32'h08300800)) 
    rd_enable_i_5
       (.I0(rd_enable_i_11_n_0),
        .I1(rd_data[2]),
        .I2(rd_data[1]),
        .I3(rd_data[0]),
        .I4(rd_enable_i_12_n_0),
        .O(rd_enable_i_5_n_0));
  LUT6 #(
    .INIT(64'h0000000000000020)) 
    rd_enable_i_6
       (.I0(rd_data[4]),
        .I1(rd_data[5]),
        .I2(rd_data[6]),
        .I3(rd_data[7]),
        .I4(rd_occupancy[5]),
        .I5(rd_data[11]),
        .O(rd_enable_i_6_n_0));
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    rd_enable_i_7
       (.I0(rd_occupancy[2]),
        .I1(rd_occupancy[3]),
        .I2(rd_occupancy[0]),
        .I3(rd_occupancy[1]),
        .I4(rd_occupancy[4]),
        .O(rd_enable_i_7_n_0));
  LUT6 #(
    .INIT(64'h0080000000000000)) 
    rd_enable_i_8
       (.I0(rd_data[19]),
        .I1(rd_data[20]),
        .I2(rd_data[21]),
        .I3(rd_data[22]),
        .I4(rd_data[27]),
        .I5(rd_data[23]),
        .O(rd_enable_i_8_n_0));
  LUT2 #(
    .INIT(4'h7)) 
    rd_enable_i_9
       (.I0(rd_occupancy[0]),
        .I1(rd_occupancy[1]),
        .O(rd_enable_i_9_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rd_enable_reg
       (.C(CLK),
        .CE(1'b1),
        .D(rd_enable_i_1_n_0),
        .Q(rd_enable),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 rd_occupancy0_carry
       (.CI(1'b0),
        .CO({rd_occupancy0_carry_n_0,NLW_rd_occupancy0_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI(rd_wr_addr[3:0]),
        .O(rd_occupancy01_out[3:0]),
        .S({\reclock_wr_addrgray[4].sync_wr_addrgray_n_0 ,\reclock_wr_addrgray[3].sync_wr_addrgray_n_0 ,\reclock_wr_addrgray[2].sync_wr_addrgray_n_0 ,\reclock_wr_addrgray[1].sync_wr_addrgray_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 rd_occupancy0_carry__0
       (.CI(rd_occupancy0_carry_n_0),
        .CO(NLW_rd_occupancy0_carry__0_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,rd_wr_addr[4]}),
        .O({NLW_rd_occupancy0_carry__0_O_UNCONNECTED[3:2],rd_occupancy01_out[5:4]}),
        .S({1'b0,1'b0,\reclock_wr_addrgray[5].sync_wr_addrgray_n_0 ,\reclock_wr_addrgray[5].sync_wr_addrgray_n_1 }));
  LUT2 #(
    .INIT(4'h6)) 
    rd_occupancy0_carry__0_i_1
       (.I0(p_1_out),
        .I1(rd_wr_addr_gray_5),
        .O(rd_wr_addr[4]));
  LUT3 #(
    .INIT(8'h96)) 
    rd_occupancy0_carry_i_1
       (.I0(p_2_out),
        .I1(rd_wr_addr_gray_5),
        .I2(p_1_out),
        .O(rd_wr_addr[3]));
  LUT4 #(
    .INIT(16'h6996)) 
    rd_occupancy0_carry_i_2
       (.I0(p_3_out),
        .I1(p_1_out),
        .I2(rd_wr_addr_gray_5),
        .I3(p_2_out),
        .O(rd_wr_addr[2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    rd_occupancy0_carry_i_3
       (.I0(p_4_out),
        .I1(p_2_out),
        .I2(rd_wr_addr_gray_5),
        .I3(p_1_out),
        .I4(p_3_out),
        .O(rd_wr_addr[1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    rd_occupancy0_carry_i_4
       (.I0(rd_wr_addr_gray_0),
        .I1(p_3_out),
        .I2(p_1_out),
        .I3(rd_wr_addr_gray_5),
        .I4(p_2_out),
        .I5(p_4_out),
        .O(rd_wr_addr[0]));
  FDRE #(
    .INIT(1'b0)) 
    \rd_occupancy_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(rd_occupancy01_out[0]),
        .Q(rd_occupancy[0]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_occupancy_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(rd_occupancy01_out[1]),
        .Q(rd_occupancy[1]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_occupancy_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(rd_occupancy01_out[2]),
        .Q(rd_occupancy[2]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_occupancy_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(rd_occupancy01_out[3]),
        .Q(rd_occupancy[3]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rd_occupancy_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(rd_occupancy01_out[4]),
        .Q(rd_occupancy[4]),
        .R(reset_modified));
  FDSE #(
    .INIT(1'b1)) 
    \rd_occupancy_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(rd_occupancy01_out[5]),
        .Q(rd_occupancy[5]),
        .S(reset_modified));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_5 \reclock_rd_addrgray[0].sync_rd_addrgray 
       (.Q(rd_addr_gray[0]),
        .data_out(wr_rd_addr_gray_0),
        .rxuserclk2(rxuserclk2));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_6 \reclock_rd_addrgray[1].sync_rd_addrgray 
       (.Q(wr_addr[0]),
        .S(\reclock_rd_addrgray[1].sync_rd_addrgray_n_0 ),
        .data_out(wr_rd_addr_gray_0),
        .data_sync_reg1_0(rd_addr_gray[1]),
        .data_sync_reg6_0(wr_rd_addr_gray_1),
        .p_6_in(p_6_in),
        .rxuserclk2(rxuserclk2));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_7 \reclock_rd_addrgray[2].sync_rd_addrgray 
       (.Q(wr_addr[1]),
        .S(\reclock_rd_addrgray[2].sync_rd_addrgray_n_0 ),
        .data_out(wr_rd_addr_gray_2),
        .data_sync_reg1_0(rd_addr_gray[2]),
        .rxuserclk2(rxuserclk2),
        .\wr_occupancy_reg[3] (wr_rd_addr_gray_4),
        .\wr_occupancy_reg[3]_0 (wr_rd_addr_gray_5),
        .\wr_occupancy_reg[3]_1 (wr_rd_addr_gray_3),
        .\wr_occupancy_reg[3]_2 (wr_rd_addr_gray_1));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_8 \reclock_rd_addrgray[3].sync_rd_addrgray 
       (.Q(wr_addr[2]),
        .S(\reclock_rd_addrgray[3].sync_rd_addrgray_n_0 ),
        .data_out(wr_rd_addr_gray_3),
        .data_sync_reg1_0(rd_addr_gray[3]),
        .rxuserclk2(rxuserclk2),
        .\wr_occupancy_reg[3] (wr_rd_addr_gray_5),
        .\wr_occupancy_reg[3]_0 (wr_rd_addr_gray_4),
        .\wr_occupancy_reg[3]_1 (wr_rd_addr_gray_2));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_9 \reclock_rd_addrgray[4].sync_rd_addrgray 
       (.Q(wr_addr[3]),
        .S(\reclock_rd_addrgray[4].sync_rd_addrgray_n_0 ),
        .data_out(wr_rd_addr_gray_4),
        .data_sync_reg1_0(rd_addr_gray[4]),
        .rxuserclk2(rxuserclk2),
        .\wr_occupancy_reg[3] (wr_rd_addr_gray_5),
        .\wr_occupancy_reg[3]_0 (wr_rd_addr_gray_3));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_10 \reclock_rd_addrgray[5].sync_rd_addrgray 
       (.ADDRD(wr_addr[5:4]),
        .S({\reclock_rd_addrgray[5].sync_rd_addrgray_n_0 ,\reclock_rd_addrgray[5].sync_rd_addrgray_n_1 }),
        .data_in(rd_addr_plus1[5]),
        .data_out(wr_rd_addr_gray_5),
        .rxuserclk2(rxuserclk2),
        .\wr_occupancy_reg[5] (wr_rd_addr_gray_4));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_11 \reclock_wr_addrgray[0].sync_wr_addrgray 
       (.CLK(CLK),
        .Q(wr_addr_gray[0]),
        .data_out(rd_wr_addr_gray_0));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_12 \reclock_wr_addrgray[1].sync_wr_addrgray 
       (.CLK(CLK),
        .DI(rd_wr_addr[1]),
        .Q(rd_addr[0]),
        .S(\reclock_wr_addrgray[1].sync_wr_addrgray_n_0 ),
        .data_out(rd_wr_addr_gray_0),
        .data_sync_reg1_0(wr_addr_gray[1]),
        .data_sync_reg6_0(p_4_out));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_13 \reclock_wr_addrgray[2].sync_wr_addrgray 
       (.CLK(CLK),
        .Q(rd_addr[1]),
        .S(\reclock_wr_addrgray[2].sync_wr_addrgray_n_0 ),
        .data_out(p_3_out),
        .data_sync_reg1_0(wr_addr_gray[2]),
        .\rd_occupancy_reg[3] (p_1_out),
        .\rd_occupancy_reg[3]_0 (rd_wr_addr_gray_5),
        .\rd_occupancy_reg[3]_1 (p_2_out),
        .\rd_occupancy_reg[3]_2 (p_4_out));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_14 \reclock_wr_addrgray[3].sync_wr_addrgray 
       (.CLK(CLK),
        .Q(rd_addr[2]),
        .S(\reclock_wr_addrgray[3].sync_wr_addrgray_n_0 ),
        .data_out(p_2_out),
        .data_sync_reg1_0(wr_addr_gray[3]),
        .\rd_occupancy_reg[3] (rd_wr_addr_gray_5),
        .\rd_occupancy_reg[3]_0 (p_1_out),
        .\rd_occupancy_reg[3]_1 (p_3_out));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_15 \reclock_wr_addrgray[4].sync_wr_addrgray 
       (.CLK(CLK),
        .Q(rd_addr[3]),
        .S(\reclock_wr_addrgray[4].sync_wr_addrgray_n_0 ),
        .data_out(p_1_out),
        .data_sync_reg1_0(wr_addr_gray[4]),
        .\rd_occupancy_reg[3] (rd_wr_addr_gray_5),
        .\rd_occupancy_reg[3]_0 (p_2_out));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_16 \reclock_wr_addrgray[5].sync_wr_addrgray 
       (.CLK(CLK),
        .Q(rd_addr[5:4]),
        .S({\reclock_wr_addrgray[5].sync_wr_addrgray_n_0 ,\reclock_wr_addrgray[5].sync_wr_addrgray_n_1 }),
        .data_out(rd_wr_addr_gray_5),
        .data_sync_reg1_0(wr_addr_gray[5]),
        .\rd_occupancy_reg[5] (p_1_out));
  LUT6 #(
    .INIT(64'h0000FFFF00F40000)) 
    remove_idle_i_1
       (.I0(wr_enable_i_5_n_0),
        .I1(wr_enable_i_4_n_0),
        .I2(remove_idle_i_2_n_0),
        .I3(remove_idle_i_3_n_0),
        .I4(initialize_ram_complete),
        .I5(remove_idle),
        .O(remove_idle_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000040000000)) 
    remove_idle_i_2
       (.I0(remove_idle_i_4_n_0),
        .I1(remove_idle_i_5_n_0),
        .I2(k28p5_wr_reg),
        .I3(d16p2_wr_reg),
        .I4(wr_occupancy[5]),
        .I5(remove_idle_i_6_n_0),
        .O(remove_idle_i_2_n_0));
  LUT4 #(
    .INIT(16'hFFFD)) 
    remove_idle_i_3
       (.I0(\wr_data_reg_n_0_[20] ),
        .I1(\wr_data_reg_n_0_[17] ),
        .I2(\wr_data_reg_n_0_[16] ),
        .I3(k28p5_wr_reg_i_2_n_0),
        .O(remove_idle_i_3_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEFFFFFF)) 
    remove_idle_i_4
       (.I0(p_0_in),
        .I1(\wr_data_reg_n_0_[5] ),
        .I2(\wr_data_reg_n_0_[0] ),
        .I3(\wr_data_reg_n_0_[6] ),
        .I4(\wr_data_reg_n_0_[4] ),
        .I5(\wr_data_reg_n_0_[1] ),
        .O(remove_idle_i_4_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    remove_idle_i_5
       (.I0(\wr_data_reg_n_0_[7] ),
        .I1(\wr_data_reg_n_0_[2] ),
        .I2(\wr_data_reg_n_0_[3] ),
        .O(remove_idle_i_5_n_0));
  LUT4 #(
    .INIT(16'h0001)) 
    remove_idle_i_6
       (.I0(wr_occupancy[1]),
        .I1(wr_occupancy[2]),
        .I2(wr_occupancy[4]),
        .I3(wr_occupancy[3]),
        .O(remove_idle_i_6_n_0));
  FDRE #(
    .INIT(1'b0)) 
    remove_idle_reg
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(remove_idle_i_1_n_0),
        .Q(remove_idle),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    remove_idle_reg1_reg
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(remove_idle),
        .Q(remove_idle_reg1),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    remove_idle_reg2_reg
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(remove_idle_reg1),
        .Q(remove_idle_reg2),
        .R(reset_out));
  LUT3 #(
    .INIT(8'h3A)) 
    reset_modified_i_1
       (.I0(mgt_rx_reset),
        .I1(initialize_ram_complete_sync_ris_edg),
        .I2(reset_modified),
        .O(reset_modified_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    reset_modified_reg
       (.C(CLK),
        .CE(1'b1),
        .D(reset_modified_i_1_n_0),
        .Q(reset_modified),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    rxbuferr_i_1
       (.I0(rxbuferr0),
        .I1(rxbufstatus),
        .O(rxbuferr_i_1_n_0));
  LUT6 #(
    .INIT(64'hE000000000000007)) 
    rxbuferr_i_2
       (.I0(rd_occupancy[0]),
        .I1(rd_occupancy[1]),
        .I2(rd_occupancy[5]),
        .I3(rd_occupancy[4]),
        .I4(rd_occupancy[3]),
        .I5(rd_occupancy[2]),
        .O(rxbuferr0));
  FDRE #(
    .INIT(1'b0)) 
    rxbuferr_reg
       (.C(CLK),
        .CE(1'b1),
        .D(rxbuferr_i_1_n_0),
        .Q(rxbufstatus),
        .R(reset_modified));
  (* \PinAttr:I2:HOLD_DETOUR  = "188" *) 
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    rxchariscomma_usr_i_1
       (.I0(rd_data_reg[28]),
        .I1(even),
        .I2(rd_data_reg[12]),
        .O(rxchariscomma_usr_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rxchariscomma_usr_reg
       (.C(CLK),
        .CE(1'b1),
        .D(rxchariscomma_usr_i_1_n_0),
        .Q(rxchariscomma),
        .R(reset_modified));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    rxcharisk_usr_i_1
       (.I0(rd_data_reg[27]),
        .I1(even),
        .I2(rd_data_reg[11]),
        .O(rxcharisk_usr_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rxcharisk_usr_reg
       (.C(CLK),
        .CE(1'b1),
        .D(rxcharisk_usr_i_1_n_0),
        .Q(rxcharisk),
        .R(reset_modified));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rxdata_usr[0]_i_1 
       (.I0(rd_data_reg[16]),
        .I1(even),
        .I2(rd_data_reg[0]),
        .O(\rxdata_usr[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rxdata_usr[1]_i_1 
       (.I0(rd_data_reg[17]),
        .I1(even),
        .I2(rd_data_reg[1]),
        .O(\rxdata_usr[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rxdata_usr[2]_i_1 
       (.I0(rd_data_reg[18]),
        .I1(even),
        .I2(rd_data_reg[2]),
        .O(\rxdata_usr[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rxdata_usr[3]_i_1 
       (.I0(rd_data_reg[19]),
        .I1(even),
        .I2(rd_data_reg[3]),
        .O(\rxdata_usr[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rxdata_usr[4]_i_1 
       (.I0(rd_data_reg[20]),
        .I1(even),
        .I2(rd_data_reg[4]),
        .O(\rxdata_usr[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rxdata_usr[5]_i_1 
       (.I0(rd_data_reg[21]),
        .I1(even),
        .I2(rd_data_reg[5]),
        .O(\rxdata_usr[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rxdata_usr[6]_i_1 
       (.I0(rd_data_reg[22]),
        .I1(even),
        .I2(rd_data_reg[6]),
        .O(\rxdata_usr[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rxdata_usr[7]_i_1 
       (.I0(rd_data_reg[23]),
        .I1(even),
        .I2(rd_data_reg[7]),
        .O(\rxdata_usr[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rxdata_usr_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\rxdata_usr[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rxdata_usr_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\rxdata_usr[1]_i_1_n_0 ),
        .Q(Q[1]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rxdata_usr_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(\rxdata_usr[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rxdata_usr_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(\rxdata_usr[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rxdata_usr_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(\rxdata_usr[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rxdata_usr_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(\rxdata_usr[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rxdata_usr_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(\rxdata_usr[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b0)) 
    \rxdata_usr_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(\rxdata_usr[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(reset_modified));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    rxdisperr_usr_i_1
       (.I0(rd_data_reg[26]),
        .I1(even),
        .I2(rd_data_reg[10]),
        .O(rxdisperr_usr_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rxdisperr_usr_reg
       (.C(CLK),
        .CE(1'b1),
        .D(rxdisperr_usr_i_1_n_0),
        .Q(rxdisperr),
        .R(reset_modified));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    rxnotintable_usr_i_1
       (.I0(rd_data_reg[25]),
        .I1(even),
        .I2(rd_data_reg[9]),
        .O(rxnotintable_usr_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rxnotintable_usr_reg
       (.C(CLK),
        .CE(1'b1),
        .D(rxnotintable_usr_i_1_n_0),
        .Q(rxnotintable),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b1)) 
    start_reg
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(1'b0),
        .Q(start),
        .R(1'b0));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_17 sync_initialize_ram_comp
       (.CLK(CLK),
        .data_in(initialize_ram_complete),
        .data_out(initialize_ram_complete_sync),
        .initialize_ram_complete_sync_reg1(initialize_ram_complete_sync_reg1),
        .initialize_ram_complete_sync_ris_edg0(initialize_ram_complete_sync_ris_edg0));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT4 #(
    .INIT(16'hFBF8)) 
    \wr_addr[5]_i_1 
       (.I0(wr_addr_plus1[5]),
        .I1(wr_enable),
        .I2(initialize_ram_complete_pulse),
        .I3(wr_addr[5]),
        .O(\wr_addr[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \wr_addr_gray[1]_i_1 
       (.I0(p_1_in23_in),
        .I1(p_2_in24_in),
        .O(p_5_out[1]));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_addr_gray[2]_i_1 
       (.I0(p_2_in24_in),
        .I1(p_3_in26_in),
        .O(p_5_out[2]));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_addr_gray[3]_i_1 
       (.I0(p_3_in26_in),
        .I1(p_4_in28_in),
        .O(p_5_out[3]));
  LUT2 #(
    .INIT(4'h6)) 
    \wr_addr_gray[4]_i_1 
       (.I0(p_4_in28_in),
        .I1(\wr_addr_plus2_reg_n_0_[5] ),
        .O(p_5_out[4]));
  FDSE #(
    .INIT(1'b1)) 
    \wr_addr_gray_reg[0] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(\wr_addr_plus2[1]_i_1_n_0 ),
        .Q(wr_addr_gray[0]),
        .S(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_gray_reg[1] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(p_5_out[1]),
        .Q(wr_addr_gray[1]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_gray_reg[2] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(p_5_out[2]),
        .Q(wr_addr_gray[2]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_gray_reg[3] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(p_5_out[3]),
        .Q(wr_addr_gray[3]),
        .R(reset_out));
  FDSE #(
    .INIT(1'b1)) 
    \wr_addr_gray_reg[4] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(p_5_out[4]),
        .Q(wr_addr_gray[4]),
        .S(reset_out));
  FDSE #(
    .INIT(1'b1)) 
    \wr_addr_gray_reg[5] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(\wr_addr_plus2_reg_n_0_[5] ),
        .Q(wr_addr_gray[5]),
        .S(reset_out));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT4 #(
    .INIT(16'hFBF8)) 
    \wr_addr_plus1[5]_i_1 
       (.I0(\wr_addr_plus2_reg_n_0_[5] ),
        .I1(wr_enable),
        .I2(initialize_ram_complete_pulse),
        .I3(wr_addr_plus1[5]),
        .O(\wr_addr_plus1[5]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \wr_addr_plus1_reg[0] 
       (.C(rxuserclk2),
        .CE(wr_enable),
        .D(\wr_addr_plus2_reg_n_0_[0] ),
        .Q(wr_addr_plus1[0]),
        .S(SR));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_plus1_reg[1] 
       (.C(rxuserclk2),
        .CE(wr_enable),
        .D(p_1_in23_in),
        .Q(wr_addr_plus1[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_plus1_reg[2] 
       (.C(rxuserclk2),
        .CE(wr_enable),
        .D(p_2_in24_in),
        .Q(wr_addr_plus1[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_plus1_reg[3] 
       (.C(rxuserclk2),
        .CE(wr_enable),
        .D(p_3_in26_in),
        .Q(wr_addr_plus1[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_plus1_reg[4] 
       (.C(rxuserclk2),
        .CE(wr_enable),
        .D(p_4_in28_in),
        .Q(wr_addr_plus1[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_plus1_reg[5] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(\wr_addr_plus1[5]_i_1_n_0 ),
        .Q(wr_addr_plus1[5]),
        .R(reset_out));
  LUT1 #(
    .INIT(2'h1)) 
    \wr_addr_plus2[0]_i_1 
       (.I0(\wr_addr_plus2_reg_n_0_[0] ),
        .O(\wr_addr_plus2[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \wr_addr_plus2[1]_i_1 
       (.I0(\wr_addr_plus2_reg_n_0_[0] ),
        .I1(p_1_in23_in),
        .O(\wr_addr_plus2[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wr_addr_plus2[2]_i_1 
       (.I0(\wr_addr_plus2_reg_n_0_[0] ),
        .I1(p_1_in23_in),
        .I2(p_2_in24_in),
        .O(\wr_addr_plus2[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wr_addr_plus2[3]_i_1 
       (.I0(p_1_in23_in),
        .I1(\wr_addr_plus2_reg_n_0_[0] ),
        .I2(p_2_in24_in),
        .I3(p_3_in26_in),
        .O(\wr_addr_plus2[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \wr_addr_plus2[4]_i_1 
       (.I0(p_2_in24_in),
        .I1(\wr_addr_plus2_reg_n_0_[0] ),
        .I2(p_1_in23_in),
        .I3(p_3_in26_in),
        .I4(p_4_in28_in),
        .O(\wr_addr_plus2[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFF7FFF80)) 
    \wr_addr_plus2[5]_i_1 
       (.I0(p_4_in28_in),
        .I1(\wr_addr_plus2[5]_i_2_n_0 ),
        .I2(wr_enable),
        .I3(initialize_ram_complete_pulse),
        .I4(\wr_addr_plus2_reg_n_0_[5] ),
        .O(\wr_addr_plus2[5]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \wr_addr_plus2[5]_i_2 
       (.I0(p_3_in26_in),
        .I1(p_1_in23_in),
        .I2(\wr_addr_plus2_reg_n_0_[0] ),
        .I3(p_2_in24_in),
        .O(\wr_addr_plus2[5]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_plus2_reg[0] 
       (.C(rxuserclk2),
        .CE(wr_enable),
        .D(\wr_addr_plus2[0]_i_1_n_0 ),
        .Q(\wr_addr_plus2_reg_n_0_[0] ),
        .R(SR));
  FDSE #(
    .INIT(1'b1)) 
    \wr_addr_plus2_reg[1] 
       (.C(rxuserclk2),
        .CE(wr_enable),
        .D(\wr_addr_plus2[1]_i_1_n_0 ),
        .Q(p_1_in23_in),
        .S(SR));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_plus2_reg[2] 
       (.C(rxuserclk2),
        .CE(wr_enable),
        .D(\wr_addr_plus2[2]_i_1_n_0 ),
        .Q(p_2_in24_in),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_plus2_reg[3] 
       (.C(rxuserclk2),
        .CE(wr_enable),
        .D(\wr_addr_plus2[3]_i_1_n_0 ),
        .Q(p_3_in26_in),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_plus2_reg[4] 
       (.C(rxuserclk2),
        .CE(wr_enable),
        .D(\wr_addr_plus2[4]_i_1_n_0 ),
        .Q(p_4_in28_in),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_plus2_reg[5] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(\wr_addr_plus2[5]_i_1_n_0 ),
        .Q(\wr_addr_plus2_reg_n_0_[5] ),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_reg[0] 
       (.C(rxuserclk2),
        .CE(wr_enable),
        .D(wr_addr_plus1[0]),
        .Q(wr_addr[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_reg[1] 
       (.C(rxuserclk2),
        .CE(wr_enable),
        .D(wr_addr_plus1[1]),
        .Q(wr_addr[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_reg[2] 
       (.C(rxuserclk2),
        .CE(wr_enable),
        .D(wr_addr_plus1[2]),
        .Q(wr_addr[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_reg[3] 
       (.C(rxuserclk2),
        .CE(wr_enable),
        .D(wr_addr_plus1[3]),
        .Q(wr_addr[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_reg[4] 
       (.C(rxuserclk2),
        .CE(wr_enable),
        .D(wr_addr_plus1[4]),
        .Q(wr_addr[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_reg[5] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(\wr_addr[5]_i_1_n_0 ),
        .Q(wr_addr[5]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg[0] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[0]),
        .Q(\wr_data_reg_n_0_[0] ),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg[10] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[9]),
        .Q(\wr_data_reg_n_0_[10] ),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg[11] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[10]),
        .Q(p_0_in),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg[12] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[11]),
        .Q(\wr_data_reg_n_0_[12] ),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg[16] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[12]),
        .Q(\wr_data_reg_n_0_[16] ),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg[17] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[13]),
        .Q(\wr_data_reg_n_0_[17] ),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg[18] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[14]),
        .Q(\wr_data_reg_n_0_[18] ),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg[19] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[15]),
        .Q(\wr_data_reg_n_0_[19] ),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg[1] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[1]),
        .Q(\wr_data_reg_n_0_[1] ),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg[20] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[16]),
        .Q(\wr_data_reg_n_0_[20] ),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg[21] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[17]),
        .Q(\wr_data_reg_n_0_[21] ),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg[22] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[18]),
        .Q(\wr_data_reg_n_0_[22] ),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg[23] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[19]),
        .Q(\wr_data_reg_n_0_[23] ),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg[25] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[20]),
        .Q(\wr_data_reg_n_0_[25] ),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg[26] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[21]),
        .Q(\wr_data_reg_n_0_[26] ),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg[27] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[22]),
        .Q(\wr_data_reg_n_0_[27] ),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg[28] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[23]),
        .Q(\wr_data_reg_n_0_[28] ),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg[2] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[2]),
        .Q(\wr_data_reg_n_0_[2] ),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg[3] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[3]),
        .Q(\wr_data_reg_n_0_[3] ),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg[4] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[4]),
        .Q(\wr_data_reg_n_0_[4] ),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg[5] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[5]),
        .Q(\wr_data_reg_n_0_[5] ),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg[6] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[6]),
        .Q(\wr_data_reg_n_0_[6] ),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg[7] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[7]),
        .Q(\wr_data_reg_n_0_[7] ),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg[9] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[8]),
        .Q(\wr_data_reg_n_0_[9] ),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg_reg[0] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(\wr_data_reg_n_0_[0] ),
        .Q(wr_data_reg[0]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg_reg[10] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(\wr_data_reg_n_0_[10] ),
        .Q(wr_data_reg[10]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg_reg[11] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(p_0_in),
        .Q(wr_data_reg[11]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg_reg[12] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(\wr_data_reg_n_0_[12] ),
        .Q(wr_data_reg[12]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg_reg[13] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(remove_idle),
        .Q(wr_data_reg[13]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg_reg[16] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(\wr_data_reg_n_0_[16] ),
        .Q(wr_data_reg[16]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg_reg[17] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(\wr_data_reg_n_0_[17] ),
        .Q(wr_data_reg[17]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg_reg[18] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(\wr_data_reg_n_0_[18] ),
        .Q(wr_data_reg[18]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg_reg[19] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(\wr_data_reg_n_0_[19] ),
        .Q(wr_data_reg[19]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg_reg[1] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(\wr_data_reg_n_0_[1] ),
        .Q(wr_data_reg[1]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg_reg[20] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(\wr_data_reg_n_0_[20] ),
        .Q(wr_data_reg[20]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg_reg[21] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(\wr_data_reg_n_0_[21] ),
        .Q(wr_data_reg[21]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg_reg[22] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(\wr_data_reg_n_0_[22] ),
        .Q(wr_data_reg[22]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg_reg[23] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(\wr_data_reg_n_0_[23] ),
        .Q(wr_data_reg[23]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg_reg[25] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(\wr_data_reg_n_0_[25] ),
        .Q(wr_data_reg[25]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg_reg[26] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(\wr_data_reg_n_0_[26] ),
        .Q(wr_data_reg[26]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg_reg[27] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(\wr_data_reg_n_0_[27] ),
        .Q(wr_data_reg[27]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg_reg[28] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(\wr_data_reg_n_0_[28] ),
        .Q(wr_data_reg[28]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg_reg[2] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(\wr_data_reg_n_0_[2] ),
        .Q(wr_data_reg[2]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg_reg[3] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(\wr_data_reg_n_0_[3] ),
        .Q(wr_data_reg[3]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg_reg[4] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(\wr_data_reg_n_0_[4] ),
        .Q(wr_data_reg[4]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg_reg[5] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(\wr_data_reg_n_0_[5] ),
        .Q(wr_data_reg[5]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg_reg[6] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(\wr_data_reg_n_0_[6] ),
        .Q(wr_data_reg[6]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg_reg[7] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(\wr_data_reg_n_0_[7] ),
        .Q(wr_data_reg[7]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_reg_reg[9] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(\wr_data_reg_n_0_[9] ),
        .Q(wr_data_reg[9]),
        .R(\wr_data_reg_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hFDFFFDFFDDDDFDFF)) 
    wr_enable_i_1
       (.I0(initialize_ram_complete),
        .I1(wr_enable_i_2_n_0),
        .I2(wr_enable_i_3_n_0),
        .I3(p_13_in),
        .I4(wr_enable_i_4_n_0),
        .I5(wr_enable_i_5_n_0),
        .O(wr_enable_i_1_n_0));
  LUT5 #(
    .INIT(32'hFFFEFFFF)) 
    wr_enable_i_2
       (.I0(remove_idle),
        .I1(k28p5_wr_reg_i_2_n_0),
        .I2(\wr_data_reg_n_0_[16] ),
        .I3(\wr_data_reg_n_0_[17] ),
        .I4(\wr_data_reg_n_0_[20] ),
        .O(wr_enable_i_2_n_0));
  LUT6 #(
    .INIT(64'h10FFFFFFFFFFFFFF)) 
    wr_enable_i_3
       (.I0(wr_occupancy[3]),
        .I1(wr_occupancy[4]),
        .I2(wr_enable_i_6_n_0),
        .I3(wr_occupancy[5]),
        .I4(d16p2_wr_reg),
        .I5(k28p5_wr_reg),
        .O(wr_enable_i_3_n_0));
  LUT6 #(
    .INIT(64'h00000011000F0011)) 
    wr_enable_i_4
       (.I0(wr_enable_i_7_n_0),
        .I1(\wr_data_reg_n_0_[2] ),
        .I2(d21p5_wr_reg_i_2_n_0),
        .I3(\wr_data_reg_n_0_[3] ),
        .I4(\wr_data_reg_n_0_[7] ),
        .I5(p_0_in),
        .O(wr_enable_i_4_n_0));
  LUT5 #(
    .INIT(32'hEFFFFFFF)) 
    wr_enable_i_5
       (.I0(wr_enable_i_8_n_0),
        .I1(wr_enable_i_9_n_0),
        .I2(wr_occupancy[5]),
        .I3(wr_occupancy[4]),
        .I4(k28p5_wr_reg2),
        .O(wr_enable_i_5_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    wr_enable_i_6
       (.I0(wr_occupancy[2]),
        .I1(wr_occupancy[1]),
        .O(wr_enable_i_6_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEFFFFFF)) 
    wr_enable_i_7
       (.I0(p_0_in),
        .I1(\wr_data_reg_n_0_[5] ),
        .I2(\wr_data_reg_n_0_[0] ),
        .I3(\wr_data_reg_n_0_[6] ),
        .I4(\wr_data_reg_n_0_[1] ),
        .I5(\wr_data_reg_n_0_[4] ),
        .O(wr_enable_i_7_n_0));
  LUT4 #(
    .INIT(16'h0001)) 
    wr_enable_i_8
       (.I0(wr_occupancy[1]),
        .I1(wr_occupancy[2]),
        .I2(wr_occupancy[3]),
        .I3(wr_occupancy[0]),
        .O(wr_enable_i_8_n_0));
  LUT4 #(
    .INIT(16'hFFF1)) 
    wr_enable_i_9
       (.I0(d21p5_wr_reg2),
        .I1(d2p2_wr_reg2),
        .I2(remove_idle_reg1),
        .I3(remove_idle_reg2),
        .O(wr_enable_i_9_n_0));
  FDRE #(
    .INIT(1'b0)) 
    wr_enable_reg
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(wr_enable_i_1_n_0),
        .Q(wr_enable),
        .R(reset_out));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 wr_occupancy0_carry
       (.CI(1'b0),
        .CO({wr_occupancy0_carry_n_0,NLW_wr_occupancy0_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI(wr_addr[3:0]),
        .O(wr_occupancy00_out[3:0]),
        .S({\reclock_rd_addrgray[4].sync_rd_addrgray_n_0 ,\reclock_rd_addrgray[3].sync_rd_addrgray_n_0 ,\reclock_rd_addrgray[2].sync_rd_addrgray_n_0 ,\reclock_rd_addrgray[1].sync_rd_addrgray_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 wr_occupancy0_carry__0
       (.CI(wr_occupancy0_carry_n_0),
        .CO(NLW_wr_occupancy0_carry__0_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,wr_addr[4]}),
        .O({NLW_wr_occupancy0_carry__0_O_UNCONNECTED[3:2],wr_occupancy00_out[5:4]}),
        .S({1'b0,1'b0,\reclock_rd_addrgray[5].sync_rd_addrgray_n_0 ,\reclock_rd_addrgray[5].sync_rd_addrgray_n_1 }));
  FDRE #(
    .INIT(1'b0)) 
    \wr_occupancy_reg[0] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(wr_occupancy00_out[0]),
        .Q(wr_occupancy[0]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_occupancy_reg[1] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(wr_occupancy00_out[1]),
        .Q(wr_occupancy[1]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_occupancy_reg[2] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(wr_occupancy00_out[2]),
        .Q(wr_occupancy[2]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_occupancy_reg[3] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(wr_occupancy00_out[3]),
        .Q(wr_occupancy[3]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_occupancy_reg[4] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(wr_occupancy00_out[4]),
        .Q(wr_occupancy[4]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \wr_occupancy_reg[5] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(wr_occupancy00_out[5]),
        .Q(wr_occupancy[5]),
        .S(\wr_data_reg_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_rx_rate_adapt" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_rx_rate_adapt
   (gmii_rx_dv_out_reg_0,
    gmii_rx_er_out_reg_0,
    gmii_rxd,
    reset_out,
    gmii_rx_er_out_reg_1,
    gmii_rx_dv,
    CLK,
    gmii_rx_er,
    D);
  output gmii_rx_dv_out_reg_0;
  output gmii_rx_er_out_reg_0;
  output [7:0]gmii_rxd;
  input reset_out;
  input gmii_rx_er_out_reg_1;
  input gmii_rx_dv;
  input CLK;
  input gmii_rx_er;
  input [7:0]D;

  wire CLK;
  wire [7:0]D;
  wire gmii_rx_dv;
  wire gmii_rx_dv_out_reg_0;
  wire gmii_rx_er;
  wire gmii_rx_er_out_reg_0;
  wire gmii_rx_er_out_reg_1;
  wire [7:0]gmii_rxd;
  wire muxsel;
  wire muxsel_i_1_n_0;
  wire [3:0]p_0_in;
  wire reset_out;
  wire rx_dv_aligned;
  wire rx_dv_aligned_i_1_n_0;
  wire rx_dv_reg1;
  wire rx_dv_reg2;
  wire rx_er_aligned;
  wire rx_er_aligned_0;
  wire rx_er_reg1;
  wire rx_er_reg2;
  wire [7:0]rxd_aligned;
  wire \rxd_aligned[0]_i_1_n_0 ;
  wire \rxd_aligned[1]_i_1_n_0 ;
  wire \rxd_aligned[2]_i_1_n_0 ;
  wire \rxd_aligned[3]_i_1_n_0 ;
  wire \rxd_aligned[4]_i_1_n_0 ;
  wire \rxd_aligned[5]_i_1_n_0 ;
  wire \rxd_aligned[6]_i_1_n_0 ;
  wire \rxd_aligned[7]_i_1_n_0 ;
  wire \rxd_reg1_reg_n_0_[0] ;
  wire \rxd_reg1_reg_n_0_[1] ;
  wire \rxd_reg1_reg_n_0_[2] ;
  wire \rxd_reg1_reg_n_0_[3] ;
  wire [7:0]rxd_reg2;
  wire sfd_enable;
  wire sfd_enable0;
  wire sfd_enable_i_1_n_0;
  wire sfd_enable_i_2_n_0;
  wire sfd_enable_i_4_n_0;
  wire sfd_enable_i_5_n_0;

  FDRE #(
    .INIT(1'b0)) 
    gmii_rx_dv_out_reg
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(rx_dv_aligned),
        .Q(gmii_rx_dv_out_reg_0),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    gmii_rx_er_out_reg
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(rx_er_aligned),
        .Q(gmii_rx_er_out_reg_0),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \gmii_rxd_out_reg[0] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(rxd_aligned[0]),
        .Q(gmii_rxd[0]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \gmii_rxd_out_reg[1] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(rxd_aligned[1]),
        .Q(gmii_rxd[1]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \gmii_rxd_out_reg[2] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(rxd_aligned[2]),
        .Q(gmii_rxd[2]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \gmii_rxd_out_reg[3] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(rxd_aligned[3]),
        .Q(gmii_rxd[3]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \gmii_rxd_out_reg[4] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(rxd_aligned[4]),
        .Q(gmii_rxd[4]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \gmii_rxd_out_reg[5] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(rxd_aligned[5]),
        .Q(gmii_rxd[5]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \gmii_rxd_out_reg[6] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(rxd_aligned[6]),
        .Q(gmii_rxd[6]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \gmii_rxd_out_reg[7] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(rxd_aligned[7]),
        .Q(gmii_rxd[7]),
        .R(reset_out));
  LUT6 #(
    .INIT(64'h00000000CCCCA8CC)) 
    muxsel_i_1
       (.I0(sfd_enable_i_5_n_0),
        .I1(muxsel),
        .I2(sfd_enable_i_2_n_0),
        .I3(sfd_enable),
        .I4(sfd_enable_i_4_n_0),
        .I5(reset_out),
        .O(muxsel_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    muxsel_reg
       (.C(CLK),
        .CE(1'b1),
        .D(muxsel_i_1_n_0),
        .Q(muxsel),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB0)) 
    rx_dv_aligned_i_1
       (.I0(rx_dv_reg1),
        .I1(muxsel),
        .I2(rx_dv_reg2),
        .O(rx_dv_aligned_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rx_dv_aligned_reg
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(rx_dv_aligned_i_1_n_0),
        .Q(rx_dv_aligned),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    rx_dv_reg1_reg
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(gmii_rx_dv),
        .Q(rx_dv_reg1),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    rx_dv_reg2_reg
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(rx_dv_reg1),
        .Q(rx_dv_reg2),
        .R(reset_out));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    rx_er_aligned_i_1
       (.I0(muxsel),
        .I1(rx_er_reg1),
        .I2(rx_er_reg2),
        .O(rx_er_aligned_0));
  FDRE #(
    .INIT(1'b0)) 
    rx_er_aligned_reg
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(rx_er_aligned_0),
        .Q(rx_er_aligned),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    rx_er_reg1_reg
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(gmii_rx_er),
        .Q(rx_er_reg1),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    rx_er_reg2_reg
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(rx_er_reg1),
        .Q(rx_er_reg2),
        .R(reset_out));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rxd_aligned[0]_i_1 
       (.I0(rxd_reg2[4]),
        .I1(muxsel),
        .I2(rxd_reg2[0]),
        .O(\rxd_aligned[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rxd_aligned[1]_i_1 
       (.I0(rxd_reg2[5]),
        .I1(muxsel),
        .I2(rxd_reg2[1]),
        .O(\rxd_aligned[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rxd_aligned[2]_i_1 
       (.I0(rxd_reg2[6]),
        .I1(muxsel),
        .I2(rxd_reg2[2]),
        .O(\rxd_aligned[2]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \rxd_aligned[3]_i_1 
       (.I0(rxd_reg2[7]),
        .I1(muxsel),
        .I2(rxd_reg2[3]),
        .O(\rxd_aligned[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rxd_aligned[4]_i_1 
       (.I0(\rxd_reg1_reg_n_0_[0] ),
        .I1(muxsel),
        .I2(rxd_reg2[4]),
        .O(\rxd_aligned[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rxd_aligned[5]_i_1 
       (.I0(\rxd_reg1_reg_n_0_[1] ),
        .I1(muxsel),
        .I2(rxd_reg2[5]),
        .O(\rxd_aligned[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rxd_aligned[6]_i_1 
       (.I0(\rxd_reg1_reg_n_0_[2] ),
        .I1(muxsel),
        .I2(rxd_reg2[6]),
        .O(\rxd_aligned[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rxd_aligned[7]_i_1 
       (.I0(\rxd_reg1_reg_n_0_[3] ),
        .I1(muxsel),
        .I2(rxd_reg2[7]),
        .O(\rxd_aligned[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_aligned_reg[0] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(\rxd_aligned[0]_i_1_n_0 ),
        .Q(rxd_aligned[0]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_aligned_reg[1] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(\rxd_aligned[1]_i_1_n_0 ),
        .Q(rxd_aligned[1]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_aligned_reg[2] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(\rxd_aligned[2]_i_1_n_0 ),
        .Q(rxd_aligned[2]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_aligned_reg[3] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(\rxd_aligned[3]_i_1_n_0 ),
        .Q(rxd_aligned[3]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_aligned_reg[4] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(\rxd_aligned[4]_i_1_n_0 ),
        .Q(rxd_aligned[4]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_aligned_reg[5] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(\rxd_aligned[5]_i_1_n_0 ),
        .Q(rxd_aligned[5]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_aligned_reg[6] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(\rxd_aligned[6]_i_1_n_0 ),
        .Q(rxd_aligned[6]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_aligned_reg[7] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(\rxd_aligned[7]_i_1_n_0 ),
        .Q(rxd_aligned[7]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_reg1_reg[0] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(D[0]),
        .Q(\rxd_reg1_reg_n_0_[0] ),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_reg1_reg[1] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(D[1]),
        .Q(\rxd_reg1_reg_n_0_[1] ),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_reg1_reg[2] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(D[2]),
        .Q(\rxd_reg1_reg_n_0_[2] ),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_reg1_reg[3] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(D[3]),
        .Q(\rxd_reg1_reg_n_0_[3] ),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_reg1_reg[4] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(D[4]),
        .Q(p_0_in[0]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_reg1_reg[5] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(D[5]),
        .Q(p_0_in[1]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_reg1_reg[6] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(D[6]),
        .Q(p_0_in[2]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_reg1_reg[7] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(D[7]),
        .Q(p_0_in[3]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_reg2_reg[0] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(\rxd_reg1_reg_n_0_[0] ),
        .Q(rxd_reg2[0]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_reg2_reg[1] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(\rxd_reg1_reg_n_0_[1] ),
        .Q(rxd_reg2[1]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_reg2_reg[2] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(\rxd_reg1_reg_n_0_[2] ),
        .Q(rxd_reg2[2]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_reg2_reg[3] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(\rxd_reg1_reg_n_0_[3] ),
        .Q(rxd_reg2[3]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_reg2_reg[4] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(p_0_in[0]),
        .Q(rxd_reg2[4]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_reg2_reg[5] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(p_0_in[1]),
        .Q(rxd_reg2[5]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_reg2_reg[6] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(p_0_in[2]),
        .Q(rxd_reg2[6]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_reg2_reg[7] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(p_0_in[3]),
        .Q(rxd_reg2[7]),
        .R(reset_out));
  LUT6 #(
    .INIT(64'hFFDDFFCCC0C8C0CC)) 
    sfd_enable_i_1
       (.I0(sfd_enable_i_2_n_0),
        .I1(sfd_enable0),
        .I2(gmii_rx_er_out_reg_1),
        .I3(sfd_enable_i_4_n_0),
        .I4(sfd_enable_i_5_n_0),
        .I5(sfd_enable),
        .O(sfd_enable_i_1_n_0));
  LUT5 #(
    .INIT(32'h04000000)) 
    sfd_enable_i_2
       (.I0(p_0_in[3]),
        .I1(D[0]),
        .I2(D[1]),
        .I3(D[3]),
        .I4(D[2]),
        .O(sfd_enable_i_2_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    sfd_enable_i_3
       (.I0(gmii_rx_dv),
        .I1(rx_dv_reg1),
        .O(sfd_enable0));
  LUT4 #(
    .INIT(16'hDFFF)) 
    sfd_enable_i_4
       (.I0(p_0_in[0]),
        .I1(p_0_in[1]),
        .I2(gmii_rx_er_out_reg_1),
        .I3(p_0_in[2]),
        .O(sfd_enable_i_4_n_0));
  LUT5 #(
    .INIT(32'hFFFFDFFF)) 
    sfd_enable_i_5
       (.I0(\rxd_reg1_reg_n_0_[0] ),
        .I1(\rxd_reg1_reg_n_0_[3] ),
        .I2(p_0_in[3]),
        .I3(\rxd_reg1_reg_n_0_[2] ),
        .I4(\rxd_reg1_reg_n_0_[1] ),
        .O(sfd_enable_i_5_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sfd_enable_reg
       (.C(CLK),
        .CE(1'b1),
        .D(sfd_enable_i_1_n_0),
        .Q(sfd_enable),
        .R(reset_out));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_sgmii_adapt" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sgmii_adapt
   (sgmii_clk_r,
    sgmii_clk_en_reg,
    gmii_rx_dv_out_reg,
    gmii_rx_er_out_reg,
    gmii_tx_en,
    gmii_tx_er,
    sgmii_clk_f,
    gmii_rxd,
    Q,
    CLK,
    gmii_rx_dv,
    gmii_rx_er,
    gmii_tx_en_out_reg,
    gmii_tx_er_out_reg,
    SR,
    speed_is_10_100,
    speed_is_100,
    D,
    gmii_txd);
  output sgmii_clk_r;
  output sgmii_clk_en_reg;
  output gmii_rx_dv_out_reg;
  output gmii_rx_er_out_reg;
  output gmii_tx_en;
  output gmii_tx_er;
  output sgmii_clk_f;
  output [7:0]gmii_rxd;
  output [7:0]Q;
  input CLK;
  input gmii_rx_dv;
  input gmii_rx_er;
  input gmii_tx_en_out_reg;
  input gmii_tx_er_out_reg;
  input [0:0]SR;
  input speed_is_10_100;
  input speed_is_100;
  input [7:0]D;
  input [7:0]gmii_txd;

  wire CLK;
  wire [7:0]D;
  wire [7:0]Q;
  wire [0:0]SR;
  wire gmii_rx_dv;
  wire gmii_rx_dv_out_reg;
  wire gmii_rx_er;
  wire gmii_rx_er_out_reg;
  wire [7:0]gmii_rxd;
  wire gmii_tx_en;
  wire gmii_tx_en_out_reg;
  wire gmii_tx_er;
  wire gmii_tx_er_out_reg;
  wire [7:0]gmii_txd;
  wire \^sgmii_clk_en_reg ;
  wire speed_is_100;
  wire speed_is_100_resync;
  wire speed_is_10_100;
  wire speed_is_10_100_resync;
  wire sync_reset;
  wire NLW_clock_generation_sgmii_clk_f_UNCONNECTED;
  wire NLW_clock_generation_sgmii_clk_r_UNCONNECTED;

  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_clk_gen clock_generation
       (.CLK(CLK),
        .data_out(speed_is_100_resync),
        .reset_out(sync_reset),
        .sgmii_clk_en_reg_0(\^sgmii_clk_en_reg ),
        .sgmii_clk_f(NLW_clock_generation_sgmii_clk_f_UNCONNECTED),
        .sgmii_clk_r(NLW_clock_generation_sgmii_clk_r_UNCONNECTED),
        .speed_is_10_100_fall_reg_0(speed_is_10_100_resync));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_reset_sync_34 gen_sync_reset
       (.CLK(CLK),
        .SR(SR),
        .reset_out(sync_reset));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_rx_rate_adapt receiver
       (.CLK(CLK),
        .D(D),
        .gmii_rx_dv(gmii_rx_dv),
        .gmii_rx_dv_out_reg_0(gmii_rx_dv_out_reg),
        .gmii_rx_er(gmii_rx_er),
        .gmii_rx_er_out_reg_0(gmii_rx_er_out_reg),
        .gmii_rx_er_out_reg_1(\^sgmii_clk_en_reg ),
        .gmii_rxd(gmii_rxd),
        .reset_out(sync_reset));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_35 resync_speed_100
       (.CLK(CLK),
        .data_out(speed_is_100_resync),
        .speed_is_100(speed_is_100));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_36 resync_speed_10_100
       (.CLK(CLK),
        .data_out(speed_is_10_100_resync),
        .speed_is_10_100(speed_is_10_100));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_tx_rate_adapt transmitter
       (.CLK(CLK),
        .E(\^sgmii_clk_en_reg ),
        .Q(Q),
        .gmii_tx_en(gmii_tx_en),
        .gmii_tx_en_out_reg_0(gmii_tx_en_out_reg),
        .gmii_tx_er(gmii_tx_er),
        .gmii_tx_er_out_reg_0(gmii_tx_er_out_reg),
        .gmii_txd(gmii_txd),
        .reset_out(sync_reset));
endmodule

(* DowngradeIPIdentifiedWarnings = "yes" *) (* EXAMPLE_SIMULATION = "0" *) (* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_support" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_support
   (gtrefclk_p,
    gtrefclk_n,
    gtrefclk_out,
    gtrefclk_bufg_out,
    txp,
    txn,
    rxp,
    rxn,
    userclk_out,
    userclk2_out,
    rxuserclk_out,
    rxuserclk2_out,
    independent_clock_bufg,
    pma_reset_out,
    mmcm_locked_out,
    resetdone,
    sgmii_clk_r,
    sgmii_clk_f,
    sgmii_clk_en,
    gmii_txd,
    gmii_tx_en,
    gmii_tx_er,
    gmii_rxd,
    gmii_rx_dv,
    gmii_rx_er,
    gmii_isolate,
    configuration_vector,
    speed_is_10_100,
    speed_is_100,
    status_vector,
    reset,
    signal_detect,
    gt0_pll0outclk_out,
    gt0_pll0outrefclk_out,
    gt0_pll1outclk_out,
    gt0_pll1outrefclk_out,
    gt0_pll0lock_out,
    gt0_pll0refclklost_out,
    lopt);
  input gtrefclk_p;
  input gtrefclk_n;
  output gtrefclk_out;
  output gtrefclk_bufg_out;
  output txp;
  output txn;
  input rxp;
  input rxn;
  output userclk_out;
  output userclk2_out;
  output rxuserclk_out;
  output rxuserclk2_out;
  input independent_clock_bufg;
  output pma_reset_out;
  output mmcm_locked_out;
  output resetdone;
  output sgmii_clk_r;
  output sgmii_clk_f;
  output sgmii_clk_en;
  input [7:0]gmii_txd;
  input gmii_tx_en;
  input gmii_tx_er;
  output [7:0]gmii_rxd;
  output gmii_rx_dv;
  output gmii_rx_er;
  output gmii_isolate;
  input [4:0]configuration_vector;
  input speed_is_10_100;
  input speed_is_100;
  output [15:0]status_vector;
  input reset;
  input signal_detect;
  output gt0_pll0outclk_out;
  output gt0_pll0outrefclk_out;
  output gt0_pll1outclk_out;
  output gt0_pll1outrefclk_out;
  output gt0_pll0lock_out;
  output gt0_pll0refclklost_out;
  output lopt;

  wire PLL0RESET_I;
  wire cpll_reset_i;
  wire gmii_rx_dv;
  wire gmii_rx_er;
  wire [7:0]gmii_rxd;
  wire gmii_tx_en;
  wire gmii_tx_er;
  wire [7:0]gmii_txd;
  wire \^gt0_pll0lock_out ;
  wire \^gt0_pll0outclk_out ;
  wire \^gt0_pll0outrefclk_out ;
  wire \^gt0_pll0refclklost_out ;
  wire gt0_pll0reset;
  wire \^gt0_pll1outclk_out ;
  wire \^gt0_pll1outrefclk_out ;
  wire \^gtrefclk_bufg_out ;
  wire gtrefclk_n;
  wire \^gtrefclk_out ;
  wire gtrefclk_p;
  wire independent_clock_bufg;
  wire lopt;
  wire \^mmcm_locked_out ;
  wire mmcm_reset;
  wire \^pma_reset_out ;
  wire reset;
  wire resetdone;
  wire rxn;
  wire rxoutclk;
  wire rxp;
  wire \^rxuserclk2_out ;
  wire signal_detect;
  wire speed_is_100;
  wire speed_is_10_100;
  wire [15:0]status_vector;
  wire txn;
  wire txoutclk;
  wire txp;
  wire userclk2_out;
  wire \^userclk_out ;
  wire NLW_pcs_pma_block_i_gmii_isolate_UNCONNECTED;
  wire NLW_pcs_pma_block_i_sgmii_clk_en_reg_UNCONNECTED;
  wire NLW_pcs_pma_block_i_sgmii_clk_f_UNCONNECTED;
  wire NLW_pcs_pma_block_i_sgmii_clk_r_UNCONNECTED;
  wire [2:0]NLW_pcs_pma_block_i_configuration_vector_UNCONNECTED;
  wire [6:2]NLW_pcs_pma_block_i_status_vector_UNCONNECTED;

  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_clocking core_clocking_i
       (.gtrefclk_bufg(\^gtrefclk_bufg_out ),
        .gtrefclk_n(gtrefclk_n),
        .gtrefclk_out(\^gtrefclk_out ),
        .gtrefclk_p(gtrefclk_p),
        .mmcm_locked(\^mmcm_locked_out ),
        .mmcm_reset(mmcm_reset),
        .rxoutclk(rxoutclk),
        .rxuserclk2(\^rxuserclk2_out ),
        .txoutclk(txoutclk),
        .userclk(\^userclk_out ),
        .userclk2(userclk2_out));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_gt_common core_gt_common_i
       (.PLL0RESET_I(PLL0RESET_I),
        .cpll_reset_i(cpll_reset_i),
        .gt0_pll0lock_out(\^gt0_pll0lock_out ),
        .gt0_pll0outclk_out(\^gt0_pll0outclk_out ),
        .gt0_pll0outrefclk_out(\^gt0_pll0outrefclk_out ),
        .gt0_pll0refclklost_out(\^gt0_pll0refclklost_out ),
        .gt0_pll1outclk_out(\^gt0_pll1outclk_out ),
        .gt0_pll1outrefclk_out(\^gt0_pll1outrefclk_out ),
        .gtrefclk_bufg(\^gtrefclk_bufg_out ),
        .gtrefclk_out(\^gtrefclk_out ),
        .independent_clock_bufg(independent_clock_bufg));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_common_reset core_gt_common_reset_i
       (.PLL0RESET_I(PLL0RESET_I),
        .cpll_reset_i(cpll_reset_i),
        .gt0_pll0reset(gt0_pll0reset),
        .independent_clock_bufg(independent_clock_bufg),
        .out(\^pma_reset_out ));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_resets core_resets_i
       (.independent_clock_bufg(independent_clock_bufg),
        .out(\^pma_reset_out ),
        .reset(reset));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_block pcs_pma_block_i
       (.CLK(userclk2_out),
        .configuration_vector(NLW_pcs_pma_block_i_configuration_vector_UNCONNECTED[2:0]),
        .data_in(\^mmcm_locked_out ),
        .data_sync_reg6(\^gtrefclk_bufg_out ),
        .gmii_isolate(NLW_pcs_pma_block_i_gmii_isolate_UNCONNECTED),
        .gmii_rx_dv(gmii_rx_dv),
        .gmii_rx_er(gmii_rx_er),
        .gmii_rxd(gmii_rxd),
        .gmii_tx_en(gmii_tx_en),
        .gmii_tx_er(gmii_tx_er),
        .gmii_txd(gmii_txd),
        .gt0_pll0lock_out(\^gt0_pll0lock_out ),
        .gt0_pll0outclk_out(\^gt0_pll0outclk_out ),
        .gt0_pll0outrefclk_out(\^gt0_pll0outrefclk_out ),
        .gt0_pll0refclklost_out(\^gt0_pll0refclklost_out ),
        .gt0_pll0reset(gt0_pll0reset),
        .gt0_pll1outclk_out(\^gt0_pll1outclk_out ),
        .gt0_pll1outrefclk_out(\^gt0_pll1outrefclk_out ),
        .independent_clock_bufg(independent_clock_bufg),
        .lopt(lopt),
        .mmcm_reset(mmcm_reset),
        .out(\^pma_reset_out ),
        .reset_sync6(\^userclk_out ),
        .resetdone(resetdone),
        .rxn(rxn),
        .rxoutclk(rxoutclk),
        .rxp(rxp),
        .rxuserclk2(\^rxuserclk2_out ),
        .sgmii_clk_en_reg(NLW_pcs_pma_block_i_sgmii_clk_en_reg_UNCONNECTED),
        .sgmii_clk_f(NLW_pcs_pma_block_i_sgmii_clk_f_UNCONNECTED),
        .sgmii_clk_r(NLW_pcs_pma_block_i_sgmii_clk_r_UNCONNECTED),
        .signal_detect(signal_detect),
        .speed_is_100(speed_is_100),
        .speed_is_10_100(speed_is_10_100),
        .status_vector({NLW_pcs_pma_block_i_status_vector_UNCONNECTED[6:2],status_vector[1:0]}),
        .txn(txn),
        .txoutclk(txoutclk),
        .txp(txp));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_sync_block" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block
   (resetdone,
    data_out,
    data_in,
    CLK);
  output resetdone;
  input data_out;
  input data_in;
  input CLK;

  wire CLK;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire resetdone;
  wire rx_reset_done_i;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(CLK),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync5),
        .Q(rx_reset_done_i),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    resetdone_INST_0
       (.I0(rx_reset_done_i),
        .I1(data_out),
        .O(resetdone));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_sync_block" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_0
   (data_out,
    data_in,
    CLK);
  output data_out;
  input data_in;
  input CLK;

  wire CLK;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(CLK),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_sync_block" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_10
   (S,
    data_out,
    ADDRD,
    \wr_occupancy_reg[5] ,
    data_in,
    rxuserclk2);
  output [1:0]S;
  output data_out;
  input [1:0]ADDRD;
  input \wr_occupancy_reg[5] ;
  input data_in;
  input rxuserclk2;

  wire [1:0]ADDRD;
  wire [1:0]S;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire rxuserclk2;
  wire \wr_occupancy_reg[5] ;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h9)) 
    wr_occupancy0_carry__0_i_1
       (.I0(ADDRD[1]),
        .I1(data_out),
        .O(S[1]));
  LUT3 #(
    .INIT(8'h69)) 
    wr_occupancy0_carry__0_i_2
       (.I0(ADDRD[0]),
        .I1(data_out),
        .I2(\wr_occupancy_reg[5] ),
        .O(S[0]));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_sync_block" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_11
   (data_out,
    Q,
    CLK);
  output data_out;
  input [0:0]Q;
  input CLK;

  wire CLK;
  wire [0:0]Q;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(CLK),
        .CE(1'b1),
        .D(Q),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_sync_block" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_12
   (S,
    data_sync_reg6_0,
    DI,
    data_out,
    Q,
    data_sync_reg1_0,
    CLK);
  output [0:0]S;
  output data_sync_reg6_0;
  input [0:0]DI;
  input data_out;
  input [0:0]Q;
  input [0:0]data_sync_reg1_0;
  input CLK;

  wire CLK;
  wire [0:0]DI;
  wire [0:0]Q;
  wire [0:0]S;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire [0:0]data_sync_reg1_0;
  wire data_sync_reg6_0;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync_reg1_0),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_sync_reg6_0),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h69)) 
    rd_occupancy0_carry_i_8
       (.I0(DI),
        .I1(data_out),
        .I2(Q),
        .O(S));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_sync_block" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_13
   (S,
    data_out,
    \rd_occupancy_reg[3] ,
    \rd_occupancy_reg[3]_0 ,
    \rd_occupancy_reg[3]_1 ,
    \rd_occupancy_reg[3]_2 ,
    Q,
    data_sync_reg1_0,
    CLK);
  output [0:0]S;
  output data_out;
  input \rd_occupancy_reg[3] ;
  input \rd_occupancy_reg[3]_0 ;
  input \rd_occupancy_reg[3]_1 ;
  input \rd_occupancy_reg[3]_2 ;
  input [0:0]Q;
  input [0:0]data_sync_reg1_0;
  input CLK;

  wire CLK;
  wire [0:0]Q;
  wire [0:0]S;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire [0:0]data_sync_reg1_0;
  wire \rd_occupancy_reg[3] ;
  wire \rd_occupancy_reg[3]_0 ;
  wire \rd_occupancy_reg[3]_1 ;
  wire \rd_occupancy_reg[3]_2 ;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync_reg1_0),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h9669699669969669)) 
    rd_occupancy0_carry_i_7
       (.I0(data_out),
        .I1(\rd_occupancy_reg[3] ),
        .I2(\rd_occupancy_reg[3]_0 ),
        .I3(\rd_occupancy_reg[3]_1 ),
        .I4(\rd_occupancy_reg[3]_2 ),
        .I5(Q),
        .O(S));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_sync_block" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_14
   (S,
    data_out,
    \rd_occupancy_reg[3] ,
    \rd_occupancy_reg[3]_0 ,
    \rd_occupancy_reg[3]_1 ,
    Q,
    data_sync_reg1_0,
    CLK);
  output [0:0]S;
  output data_out;
  input \rd_occupancy_reg[3] ;
  input \rd_occupancy_reg[3]_0 ;
  input \rd_occupancy_reg[3]_1 ;
  input [0:0]Q;
  input [0:0]data_sync_reg1_0;
  input CLK;

  wire CLK;
  wire [0:0]Q;
  wire [0:0]S;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire [0:0]data_sync_reg1_0;
  wire \rd_occupancy_reg[3] ;
  wire \rd_occupancy_reg[3]_0 ;
  wire \rd_occupancy_reg[3]_1 ;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync_reg1_0),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h69969669)) 
    rd_occupancy0_carry_i_6
       (.I0(data_out),
        .I1(\rd_occupancy_reg[3] ),
        .I2(\rd_occupancy_reg[3]_0 ),
        .I3(\rd_occupancy_reg[3]_1 ),
        .I4(Q),
        .O(S));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_sync_block" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_15
   (S,
    data_out,
    \rd_occupancy_reg[3] ,
    \rd_occupancy_reg[3]_0 ,
    Q,
    data_sync_reg1_0,
    CLK);
  output [0:0]S;
  output data_out;
  input \rd_occupancy_reg[3] ;
  input \rd_occupancy_reg[3]_0 ;
  input [0:0]Q;
  input [0:0]data_sync_reg1_0;
  input CLK;

  wire CLK;
  wire [0:0]Q;
  wire [0:0]S;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire [0:0]data_sync_reg1_0;
  wire \rd_occupancy_reg[3] ;
  wire \rd_occupancy_reg[3]_0 ;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync_reg1_0),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h9669)) 
    rd_occupancy0_carry_i_5
       (.I0(data_out),
        .I1(\rd_occupancy_reg[3] ),
        .I2(\rd_occupancy_reg[3]_0 ),
        .I3(Q),
        .O(S));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_sync_block" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_16
   (S,
    data_out,
    \rd_occupancy_reg[5] ,
    Q,
    data_sync_reg1_0,
    CLK);
  output [1:0]S;
  output data_out;
  input \rd_occupancy_reg[5] ;
  input [1:0]Q;
  input [0:0]data_sync_reg1_0;
  input CLK;

  wire CLK;
  wire [1:0]Q;
  wire [1:0]S;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire [0:0]data_sync_reg1_0;
  wire \rd_occupancy_reg[5] ;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync_reg1_0),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h9)) 
    rd_occupancy0_carry__0_i_2
       (.I0(data_out),
        .I1(Q[1]),
        .O(S[1]));
  LUT3 #(
    .INIT(8'h69)) 
    rd_occupancy0_carry__0_i_3
       (.I0(data_out),
        .I1(\rd_occupancy_reg[5] ),
        .I2(Q[0]),
        .O(S[0]));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_sync_block" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_17
   (initialize_ram_complete_sync_ris_edg0,
    data_out,
    initialize_ram_complete_sync_reg1,
    data_in,
    CLK);
  output initialize_ram_complete_sync_ris_edg0;
  output data_out;
  input initialize_ram_complete_sync_reg1;
  input data_in;
  input CLK;

  wire CLK;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire initialize_ram_complete_sync_reg1;
  wire initialize_ram_complete_sync_ris_edg0;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(CLK),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    initialize_ram_complete_sync_ris_edg_i_1
       (.I0(data_out),
        .I1(initialize_ram_complete_sync_reg1),
        .O(initialize_ram_complete_sync_ris_edg0));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_sync_block" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_20
   (data_out,
    data_in,
    data_sync_reg6_0);
  output data_out;
  input data_in;
  input data_sync_reg6_0;

  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire data_sync_reg6_0;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(data_sync_reg6_0),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(data_sync_reg6_0),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(data_sync_reg6_0),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(data_sync_reg6_0),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(data_sync_reg6_0),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(data_sync_reg6_0),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_sync_block" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_21
   (data_out,
    data_sync_reg1_0,
    independent_clock_bufg);
  output data_out;
  input data_sync_reg1_0;
  input independent_clock_bufg;

  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire data_sync_reg1_0;
  wire independent_clock_bufg;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync_reg1_0),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_sync_block" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_22
   (SR,
    mmcm_lock_reclocked_reg,
    mmcm_lock_reclocked,
    Q,
    mmcm_lock_reclocked_reg_0,
    data_sync_reg1_0,
    independent_clock_bufg);
  output [0:0]SR;
  output mmcm_lock_reclocked_reg;
  input mmcm_lock_reclocked;
  input [1:0]Q;
  input mmcm_lock_reclocked_reg_0;
  input data_sync_reg1_0;
  input independent_clock_bufg;

  wire [1:0]Q;
  wire [0:0]SR;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire data_sync_reg1_0;
  wire independent_clock_bufg;
  wire mmcm_lock_i;
  wire mmcm_lock_reclocked;
  wire mmcm_lock_reclocked_reg;
  wire mmcm_lock_reclocked_reg_0;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync_reg1_0),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync5),
        .Q(mmcm_lock_i),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \mmcm_lock_count[7]_i_1 
       (.I0(mmcm_lock_i),
        .O(SR));
  LUT5 #(
    .INIT(32'hEAAA0000)) 
    mmcm_lock_reclocked_i_1
       (.I0(mmcm_lock_reclocked),
        .I1(Q[1]),
        .I2(mmcm_lock_reclocked_reg_0),
        .I3(Q[0]),
        .I4(mmcm_lock_i),
        .O(mmcm_lock_reclocked_reg));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_sync_block" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_23
   (E,
    \FSM_sequential_tx_state_reg[1] ,
    reset_time_out_reg,
    Q,
    \FSM_sequential_tx_state_reg[0] ,
    \FSM_sequential_tx_state_reg[0]_0 ,
    sel,
    \FSM_sequential_tx_state_reg[0]_1 ,
    mmcm_lock_reclocked,
    \FSM_sequential_tx_state[3]_i_3_0 ,
    \FSM_sequential_tx_state[3]_i_3_1 ,
    txresetdone_s3,
    reset_time_out,
    \FSM_sequential_tx_state[3]_i_3_2 ,
    \FSM_sequential_tx_state[3]_i_3_3 ,
    gt0_pll0lock_out,
    independent_clock_bufg);
  output [0:0]E;
  output \FSM_sequential_tx_state_reg[1] ;
  input reset_time_out_reg;
  input [3:0]Q;
  input \FSM_sequential_tx_state_reg[0] ;
  input \FSM_sequential_tx_state_reg[0]_0 ;
  input sel;
  input \FSM_sequential_tx_state_reg[0]_1 ;
  input mmcm_lock_reclocked;
  input \FSM_sequential_tx_state[3]_i_3_0 ;
  input \FSM_sequential_tx_state[3]_i_3_1 ;
  input txresetdone_s3;
  input reset_time_out;
  input \FSM_sequential_tx_state[3]_i_3_2 ;
  input \FSM_sequential_tx_state[3]_i_3_3 ;
  input gt0_pll0lock_out;
  input independent_clock_bufg;

  wire [0:0]E;
  wire \FSM_sequential_tx_state[3]_i_3_0 ;
  wire \FSM_sequential_tx_state[3]_i_3_1 ;
  wire \FSM_sequential_tx_state[3]_i_3_2 ;
  wire \FSM_sequential_tx_state[3]_i_3_3 ;
  wire \FSM_sequential_tx_state[3]_i_3_n_0 ;
  wire \FSM_sequential_tx_state[3]_i_6_n_0 ;
  wire \FSM_sequential_tx_state[3]_i_8_n_0 ;
  wire \FSM_sequential_tx_state_reg[0] ;
  wire \FSM_sequential_tx_state_reg[0]_0 ;
  wire \FSM_sequential_tx_state_reg[0]_1 ;
  wire \FSM_sequential_tx_state_reg[1] ;
  wire [3:0]Q;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire gt0_pll0lock_out;
  wire independent_clock_bufg;
  wire mmcm_lock_reclocked;
  wire pll0lock_sync;
  wire reset_time_out;
  wire reset_time_out_0;
  wire reset_time_out_reg;
  wire sel;
  wire txresetdone_s3;

  LUT6 #(
    .INIT(64'h3300744433007477)) 
    \FSM_sequential_tx_state[3]_i_1 
       (.I0(\FSM_sequential_tx_state[3]_i_3_n_0 ),
        .I1(Q[0]),
        .I2(\FSM_sequential_tx_state_reg[0] ),
        .I3(\FSM_sequential_tx_state_reg[0]_0 ),
        .I4(Q[3]),
        .I5(sel),
        .O(E));
  LUT6 #(
    .INIT(64'h88B8BBBB88B88888)) 
    \FSM_sequential_tx_state[3]_i_3 
       (.I0(\FSM_sequential_tx_state[3]_i_6_n_0 ),
        .I1(Q[1]),
        .I2(\FSM_sequential_tx_state_reg[0]_1 ),
        .I3(mmcm_lock_reclocked),
        .I4(Q[2]),
        .I5(\FSM_sequential_tx_state[3]_i_8_n_0 ),
        .O(\FSM_sequential_tx_state[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h45004500450045FF)) 
    \FSM_sequential_tx_state[3]_i_6 
       (.I0(txresetdone_s3),
        .I1(reset_time_out),
        .I2(\FSM_sequential_tx_state[3]_i_3_2 ),
        .I3(Q[2]),
        .I4(pll0lock_sync),
        .I5(\FSM_sequential_tx_state[3]_i_3_3 ),
        .O(\FSM_sequential_tx_state[3]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'hBF)) 
    \FSM_sequential_tx_state[3]_i_8 
       (.I0(pll0lock_sync),
        .I1(\FSM_sequential_tx_state[3]_i_3_0 ),
        .I2(\FSM_sequential_tx_state[3]_i_3_1 ),
        .O(\FSM_sequential_tx_state[3]_i_8_n_0 ));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(gt0_pll0lock_out),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync5),
        .Q(pll0lock_sync),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFEAAFEFE02AA0202)) 
    reset_time_out_i_1
       (.I0(reset_time_out_0),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(Q[0]),
        .I5(reset_time_out),
        .O(\FSM_sequential_tx_state_reg[1] ));
  LUT5 #(
    .INIT(32'h08BF08BB)) 
    reset_time_out_i_2
       (.I0(reset_time_out_reg),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(pll0lock_sync),
        .O(reset_time_out_0));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_sync_block" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_24
   (data_out,
    data_in,
    data_sync_reg1_0);
  output data_out;
  input data_in;
  input data_sync_reg1_0;

  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire data_sync_reg1_0;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(data_sync_reg1_0),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(data_sync_reg1_0),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(data_sync_reg1_0),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(data_sync_reg1_0),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(data_sync_reg1_0),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(data_sync_reg1_0),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_sync_block" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_25
   (data_out,
    data_in,
    independent_clock_bufg);
  output data_out;
  input data_in;
  input independent_clock_bufg;

  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire independent_clock_bufg;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_sync_block" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_26
   (data_out,
    data_in,
    data_sync_reg6_0);
  output data_out;
  input data_in;
  input data_sync_reg6_0;

  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire data_sync_reg6_0;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(data_sync_reg6_0),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(data_sync_reg6_0),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(data_sync_reg6_0),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(data_sync_reg6_0),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(data_sync_reg6_0),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(data_sync_reg6_0),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_sync_block" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_27
   (data_out,
    data_sync_reg1_0,
    independent_clock_bufg);
  output data_out;
  input data_sync_reg1_0;
  input independent_clock_bufg;

  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire data_sync_reg1_0;
  wire independent_clock_bufg;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync_reg1_0),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_sync_block" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_28
   (E,
    D,
    data_out,
    \FSM_sequential_rx_state_reg[2] ,
    \FSM_sequential_rx_state_reg[0] ,
    \FSM_sequential_rx_state_reg[0]_0 ,
    Q,
    \FSM_sequential_rx_state_reg[0]_1 ,
    \FSM_sequential_rx_state_reg[0]_2 ,
    \FSM_sequential_rx_state_reg[3] ,
    time_out_wait_bypass_s3,
    \FSM_sequential_rx_state_reg[3]_0 ,
    rx_fsm_reset_done_int_reg,
    rx_fsm_reset_done_int_reg_0,
    rx_fsm_reset_done_int_reg_1,
    \FSM_sequential_rx_state_reg[0]_3 ,
    \FSM_sequential_rx_state_reg[0]_4 ,
    data_in,
    data_sync_reg1_0,
    independent_clock_bufg);
  output [0:0]E;
  output [2:0]D;
  output data_out;
  output \FSM_sequential_rx_state_reg[2] ;
  input \FSM_sequential_rx_state_reg[0] ;
  input \FSM_sequential_rx_state_reg[0]_0 ;
  input [3:0]Q;
  input \FSM_sequential_rx_state_reg[0]_1 ;
  input \FSM_sequential_rx_state_reg[0]_2 ;
  input \FSM_sequential_rx_state_reg[3] ;
  input time_out_wait_bypass_s3;
  input \FSM_sequential_rx_state_reg[3]_0 ;
  input rx_fsm_reset_done_int_reg;
  input rx_fsm_reset_done_int_reg_0;
  input rx_fsm_reset_done_int_reg_1;
  input \FSM_sequential_rx_state_reg[0]_3 ;
  input \FSM_sequential_rx_state_reg[0]_4 ;
  input data_in;
  input data_sync_reg1_0;
  input independent_clock_bufg;

  wire [2:0]D;
  wire [0:0]E;
  wire \FSM_sequential_rx_state[3]_i_3_n_0 ;
  wire \FSM_sequential_rx_state[3]_i_7_n_0 ;
  wire \FSM_sequential_rx_state_reg[0] ;
  wire \FSM_sequential_rx_state_reg[0]_0 ;
  wire \FSM_sequential_rx_state_reg[0]_1 ;
  wire \FSM_sequential_rx_state_reg[0]_2 ;
  wire \FSM_sequential_rx_state_reg[0]_3 ;
  wire \FSM_sequential_rx_state_reg[0]_4 ;
  wire \FSM_sequential_rx_state_reg[2] ;
  wire \FSM_sequential_rx_state_reg[3] ;
  wire \FSM_sequential_rx_state_reg[3]_0 ;
  wire [3:0]Q;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire data_sync_reg1_0;
  wire independent_clock_bufg;
  wire rx_fsm_reset_done_int;
  wire rx_fsm_reset_done_int_i_3_n_0;
  wire rx_fsm_reset_done_int_reg;
  wire rx_fsm_reset_done_int_reg_0;
  wire rx_fsm_reset_done_int_reg_1;
  wire time_out_wait_bypass_s3;

  LUT5 #(
    .INIT(32'hA8FFA8A8)) 
    \FSM_sequential_rx_state[0]_i_1 
       (.I0(Q[3]),
        .I1(Q[1]),
        .I2(\FSM_sequential_rx_state[3]_i_7_n_0 ),
        .I3(\FSM_sequential_rx_state_reg[0]_3 ),
        .I4(\FSM_sequential_rx_state_reg[0]_4 ),
        .O(D[0]));
  LUT5 #(
    .INIT(32'h03443377)) 
    \FSM_sequential_rx_state[1]_i_1 
       (.I0(\FSM_sequential_rx_state[3]_i_7_n_0 ),
        .I1(Q[3]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\FSM_sequential_rx_state_reg[0]_4 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hAAABBBBBAAABAAAB)) 
    \FSM_sequential_rx_state[3]_i_1 
       (.I0(\FSM_sequential_rx_state[3]_i_3_n_0 ),
        .I1(\FSM_sequential_rx_state_reg[0] ),
        .I2(\FSM_sequential_rx_state_reg[0]_0 ),
        .I3(Q[0]),
        .I4(\FSM_sequential_rx_state_reg[0]_1 ),
        .I5(\FSM_sequential_rx_state_reg[0]_2 ),
        .O(E));
  LUT6 #(
    .INIT(64'hDDDFFFFFDDDF0000)) 
    \FSM_sequential_rx_state[3]_i_2 
       (.I0(\FSM_sequential_rx_state[3]_i_7_n_0 ),
        .I1(\FSM_sequential_rx_state_reg[3] ),
        .I2(Q[0]),
        .I3(time_out_wait_bypass_s3),
        .I4(Q[3]),
        .I5(\FSM_sequential_rx_state_reg[3]_0 ),
        .O(D[2]));
  LUT4 #(
    .INIT(16'h4C48)) 
    \FSM_sequential_rx_state[3]_i_3 
       (.I0(data_out),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(\FSM_sequential_rx_state[3]_i_7_n_0 ),
        .O(\FSM_sequential_rx_state[3]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h04FF)) 
    \FSM_sequential_rx_state[3]_i_7 
       (.I0(rx_fsm_reset_done_int_reg_0),
        .I1(rx_fsm_reset_done_int_reg),
        .I2(data_out),
        .I3(Q[0]),
        .O(\FSM_sequential_rx_state[3]_i_7_n_0 ));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync_reg1_0),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    rx_fsm_reset_done_int_i_1
       (.I0(rx_fsm_reset_done_int),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(rx_fsm_reset_done_int_i_3_n_0),
        .I4(data_in),
        .O(\FSM_sequential_rx_state_reg[2] ));
  LUT5 #(
    .INIT(32'h00100000)) 
    rx_fsm_reset_done_int_i_2
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(rx_fsm_reset_done_int_reg_1),
        .I3(rx_fsm_reset_done_int_reg_0),
        .I4(data_out),
        .O(rx_fsm_reset_done_int));
  LUT6 #(
    .INIT(64'hFFFF3131C0CCFFFF)) 
    rx_fsm_reset_done_int_i_3
       (.I0(rx_fsm_reset_done_int_reg),
        .I1(data_out),
        .I2(rx_fsm_reset_done_int_reg_0),
        .I3(rx_fsm_reset_done_int_reg_1),
        .I4(Q[1]),
        .I5(Q[0]),
        .O(rx_fsm_reset_done_int_i_3_n_0));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_sync_block" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_29
   (SR,
    mmcm_lock_reclocked_reg,
    mmcm_lock_reclocked,
    Q,
    mmcm_lock_reclocked_reg_0,
    data_sync_reg1_0,
    independent_clock_bufg);
  output [0:0]SR;
  output mmcm_lock_reclocked_reg;
  input mmcm_lock_reclocked;
  input [1:0]Q;
  input mmcm_lock_reclocked_reg_0;
  input data_sync_reg1_0;
  input independent_clock_bufg;

  wire [1:0]Q;
  wire [0:0]SR;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire data_sync_reg1_0;
  wire independent_clock_bufg;
  wire mmcm_lock_i;
  wire mmcm_lock_reclocked;
  wire mmcm_lock_reclocked_reg;
  wire mmcm_lock_reclocked_reg_0;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync_reg1_0),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync5),
        .Q(mmcm_lock_i),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \mmcm_lock_count[7]_i_1__0 
       (.I0(mmcm_lock_i),
        .O(SR));
  LUT5 #(
    .INIT(32'hEAAA0000)) 
    mmcm_lock_reclocked_i_1__0
       (.I0(mmcm_lock_reclocked),
        .I1(Q[1]),
        .I2(mmcm_lock_reclocked_reg_0),
        .I3(Q[0]),
        .I4(mmcm_lock_i),
        .O(mmcm_lock_reclocked_reg));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_sync_block" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_30
   (\FSM_sequential_rx_state_reg[0] ,
    reset_time_out_reg,
    Q,
    \FSM_sequential_rx_state_reg[0]_0 ,
    data_out,
    reset_time_out_reg_0,
    check_tlock_max,
    reset_time_out_reg_1,
    reset_time_out_reg_2,
    reset_time_out_reg_3,
    gt0_pll0lock_out,
    independent_clock_bufg);
  output \FSM_sequential_rx_state_reg[0] ;
  output reset_time_out_reg;
  input [3:0]Q;
  input \FSM_sequential_rx_state_reg[0]_0 ;
  input data_out;
  input reset_time_out_reg_0;
  input check_tlock_max;
  input reset_time_out_reg_1;
  input reset_time_out_reg_2;
  input reset_time_out_reg_3;
  input gt0_pll0lock_out;
  input independent_clock_bufg;

  wire \FSM_sequential_rx_state_reg[0] ;
  wire \FSM_sequential_rx_state_reg[0]_0 ;
  wire [3:0]Q;
  wire check_tlock_max;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire gt0_pll0lock_out;
  wire independent_clock_bufg;
  wire pll0lock_sync;
  wire reset_time_out_i_5_n_0;
  wire reset_time_out_reg;
  wire reset_time_out_reg_0;
  wire reset_time_out_reg_1;
  wire reset_time_out_reg_2;
  wire reset_time_out_reg_3;

  LUT6 #(
    .INIT(64'h5050505050505070)) 
    \FSM_sequential_rx_state[3]_i_5 
       (.I0(Q[0]),
        .I1(\FSM_sequential_rx_state_reg[0]_0 ),
        .I2(Q[1]),
        .I3(pll0lock_sync),
        .I4(Q[3]),
        .I5(Q[2]),
        .O(\FSM_sequential_rx_state_reg[0] ));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(gt0_pll0lock_out),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync5),
        .Q(pll0lock_sync),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFF80FFFFFF800000)) 
    reset_time_out_i_1__0
       (.I0(reset_time_out_reg_0),
        .I1(check_tlock_max),
        .I2(reset_time_out_reg_1),
        .I3(reset_time_out_i_5_n_0),
        .I4(reset_time_out_reg_2),
        .I5(reset_time_out_reg_3),
        .O(reset_time_out_reg));
  LUT6 #(
    .INIT(64'h1D0D1D0DD1C1DDCD)) 
    reset_time_out_i_5
       (.I0(Q[2]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(pll0lock_sync),
        .I4(Q[0]),
        .I5(data_out),
        .O(reset_time_out_i_5_n_0));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_sync_block" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_31
   (data_out,
    data_in,
    rxuserclk2);
  output data_out;
  input data_in;
  input rxuserclk2;

  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire rxuserclk2;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_sync_block" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_32
   (data_out,
    data_in,
    rxuserclk2);
  output data_out;
  input data_in;
  input rxuserclk2;

  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire rxuserclk2;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_sync_block" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_33
   (data_out,
    data_in,
    independent_clock_bufg);
  output data_out;
  input data_in;
  input independent_clock_bufg;

  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire independent_clock_bufg;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_sync_block" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_35
   (data_out,
    speed_is_100,
    CLK);
  output data_out;
  input speed_is_100;
  input CLK;

  wire CLK;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire speed_is_100;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(CLK),
        .CE(1'b1),
        .D(speed_is_100),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_sync_block" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_36
   (data_out,
    speed_is_10_100,
    CLK);
  output data_out;
  input speed_is_10_100;
  input CLK;

  wire CLK;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire speed_is_10_100;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(CLK),
        .CE(1'b1),
        .D(speed_is_10_100),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_sync_block" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_4
   (data_out,
    status_vector,
    independent_clock_bufg);
  output data_out;
  input [0:0]status_vector;
  input independent_clock_bufg;

  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire independent_clock_bufg;
  wire [0:0]status_vector;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(status_vector),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_sync_block" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_5
   (data_out,
    Q,
    rxuserclk2);
  output data_out;
  input [0:0]Q;
  input rxuserclk2;

  wire [0:0]Q;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire rxuserclk2;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(Q),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_sync_block" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_6
   (S,
    data_sync_reg6_0,
    Q,
    p_6_in,
    data_out,
    data_sync_reg1_0,
    rxuserclk2);
  output [0:0]S;
  output data_sync_reg6_0;
  input [0:0]Q;
  input p_6_in;
  input data_out;
  input [0:0]data_sync_reg1_0;
  input rxuserclk2;

  wire [0:0]Q;
  wire [0:0]S;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire [0:0]data_sync_reg1_0;
  wire data_sync_reg6_0;
  wire p_6_in;
  wire rxuserclk2;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync_reg1_0),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_sync_reg6_0),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h69)) 
    wr_occupancy0_carry_i_4
       (.I0(Q),
        .I1(p_6_in),
        .I2(data_out),
        .O(S));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_sync_block" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_7
   (S,
    data_out,
    Q,
    \wr_occupancy_reg[3] ,
    \wr_occupancy_reg[3]_0 ,
    \wr_occupancy_reg[3]_1 ,
    \wr_occupancy_reg[3]_2 ,
    data_sync_reg1_0,
    rxuserclk2);
  output [0:0]S;
  output data_out;
  input [0:0]Q;
  input \wr_occupancy_reg[3] ;
  input \wr_occupancy_reg[3]_0 ;
  input \wr_occupancy_reg[3]_1 ;
  input \wr_occupancy_reg[3]_2 ;
  input [0:0]data_sync_reg1_0;
  input rxuserclk2;

  wire [0:0]Q;
  wire [0:0]S;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire [0:0]data_sync_reg1_0;
  wire rxuserclk2;
  wire \wr_occupancy_reg[3] ;
  wire \wr_occupancy_reg[3]_0 ;
  wire \wr_occupancy_reg[3]_1 ;
  wire \wr_occupancy_reg[3]_2 ;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync_reg1_0),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h9669699669969669)) 
    wr_occupancy0_carry_i_3
       (.I0(Q),
        .I1(data_out),
        .I2(\wr_occupancy_reg[3] ),
        .I3(\wr_occupancy_reg[3]_0 ),
        .I4(\wr_occupancy_reg[3]_1 ),
        .I5(\wr_occupancy_reg[3]_2 ),
        .O(S));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_sync_block" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_8
   (S,
    data_out,
    Q,
    \wr_occupancy_reg[3] ,
    \wr_occupancy_reg[3]_0 ,
    \wr_occupancy_reg[3]_1 ,
    data_sync_reg1_0,
    rxuserclk2);
  output [0:0]S;
  output data_out;
  input [0:0]Q;
  input \wr_occupancy_reg[3] ;
  input \wr_occupancy_reg[3]_0 ;
  input \wr_occupancy_reg[3]_1 ;
  input [0:0]data_sync_reg1_0;
  input rxuserclk2;

  wire [0:0]Q;
  wire [0:0]S;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire [0:0]data_sync_reg1_0;
  wire rxuserclk2;
  wire \wr_occupancy_reg[3] ;
  wire \wr_occupancy_reg[3]_0 ;
  wire \wr_occupancy_reg[3]_1 ;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync_reg1_0),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h69969669)) 
    wr_occupancy0_carry_i_2
       (.I0(Q),
        .I1(data_out),
        .I2(\wr_occupancy_reg[3] ),
        .I3(\wr_occupancy_reg[3]_0 ),
        .I4(\wr_occupancy_reg[3]_1 ),
        .O(S));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_sync_block" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_9
   (S,
    data_out,
    Q,
    \wr_occupancy_reg[3] ,
    \wr_occupancy_reg[3]_0 ,
    data_sync_reg1_0,
    rxuserclk2);
  output [0:0]S;
  output data_out;
  input [0:0]Q;
  input \wr_occupancy_reg[3] ;
  input \wr_occupancy_reg[3]_0 ;
  input [0:0]data_sync_reg1_0;
  input rxuserclk2;

  wire [0:0]Q;
  wire [0:0]S;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire [0:0]data_sync_reg1_0;
  wire rxuserclk2;
  wire \wr_occupancy_reg[3] ;
  wire \wr_occupancy_reg[3]_0 ;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync_reg1_0),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h9669)) 
    wr_occupancy0_carry_i_1
       (.I0(Q),
        .I1(data_out),
        .I2(\wr_occupancy_reg[3] ),
        .I3(\wr_occupancy_reg[3]_0 ),
        .O(S));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_transceiver" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_transceiver
   (txn,
    txp,
    rxoutclk,
    txoutclk,
    rxchariscomma,
    rxcharisk,
    rxdisperr,
    rxnotintable,
    rxclkcorcnt,
    txbuferr,
    mmcm_reset,
    reset_in,
    data_in,
    rx_fsm_reset_done_int_reg,
    rxbufstatus,
    Q,
    data_sync_reg6,
    rxn,
    rxp,
    gt0_pll0outclk_out,
    gt0_pll0outrefclk_out,
    gt0_pll1outclk_out,
    gt0_pll1outrefclk_out,
    rxuserclk2,
    reset_sync6,
    independent_clock_bufg,
    CLK,
    SR,
    powerdown,
    D,
    txchardispval_reg_reg_0,
    txcharisk_reg_reg_0,
    out,
    gt0_pll0refclklost_out,
    status_vector,
    enablealign,
    mgt_rx_reset,
    data_sync_reg1,
    gt0_pll0lock_out,
    \txdata_reg_reg[7]_0 );
  output txn;
  output txp;
  output rxoutclk;
  output txoutclk;
  output [0:0]rxchariscomma;
  output [0:0]rxcharisk;
  output [0:0]rxdisperr;
  output [0:0]rxnotintable;
  output [1:0]rxclkcorcnt;
  output txbuferr;
  output mmcm_reset;
  output reset_in;
  output data_in;
  output rx_fsm_reset_done_int_reg;
  output [0:0]rxbufstatus;
  output [7:0]Q;
  input data_sync_reg6;
  input rxn;
  input rxp;
  input gt0_pll0outclk_out;
  input gt0_pll0outrefclk_out;
  input gt0_pll1outclk_out;
  input gt0_pll1outrefclk_out;
  input rxuserclk2;
  input reset_sync6;
  input independent_clock_bufg;
  input CLK;
  input [0:0]SR;
  input powerdown;
  input [0:0]D;
  input [0:0]txchardispval_reg_reg_0;
  input [0:0]txcharisk_reg_reg_0;
  input [0:0]out;
  input gt0_pll0refclklost_out;
  input [0:0]status_vector;
  input enablealign;
  input mgt_rx_reset;
  input data_sync_reg1;
  input gt0_pll0lock_out;
  input [7:0]\txdata_reg_reg[7]_0 ;

  wire CLK;
  wire [0:0]D;
  wire [7:0]Q;
  wire [0:0]SR;
  wire data_in;
  wire data_sync_reg1;
  wire data_sync_reg6;
  wire data_valid_reg2;
  wire enablealign;
  wire encommaalign_rec;
  wire gt0_pll0lock_out;
  wire gt0_pll0outclk_out;
  wire gt0_pll0outrefclk_out;
  wire gt0_pll0refclklost_out;
  wire gt0_pll1outclk_out;
  wire gt0_pll1outrefclk_out;
  wire gtwizard_inst_n_4;
  wire independent_clock_bufg;
  wire initialize_ram_complete;
  wire initialize_ram_complete_pulse;
  wire mgt_rx_reset;
  wire mmcm_reset;
  wire [0:0]out;
  wire reset_in;
  wire reset_sync6;
  wire rx_fsm_reset_done_int_reg;
  wire [0:0]rxbufstatus;
  wire [0:0]rxchariscomma;
  wire [1:0]rxchariscomma_rec;
  wire [0:0]rxcharisk;
  wire [1:0]rxcharisk_rec;
  wire [15:0]rxdata_rec;
  wire [0:0]rxdisperr;
  wire [1:0]rxdisperr_rec;
  wire rxn;
  wire [0:0]rxnotintable;
  wire [1:0]rxnotintable_rec;
  wire rxoutclk;
  wire rxp;
  wire rxreset_int;
  wire rxreset_rec;
  wire rxuserclk2;
  wire [0:0]status_vector;
  wire toggle;
  wire toggle_i_1_n_0;
  wire txbuferr;
  wire [1:1]txbufstatus_reg;
  wire [1:0]txchardispmode_double;
  wire [1:0]txchardispmode_int;
  wire txchardispmode_reg;
  wire [1:0]txchardispval_double;
  wire [1:0]txchardispval_int;
  wire txchardispval_reg;
  wire [0:0]txchardispval_reg_reg_0;
  wire [1:0]txcharisk_double;
  wire [1:0]txcharisk_int;
  wire txcharisk_reg;
  wire [0:0]txcharisk_reg_reg_0;
  wire [15:0]txdata_double;
  wire [15:0]txdata_int;
  wire [7:0]txdata_reg;
  wire [7:0]\txdata_reg_reg[7]_0 ;
  wire txn;
  wire txoutclk;
  wire txp;
  wire txreset_int;
  wire [4:4]wr_addr__0;
  wire wr_data1;
  wire wtd_rxpcsreset_in;
  wire [1:0]NLW_rx_elastic_buffer_inst_rxclkcorcnt_UNCONNECTED;

  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_GTWIZARD gtwizard_inst
       (.D({rxchariscomma_rec[0],rxcharisk_rec[0],rxdisperr_rec[0],rxnotintable_rec[0],rxdata_rec[7:0],rxchariscomma_rec[1],rxcharisk_rec[1],rxdisperr_rec[1],rxnotintable_rec[1],rxdata_rec[15:8]}),
        .PLL0_RESET_reg(reset_in),
        .Q(txdata_int),
        .RXPD(1'b0),
        .TXBUFSTATUS(gtwizard_inst_n_4),
        .TXPD(1'b0),
        .data_in(data_in),
        .data_out(data_valid_reg2),
        .data_sync_reg1(data_sync_reg1),
        .data_sync_reg6(data_sync_reg6),
        .data_sync_reg6_0(reset_sync6),
        .gt0_gtrxreset_gt_d1_reg(rxreset_int),
        .gt0_pll0lock_out(gt0_pll0lock_out),
        .gt0_pll0outclk_out(gt0_pll0outclk_out),
        .gt0_pll0outrefclk_out(gt0_pll0outrefclk_out),
        .gt0_pll0refclklost_out(gt0_pll0refclklost_out),
        .gt0_pll1outclk_out(gt0_pll1outclk_out),
        .gt0_pll1outrefclk_out(gt0_pll1outrefclk_out),
        .independent_clock_bufg(independent_clock_bufg),
        .mmcm_reset(mmcm_reset),
        .out(out),
        .reset_out(encommaalign_rec),
        .rx_fsm_reset_done_int_reg(rx_fsm_reset_done_int_reg),
        .rxn(rxn),
        .rxoutclk(rxoutclk),
        .rxp(rxp),
        .rxuserclk2(rxuserclk2),
        .txn(txn),
        .txn_0(txchardispmode_int),
        .txn_1(txchardispval_int),
        .txn_2(txcharisk_int),
        .txn_3(txreset_int),
        .txoutclk(txoutclk),
        .txp(txp),
        .wtd_rxpcsreset_in(wtd_rxpcsreset_in));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_reset_sync reclock_encommaalign
       (.enablealign(enablealign),
        .reset_out(encommaalign_rec),
        .rxuserclk2(rxuserclk2));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_reset_sync_1 reclock_rxreset
       (.SR(wr_data1),
        .initialize_ram_complete(initialize_ram_complete),
        .initialize_ram_complete_pulse(initialize_ram_complete_pulse),
        .mgt_rx_reset(mgt_rx_reset),
        .reset_out(rxreset_rec),
        .reset_sync6_0(wr_addr__0),
        .rxuserclk2(rxuserclk2));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_reset_sync_2 reclock_rxreset_indclk
       (.independent_clock_bufg(independent_clock_bufg),
        .mgt_rx_reset(mgt_rx_reset),
        .reset_out(rxreset_int));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_reset_sync_3 reclock_txreset
       (.SR(SR),
        .reset_out(txreset_int),
        .reset_sync6_0(reset_sync6));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_reset_wtd_timer reset_wtd_timer
       (.data_out(data_valid_reg2),
        .independent_clock_bufg(independent_clock_bufg),
        .wtd_rxpcsreset_in(wtd_rxpcsreset_in));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_rx_elastic_buffer rx_elastic_buffer_inst
       (.CLK(CLK),
        .D({rxchariscomma_rec[0],rxcharisk_rec[0],rxdisperr_rec[0],rxnotintable_rec[0],rxdata_rec[7:0],rxchariscomma_rec[1],rxcharisk_rec[1],rxdisperr_rec[1],rxnotintable_rec[1],rxdata_rec[15:8]}),
        .Q(Q),
        .SR(wr_addr__0),
        .initialize_ram_complete(initialize_ram_complete),
        .initialize_ram_complete_pulse(initialize_ram_complete_pulse),
        .mgt_rx_reset(mgt_rx_reset),
        .reset_out(rxreset_rec),
        .rxbufstatus(rxbufstatus),
        .rxchariscomma(rxchariscomma),
        .rxcharisk(rxcharisk),
        .rxclkcorcnt(NLW_rx_elastic_buffer_inst_rxclkcorcnt_UNCONNECTED[1:0]),
        .rxdisperr(rxdisperr),
        .rxnotintable(rxnotintable),
        .rxuserclk2(rxuserclk2),
        .\wr_data_reg_reg[0]_0 (wr_data1));
  gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_sync_block_4 sync_block_data_valid
       (.data_out(data_valid_reg2),
        .independent_clock_bufg(independent_clock_bufg),
        .status_vector(status_vector));
  LUT1 #(
    .INIT(2'h1)) 
    toggle_i_1
       (.I0(toggle),
        .O(toggle_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    toggle_reg
       (.C(CLK),
        .CE(1'b1),
        .D(toggle_i_1_n_0),
        .Q(toggle),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    txbuferr_reg
       (.C(CLK),
        .CE(1'b1),
        .D(txbufstatus_reg),
        .Q(txbuferr),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txbufstatus_reg_reg[1] 
       (.C(reset_sync6),
        .CE(1'b1),
        .D(gtwizard_inst_n_4),
        .Q(txbufstatus_reg),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txchardispmode_double_reg[0] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(txchardispmode_reg),
        .Q(txchardispmode_double[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \txchardispmode_double_reg[1] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(D),
        .Q(txchardispmode_double[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \txchardispmode_int_reg[0] 
       (.C(reset_sync6),
        .CE(1'b1),
        .D(txchardispmode_double[0]),
        .Q(txchardispmode_int[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txchardispmode_int_reg[1] 
       (.C(reset_sync6),
        .CE(1'b1),
        .D(txchardispmode_double[1]),
        .Q(txchardispmode_int[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    txchardispmode_reg_reg
       (.C(CLK),
        .CE(1'b1),
        .D(D),
        .Q(txchardispmode_reg),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \txchardispval_double_reg[0] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(txchardispval_reg),
        .Q(txchardispval_double[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \txchardispval_double_reg[1] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(txchardispval_reg_reg_0),
        .Q(txchardispval_double[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \txchardispval_int_reg[0] 
       (.C(reset_sync6),
        .CE(1'b1),
        .D(txchardispval_double[0]),
        .Q(txchardispval_int[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txchardispval_int_reg[1] 
       (.C(reset_sync6),
        .CE(1'b1),
        .D(txchardispval_double[1]),
        .Q(txchardispval_int[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    txchardispval_reg_reg
       (.C(CLK),
        .CE(1'b1),
        .D(txchardispval_reg_reg_0),
        .Q(txchardispval_reg),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \txcharisk_double_reg[0] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(txcharisk_reg),
        .Q(txcharisk_double[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \txcharisk_double_reg[1] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(txcharisk_reg_reg_0),
        .Q(txcharisk_double[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \txcharisk_int_reg[0] 
       (.C(reset_sync6),
        .CE(1'b1),
        .D(txcharisk_double[0]),
        .Q(txcharisk_int[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txcharisk_int_reg[1] 
       (.C(reset_sync6),
        .CE(1'b1),
        .D(txcharisk_double[1]),
        .Q(txcharisk_int[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    txcharisk_reg_reg
       (.C(CLK),
        .CE(1'b1),
        .D(txcharisk_reg_reg_0),
        .Q(txcharisk_reg),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_double_reg[0] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(txdata_reg[0]),
        .Q(txdata_double[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_double_reg[10] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(\txdata_reg_reg[7]_0 [2]),
        .Q(txdata_double[10]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_double_reg[11] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(\txdata_reg_reg[7]_0 [3]),
        .Q(txdata_double[11]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_double_reg[12] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(\txdata_reg_reg[7]_0 [4]),
        .Q(txdata_double[12]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_double_reg[13] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(\txdata_reg_reg[7]_0 [5]),
        .Q(txdata_double[13]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_double_reg[14] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(\txdata_reg_reg[7]_0 [6]),
        .Q(txdata_double[14]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_double_reg[15] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(\txdata_reg_reg[7]_0 [7]),
        .Q(txdata_double[15]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_double_reg[1] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(txdata_reg[1]),
        .Q(txdata_double[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_double_reg[2] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(txdata_reg[2]),
        .Q(txdata_double[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_double_reg[3] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(txdata_reg[3]),
        .Q(txdata_double[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_double_reg[4] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(txdata_reg[4]),
        .Q(txdata_double[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_double_reg[5] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(txdata_reg[5]),
        .Q(txdata_double[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_double_reg[6] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(txdata_reg[6]),
        .Q(txdata_double[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_double_reg[7] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(txdata_reg[7]),
        .Q(txdata_double[7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_double_reg[8] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(\txdata_reg_reg[7]_0 [0]),
        .Q(txdata_double[8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_double_reg[9] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(\txdata_reg_reg[7]_0 [1]),
        .Q(txdata_double[9]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_int_reg[0] 
       (.C(reset_sync6),
        .CE(1'b1),
        .D(txdata_double[0]),
        .Q(txdata_int[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_int_reg[10] 
       (.C(reset_sync6),
        .CE(1'b1),
        .D(txdata_double[10]),
        .Q(txdata_int[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_int_reg[11] 
       (.C(reset_sync6),
        .CE(1'b1),
        .D(txdata_double[11]),
        .Q(txdata_int[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_int_reg[12] 
       (.C(reset_sync6),
        .CE(1'b1),
        .D(txdata_double[12]),
        .Q(txdata_int[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_int_reg[13] 
       (.C(reset_sync6),
        .CE(1'b1),
        .D(txdata_double[13]),
        .Q(txdata_int[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_int_reg[14] 
       (.C(reset_sync6),
        .CE(1'b1),
        .D(txdata_double[14]),
        .Q(txdata_int[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_int_reg[15] 
       (.C(reset_sync6),
        .CE(1'b1),
        .D(txdata_double[15]),
        .Q(txdata_int[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_int_reg[1] 
       (.C(reset_sync6),
        .CE(1'b1),
        .D(txdata_double[1]),
        .Q(txdata_int[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_int_reg[2] 
       (.C(reset_sync6),
        .CE(1'b1),
        .D(txdata_double[2]),
        .Q(txdata_int[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_int_reg[3] 
       (.C(reset_sync6),
        .CE(1'b1),
        .D(txdata_double[3]),
        .Q(txdata_int[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_int_reg[4] 
       (.C(reset_sync6),
        .CE(1'b1),
        .D(txdata_double[4]),
        .Q(txdata_int[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_int_reg[5] 
       (.C(reset_sync6),
        .CE(1'b1),
        .D(txdata_double[5]),
        .Q(txdata_int[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_int_reg[6] 
       (.C(reset_sync6),
        .CE(1'b1),
        .D(txdata_double[6]),
        .Q(txdata_int[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_int_reg[7] 
       (.C(reset_sync6),
        .CE(1'b1),
        .D(txdata_double[7]),
        .Q(txdata_int[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_int_reg[8] 
       (.C(reset_sync6),
        .CE(1'b1),
        .D(txdata_double[8]),
        .Q(txdata_int[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_int_reg[9] 
       (.C(reset_sync6),
        .CE(1'b1),
        .D(txdata_double[9]),
        .Q(txdata_int[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_reg_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\txdata_reg_reg[7]_0 [0]),
        .Q(txdata_reg[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_reg_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\txdata_reg_reg[7]_0 [1]),
        .Q(txdata_reg[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_reg_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(\txdata_reg_reg[7]_0 [2]),
        .Q(txdata_reg[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_reg_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(\txdata_reg_reg[7]_0 [3]),
        .Q(txdata_reg[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_reg_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(\txdata_reg_reg[7]_0 [4]),
        .Q(txdata_reg[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_reg_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(\txdata_reg_reg[7]_0 [5]),
        .Q(txdata_reg[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_reg_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(\txdata_reg_reg[7]_0 [6]),
        .Q(txdata_reg[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_reg_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(\txdata_reg_reg[7]_0 [7]),
        .Q(txdata_reg[7]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "gig_ethernet_pcs_pma_0_tx_rate_adapt" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_0_tx_rate_adapt
   (gmii_tx_en,
    gmii_tx_er,
    Q,
    reset_out,
    E,
    gmii_tx_en_out_reg_0,
    CLK,
    gmii_tx_er_out_reg_0,
    gmii_txd);
  output gmii_tx_en;
  output gmii_tx_er;
  output [7:0]Q;
  input reset_out;
  input [0:0]E;
  input gmii_tx_en_out_reg_0;
  input CLK;
  input gmii_tx_er_out_reg_0;
  input [7:0]gmii_txd;

  wire CLK;
  wire [0:0]E;
  wire [7:0]Q;
  wire gmii_tx_en;
  wire gmii_tx_en_out_reg_0;
  wire gmii_tx_er;
  wire gmii_tx_er_out_reg_0;
  wire [7:0]gmii_txd;
  wire reset_out;

  FDRE #(
    .INIT(1'b0)) 
    gmii_tx_en_out_reg
       (.C(CLK),
        .CE(E),
        .D(gmii_tx_en_out_reg_0),
        .Q(gmii_tx_en),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    gmii_tx_er_out_reg
       (.C(CLK),
        .CE(E),
        .D(gmii_tx_er_out_reg_0),
        .Q(gmii_tx_er),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \gmii_txd_out_reg[0] 
       (.C(CLK),
        .CE(E),
        .D(gmii_txd[0]),
        .Q(Q[0]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \gmii_txd_out_reg[1] 
       (.C(CLK),
        .CE(E),
        .D(gmii_txd[1]),
        .Q(Q[1]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \gmii_txd_out_reg[2] 
       (.C(CLK),
        .CE(E),
        .D(gmii_txd[2]),
        .Q(Q[2]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \gmii_txd_out_reg[3] 
       (.C(CLK),
        .CE(E),
        .D(gmii_txd[3]),
        .Q(Q[3]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \gmii_txd_out_reg[4] 
       (.C(CLK),
        .CE(E),
        .D(gmii_txd[4]),
        .Q(Q[4]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \gmii_txd_out_reg[5] 
       (.C(CLK),
        .CE(E),
        .D(gmii_txd[5]),
        .Q(Q[5]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \gmii_txd_out_reg[6] 
       (.C(CLK),
        .CE(E),
        .D(gmii_txd[6]),
        .Q(Q[6]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \gmii_txd_out_reg[7] 
       (.C(CLK),
        .CE(E),
        .D(gmii_txd[7]),
        .Q(Q[7]),
        .R(reset_out));
endmodule

(* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "tri_mode_ethernet_mac_0_block,Vivado 2020.1" *) 
module tri_mode_ethernet_mac_0
   (gtx_clk,
    glbl_rstn,
    rx_axi_rstn,
    tx_axi_rstn,
    rx_statistics_vector,
    rx_statistics_valid,
    rx_mac_aclk,
    rx_reset,
    rx_axis_mac_tdata,
    rx_axis_mac_tvalid,
    rx_axis_mac_tlast,
    rx_axis_mac_tuser,
    tx_ifg_delay,
    tx_statistics_vector,
    tx_statistics_valid,
    tx_mac_aclk,
    tx_reset,
    tx_axis_mac_tdata,
    tx_axis_mac_tvalid,
    tx_axis_mac_tlast,
    tx_axis_mac_tuser,
    tx_axis_mac_tready,
    pause_req,
    pause_val,
    speedis100,
    speedis10100,
    gmii_txd,
    gmii_tx_en,
    gmii_tx_er,
    gmii_rxd,
    gmii_rx_dv,
    gmii_rx_er,
    s_axi_aclk,
    s_axi_resetn,
    s_axi_awaddr,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_araddr,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rvalid,
    s_axi_rready,
    mac_irq);
  input gtx_clk;
  input glbl_rstn;
  input rx_axi_rstn;
  input tx_axi_rstn;
  output [27:0]rx_statistics_vector;
  output rx_statistics_valid;
  output rx_mac_aclk;
  output rx_reset;
  output [7:0]rx_axis_mac_tdata;
  output rx_axis_mac_tvalid;
  output rx_axis_mac_tlast;
  output rx_axis_mac_tuser;
  input [7:0]tx_ifg_delay;
  output [31:0]tx_statistics_vector;
  output tx_statistics_valid;
  output tx_mac_aclk;
  output tx_reset;
  input [7:0]tx_axis_mac_tdata;
  input tx_axis_mac_tvalid;
  input tx_axis_mac_tlast;
  input tx_axis_mac_tuser;
  output tx_axis_mac_tready;
  input pause_req;
  input [15:0]pause_val;
  output speedis100;
  output speedis10100;
  output [7:0]gmii_txd;
  output gmii_tx_en;
  output gmii_tx_er;
  input [7:0]gmii_rxd;
  input gmii_rx_dv;
  input gmii_rx_er;
  input s_axi_aclk;
  input s_axi_resetn;
  input [11:0]s_axi_awaddr;
  input s_axi_awvalid;
  output s_axi_awready;
  input [31:0]s_axi_wdata;
  input s_axi_wvalid;
  output s_axi_wready;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [11:0]s_axi_araddr;
  input s_axi_arvalid;
  output s_axi_arready;
  output [31:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rvalid;
  input s_axi_rready;
  output mac_irq;

  wire glbl_rstn;
  wire gmii_rx_dv;
  wire gmii_rx_er;
  wire [7:0]gmii_rxd;
  wire gmii_tx_en;
  wire gmii_tx_er;
  wire [7:0]gmii_txd;
  wire gtx_clk;
  wire [7:0]rx_axis_mac_tdata;
  wire rx_axis_mac_tlast;
  wire rx_axis_mac_tuser;
  wire rx_axis_mac_tvalid;
  wire rx_mac_aclk;
  wire rx_reset;
  wire rx_statistics_valid;
  wire s_axi_aclk;
  wire [11:0]s_axi_araddr;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [11:0]s_axi_awaddr;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire s_axi_resetn;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire speedis100;
  wire speedis10100;
  wire [7:0]tx_axis_mac_tdata;
  wire tx_axis_mac_tlast;
  wire tx_axis_mac_tready;
  wire tx_axis_mac_tvalid;
  wire tx_mac_aclk;
  wire tx_reset;
  wire tx_statistics_valid;
  wire NLW_inst_mac_irq_UNCONNECTED;
  wire NLW_inst_pause_req_UNCONNECTED;
  wire NLW_inst_rx_axi_rstn_UNCONNECTED;
  wire NLW_inst_tx_axi_rstn_UNCONNECTED;
  wire NLW_inst_tx_axis_mac_tuser_UNCONNECTED;
  wire [15:0]NLW_inst_pause_val_UNCONNECTED;
  wire [27:0]NLW_inst_rx_statistics_vector_UNCONNECTED;
  wire [11:0]NLW_inst_s_axi_araddr_UNCONNECTED;
  wire [11:0]NLW_inst_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_bresp_UNCONNECTED;
  wire [31:0]NLW_inst_s_axi_rdata_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_rresp_UNCONNECTED;
  wire [30:5]NLW_inst_s_axi_wdata_UNCONNECTED;
  wire [7:0]NLW_inst_tx_ifg_delay_UNCONNECTED;
  wire [31:0]NLW_inst_tx_statistics_vector_UNCONNECTED;

  tri_mode_ethernet_mac_0_tri_mode_ethernet_mac_0_block inst
       (.glbl_rstn(glbl_rstn),
        .gmii_rx_dv(gmii_rx_dv),
        .gmii_rx_er(gmii_rx_er),
        .gmii_rxd(gmii_rxd),
        .gmii_tx_en(gmii_tx_en),
        .gmii_tx_er(gmii_tx_er),
        .gmii_txd(gmii_txd),
        .gtx_clk(gtx_clk),
        .mac_irq(NLW_inst_mac_irq_UNCONNECTED),
        .pause_req(NLW_inst_pause_req_UNCONNECTED),
        .pause_val(NLW_inst_pause_val_UNCONNECTED[15:0]),
        .rx_axi_rstn(NLW_inst_rx_axi_rstn_UNCONNECTED),
        .rx_axis_mac_tdata(rx_axis_mac_tdata),
        .rx_axis_mac_tlast(rx_axis_mac_tlast),
        .rx_axis_mac_tuser(rx_axis_mac_tuser),
        .rx_axis_mac_tvalid(rx_axis_mac_tvalid),
        .rx_mac_aclk(rx_mac_aclk),
        .rx_reset(rx_reset),
        .rx_statistics_valid(rx_statistics_valid),
        .rx_statistics_vector(NLW_inst_rx_statistics_vector_UNCONNECTED[27:0]),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr({NLW_inst_s_axi_araddr_UNCONNECTED[11],s_axi_araddr[10:8],NLW_inst_s_axi_araddr_UNCONNECTED[7:5],s_axi_araddr[4:2],NLW_inst_s_axi_araddr_UNCONNECTED[1:0]}),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr({NLW_inst_s_axi_awaddr_UNCONNECTED[11],s_axi_awaddr[10:8],NLW_inst_s_axi_awaddr_UNCONNECTED[7:5],s_axi_awaddr[4:2],NLW_inst_s_axi_awaddr_UNCONNECTED[1:0]}),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(NLW_inst_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rdata(NLW_inst_s_axi_rdata_UNCONNECTED[31:0]),
        .s_axi_resetn(s_axi_resetn),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(NLW_inst_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata({s_axi_wdata[31],NLW_inst_s_axi_wdata_UNCONNECTED[30:29],s_axi_wdata[28],NLW_inst_s_axi_wdata_UNCONNECTED[27],s_axi_wdata[26],NLW_inst_s_axi_wdata_UNCONNECTED[25:18],s_axi_wdata[17:16],NLW_inst_s_axi_wdata_UNCONNECTED[15:11],s_axi_wdata[10:9],NLW_inst_s_axi_wdata_UNCONNECTED[8],s_axi_wdata[7:6],NLW_inst_s_axi_wdata_UNCONNECTED[5],s_axi_wdata[4:0]}),
        .s_axi_wready(s_axi_wready),
        .s_axi_wvalid(s_axi_wvalid),
        .speedis100(speedis100),
        .speedis10100(speedis10100),
        .tx_axi_rstn(NLW_inst_tx_axi_rstn_UNCONNECTED),
        .tx_axis_mac_tdata(tx_axis_mac_tdata),
        .tx_axis_mac_tlast(tx_axis_mac_tlast),
        .tx_axis_mac_tready(tx_axis_mac_tready),
        .tx_axis_mac_tuser(NLW_inst_tx_axis_mac_tuser_UNCONNECTED),
        .tx_axis_mac_tvalid(tx_axis_mac_tvalid),
        .tx_ifg_delay(NLW_inst_tx_ifg_delay_UNCONNECTED[7:0]),
        .tx_mac_aclk(tx_mac_aclk),
        .tx_reset(tx_reset),
        .tx_statistics_valid(tx_statistics_valid),
        .tx_statistics_vector(NLW_inst_tx_statistics_vector_UNCONNECTED[31:0]));
endmodule

(* ORIG_REF_NAME = "address_decoder" *) 
module tri_mode_ethernet_mac_0_address_decoder
   (\MEM_DECODE_GEN[0].cs_out_i_reg[0]_0 ,
    local_wrack_reg,
    local_rdack_reg,
    \MEM_DECODE_GEN[0].cs_out_i_reg[0]_1 ,
    bus2ip_rdce,
    bus2ip_wrce,
    ip2bus_rdack_reg,
    ip2bus_wrack_reg,
    s_axi_aclk,
    local_wrack_reg_0,
    local_wrack1,
    s_axi_resetn,
    local_rdack_reg_0,
    bus2ip_rnw_i,
    Q,
    ip2bus_wrack,
    s_axi_wready,
    ip2bus_rdack,
    s_axi_arready,
    s_axi_arready_0);
  output \MEM_DECODE_GEN[0].cs_out_i_reg[0]_0 ;
  output local_wrack_reg;
  output local_rdack_reg;
  output \MEM_DECODE_GEN[0].cs_out_i_reg[0]_1 ;
  output bus2ip_rdce;
  output bus2ip_wrce;
  output ip2bus_rdack_reg;
  output ip2bus_wrack_reg;
  input s_axi_aclk;
  input local_wrack_reg_0;
  input local_wrack1;
  input s_axi_resetn;
  input local_rdack_reg_0;
  input bus2ip_rnw_i;
  input Q;
  input ip2bus_wrack;
  input s_axi_wready;
  input ip2bus_rdack;
  input s_axi_arready;
  input [6:0]s_axi_arready_0;

  wire Bus_RNW_reg;
  wire Bus_RNW_reg_i_1_n_0;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i[0]_i_1_n_0 ;
  wire \MEM_DECODE_GEN[0].cs_out_i[0]_i_1_n_0 ;
  wire \MEM_DECODE_GEN[0].cs_out_i_reg[0]_0 ;
  wire \MEM_DECODE_GEN[0].cs_out_i_reg[0]_1 ;
  wire Q;
  wire bus2ip_rdce;
  wire bus2ip_rnw_i;
  wire bus2ip_wrce;
  wire ce_out_i;
  wire ip2bus_rdack;
  wire ip2bus_rdack_reg;
  wire ip2bus_wrack;
  wire ip2bus_wrack_reg;
  wire local_rdack_reg;
  wire local_rdack_reg_0;
  wire local_wrack1;
  wire local_wrack_reg;
  wire local_wrack_reg_0;
  wire s_axi_aclk;
  wire s_axi_arready;
  wire [6:0]s_axi_arready_0;
  wire s_axi_resetn;
  wire s_axi_wready;
  wire s_axi_wready_INST_0_i_1_n_0;
  wire s_axi_wready_INST_0_i_2_n_0;

  LUT3 #(
    .INIT(8'hB8)) 
    Bus_RNW_reg_i_1
       (.I0(bus2ip_rnw_i),
        .I1(Q),
        .I2(Bus_RNW_reg),
        .O(Bus_RNW_reg_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Bus_RNW_reg_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Bus_RNW_reg_i_1_n_0),
        .Q(Bus_RNW_reg),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h000000E0)) 
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i[0]_i_1 
       (.I0(ce_out_i),
        .I1(Q),
        .I2(s_axi_resetn),
        .I3(ip2bus_rdack_reg),
        .I4(ip2bus_wrack_reg),
        .O(\GEN_BKEND_CE_REGISTERS[0].ce_out_i[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\GEN_BKEND_CE_REGISTERS[0].ce_out_i[0]_i_1_n_0 ),
        .Q(ce_out_i),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT5 #(
    .INIT(32'h000000E0)) 
    \MEM_DECODE_GEN[0].cs_out_i[0]_i_1 
       (.I0(\MEM_DECODE_GEN[0].cs_out_i_reg[0]_0 ),
        .I1(Q),
        .I2(s_axi_resetn),
        .I3(ip2bus_rdack_reg),
        .I4(ip2bus_wrack_reg),
        .O(\MEM_DECODE_GEN[0].cs_out_i[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DECODE_GEN[0].cs_out_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\MEM_DECODE_GEN[0].cs_out_i[0]_i_1_n_0 ),
        .Q(\MEM_DECODE_GEN[0].cs_out_i_reg[0]_0 ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT2 #(
    .INIT(4'h8)) 
    cs_edge_reg_i_1
       (.I0(\MEM_DECODE_GEN[0].cs_out_i_reg[0]_0 ),
        .I1(s_axi_resetn),
        .O(\MEM_DECODE_GEN[0].cs_out_i_reg[0]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT5 #(
    .INIT(32'hC8880000)) 
    local_rdack_i_1
       (.I0(local_rdack_reg_0),
        .I1(local_wrack1),
        .I2(ce_out_i),
        .I3(Bus_RNW_reg),
        .I4(s_axi_resetn),
        .O(local_rdack_reg));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT5 #(
    .INIT(32'h88C80000)) 
    local_wrack_i_1
       (.I0(local_wrack_reg_0),
        .I1(local_wrack1),
        .I2(ce_out_i),
        .I3(Bus_RNW_reg),
        .I4(s_axi_resetn),
        .O(local_wrack_reg));
  LUT5 #(
    .INIT(32'hEEEEFEEE)) 
    s_axi_arready_INST_0
       (.I0(ip2bus_rdack),
        .I1(local_rdack_reg_0),
        .I2(s_axi_arready),
        .I3(s_axi_wready_INST_0_i_1_n_0),
        .I4(s_axi_wready_INST_0_i_2_n_0),
        .O(ip2bus_rdack_reg));
  LUT5 #(
    .INIT(32'hEEEEFEEE)) 
    s_axi_wready_INST_0
       (.I0(ip2bus_wrack),
        .I1(local_wrack_reg_0),
        .I2(s_axi_wready),
        .I3(s_axi_wready_INST_0_i_1_n_0),
        .I4(s_axi_wready_INST_0_i_2_n_0),
        .O(ip2bus_wrack_reg));
  LUT3 #(
    .INIT(8'h01)) 
    s_axi_wready_INST_0_i_1
       (.I0(s_axi_arready_0[4]),
        .I1(s_axi_arready_0[3]),
        .I2(s_axi_arready_0[5]),
        .O(s_axi_wready_INST_0_i_1_n_0));
  LUT4 #(
    .INIT(16'hFFFB)) 
    s_axi_wready_INST_0_i_2
       (.I0(s_axi_arready_0[0]),
        .I1(s_axi_arready_0[6]),
        .I2(s_axi_arready_0[2]),
        .I3(s_axi_arready_0[1]),
        .O(s_axi_wready_INST_0_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT2 #(
    .INIT(4'h8)) 
    tri_mode_ethernet_mac_0_core_i_2
       (.I0(ce_out_i),
        .I1(Bus_RNW_reg),
        .O(bus2ip_rdce));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT2 #(
    .INIT(4'h2)) 
    tri_mode_ethernet_mac_0_core_i_3
       (.I0(ce_out_i),
        .I1(Bus_RNW_reg),
        .O(bus2ip_wrce));
endmodule

module tri_mode_ethernet_mac_0_address_swap
   (\wr_addr_reg[0]_0 ,
    tx_axis_fifo_tvalid_reg_0,
    tx_axis_fifo_tlast,
    p_16_out,
    p_23_out,
    wr_slot1,
    \rd_slot_reg[0]_0 ,
    \tx_axis_fifo_tdata_reg[7]_0 ,
    CLK,
    rx_axis_tdata_int,
    rx_axis_tlast_int,
    rx_axis_tvalid_int,
    SR,
    tx_axis_fifo_tlast_int_reg_0,
    tx_axis_fifo_tvalid_reg_1,
    wr_eof_reg,
    rx_fifo_resetn,
    \FSM_sequential_wr_state_reg[1]_0 ,
    E);
  output \wr_addr_reg[0]_0 ;
  output tx_axis_fifo_tvalid_reg_0;
  output tx_axis_fifo_tlast;
  output p_16_out;
  output p_23_out;
  output wr_slot1;
  output \rd_slot_reg[0]_0 ;
  output [7:0]\tx_axis_fifo_tdata_reg[7]_0 ;
  input CLK;
  input [7:0]rx_axis_tdata_int;
  input rx_axis_tlast_int;
  input rx_axis_tvalid_int;
  input [0:0]SR;
  input tx_axis_fifo_tlast_int_reg_0;
  input tx_axis_fifo_tvalid_reg_1;
  input wr_eof_reg;
  input rx_fifo_resetn;
  input \FSM_sequential_wr_state_reg[1]_0 ;
  input [0:0]E;

  wire CLK;
  wire [0:0]E;
  wire \FSM_sequential_wr_state[0]_i_1_n_0 ;
  wire \FSM_sequential_wr_state[0]_i_2__0_n_0 ;
  wire \FSM_sequential_wr_state[0]_i_3_n_0 ;
  wire \FSM_sequential_wr_state[0]_i_4_n_0 ;
  wire \FSM_sequential_wr_state[0]_i_5_n_0 ;
  wire \FSM_sequential_wr_state[1]_i_1_n_0 ;
  wire \FSM_sequential_wr_state[1]_i_2__0_n_0 ;
  wire \FSM_sequential_wr_state[1]_i_4__0_n_0 ;
  wire \FSM_sequential_wr_state[1]_i_5_n_0 ;
  wire \FSM_sequential_wr_state_reg[1]_0 ;
  wire [0:0]SR;
  wire address_swap;
  wire address_swap_i_1_n_0;
  wire [7:0]dob;
  wire fifo_full;
  wire fifo_full0;
  wire fifo_full_i_2_n_0;
  wire fifo_full_i_3_n_0;
  wire new_packet_start;
  wire new_packet_start_i_1_n_0;
  wire [5:0]p_0_in;
  wire p_16_out;
  wire [5:0]p_1_in;
  wire p_23_out;
  wire packet_waiting;
  wire packet_waiting018_out;
  wire packet_waiting_i_1_n_0;
  wire \ram_loop[0].RAM64X1D_inst_i_1__0_n_0 ;
  wire \rd_addr[0]_i_1__1_n_0 ;
  wire \rd_addr[1]_i_1__0_n_0 ;
  wire \rd_addr[2]_i_1__0_n_0 ;
  wire \rd_addr[2]_i_2_n_0 ;
  wire \rd_addr[2]_i_3_n_0 ;
  wire \rd_addr[2]_i_4_n_0 ;
  wire \rd_addr[2]_i_5_n_0 ;
  wire \rd_count[0]_i_1_n_0 ;
  wire \rd_count[1]_i_1_n_0 ;
  wire \rd_count[2]_i_1_n_0 ;
  wire \rd_count[3]_i_1_n_0 ;
  wire \rd_count[3]_i_3_n_0 ;
  wire rd_count_12;
  wire rd_count_12_i_1_n_0;
  wire rd_count_12_reg_n_0;
  wire rd_count_6;
  wire rd_count_6_i_1_n_0;
  wire \rd_count_reg_n_0_[0] ;
  wire \rd_count_reg_n_0_[1] ;
  wire \rd_count_reg_n_0_[2] ;
  wire \rd_count_reg_n_0_[3] ;
  wire rd_slot0;
  wire \rd_slot[0]_i_1_n_0 ;
  wire \rd_slot[0]_i_2_n_0 ;
  wire \rd_slot[1]_i_1_n_0 ;
  wire \rd_slot[1]_i_2_n_0 ;
  wire \rd_slot[1]_i_3_n_0 ;
  wire \rd_slot[2]_i_1_n_0 ;
  wire \rd_slot[2]_i_3_n_0 ;
  wire \rd_slot_reg[0]_0 ;
  wire [2:0]rd_state;
  wire \rd_state[0]_i_1_n_0 ;
  wire \rd_state[1]_i_1_n_0 ;
  wire \rd_state[2]_i_1_n_0 ;
  wire \rd_state[2]_i_2_n_0 ;
  wire \rd_state[2]_i_3_n_0 ;
  wire \rd_state[2]_i_4_n_0 ;
  wire \rd_state[2]_i_5_n_0 ;
  wire rx_axis_fifo_tlast_reg;
  wire rx_axis_fifo_tvalid_reg;
  wire [7:0]rx_axis_tdata_int;
  wire rx_axis_tlast_int;
  wire rx_axis_tvalid_int;
  wire rx_fifo_resetn;
  wire \tx_axis_fifo_tdata[7]_i_3_n_0 ;
  wire [7:0]\tx_axis_fifo_tdata_reg[7]_0 ;
  wire tx_axis_fifo_tlast;
  wire tx_axis_fifo_tlast_int_reg_0;
  wire tx_axis_fifo_tvalid_i_1_n_0;
  wire tx_axis_fifo_tvalid_reg_0;
  wire tx_axis_fifo_tvalid_reg_1;
  wire \wr_addr[0]_i_1_n_0 ;
  wire \wr_addr[1]_i_1_n_0 ;
  wire \wr_addr[1]_i_2_n_0 ;
  wire \wr_addr[2]_i_1_n_0 ;
  wire \wr_addr[2]_i_2_n_0 ;
  wire \wr_addr_reg[0]_0 ;
  wire \wr_count[0]_i_1_n_0 ;
  wire \wr_count[1]_i_1_n_0 ;
  wire \wr_count[2]_i_1_n_0 ;
  wire \wr_count[3]_i_1_n_0 ;
  wire \wr_count_reg_n_0_[0] ;
  wire \wr_count_reg_n_0_[1] ;
  wire \wr_count_reg_n_0_[2] ;
  wire \wr_count_reg_n_0_[3] ;
  wire wr_eof_reg;
  wire wr_slot1;
  wire \wr_slot[0]_i_1_n_0 ;
  wire \wr_slot[1]_i_1_n_0 ;
  wire \wr_slot[2]_i_1_n_0 ;
  wire \wr_slot[2]_i_2_n_0 ;
  wire \wr_slot[2]_i_3_n_0 ;
  wire [1:0]wr_state_reg;
  wire \NLW_ram_loop[0].RAM64X1D_inst_SPO_UNCONNECTED ;
  wire \NLW_ram_loop[1].RAM64X1D_inst_SPO_UNCONNECTED ;
  wire \NLW_ram_loop[2].RAM64X1D_inst_SPO_UNCONNECTED ;
  wire \NLW_ram_loop[3].RAM64X1D_inst_SPO_UNCONNECTED ;
  wire \NLW_ram_loop[4].RAM64X1D_inst_SPO_UNCONNECTED ;
  wire \NLW_ram_loop[5].RAM64X1D_inst_SPO_UNCONNECTED ;
  wire \NLW_ram_loop[6].RAM64X1D_inst_SPO_UNCONNECTED ;
  wire \NLW_ram_loop[7].RAM64X1D_inst_SPO_UNCONNECTED ;
  wire \NLW_ram_loop[8].RAM64X1D_inst_SPO_UNCONNECTED ;

  LUT6 #(
    .INIT(64'hFFFFFFF40000FFF0)) 
    \FSM_sequential_wr_state[0]_i_1 
       (.I0(\FSM_sequential_wr_state_reg[1]_0 ),
        .I1(wr_state_reg[1]),
        .I2(\FSM_sequential_wr_state[0]_i_2__0_n_0 ),
        .I3(\FSM_sequential_wr_state[0]_i_3_n_0 ),
        .I4(fifo_full),
        .I5(wr_state_reg[0]),
        .O(\FSM_sequential_wr_state[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0020)) 
    \FSM_sequential_wr_state[0]_i_2__0 
       (.I0(wr_state_reg[1]),
        .I1(wr_state_reg[0]),
        .I2(rx_axis_tvalid_int),
        .I3(\FSM_sequential_wr_state[0]_i_4_n_0 ),
        .O(\FSM_sequential_wr_state[0]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAABAFFAAAA)) 
    \FSM_sequential_wr_state[0]_i_3 
       (.I0(packet_waiting018_out),
        .I1(rx_axis_tlast_int),
        .I2(\FSM_sequential_wr_state[0]_i_5_n_0 ),
        .I3(rx_axis_tvalid_int),
        .I4(wr_state_reg[0]),
        .I5(wr_state_reg[1]),
        .O(\FSM_sequential_wr_state[0]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFFF7)) 
    \FSM_sequential_wr_state[0]_i_4 
       (.I0(\wr_count_reg_n_0_[2] ),
        .I1(\wr_count_reg_n_0_[3] ),
        .I2(\wr_count_reg_n_0_[0] ),
        .I3(\wr_count_reg_n_0_[1] ),
        .O(\FSM_sequential_wr_state[0]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hFFDF)) 
    \FSM_sequential_wr_state[0]_i_5 
       (.I0(\wr_count_reg_n_0_[1] ),
        .I1(\wr_count_reg_n_0_[0] ),
        .I2(\wr_count_reg_n_0_[2] ),
        .I3(\wr_count_reg_n_0_[3] ),
        .O(\FSM_sequential_wr_state[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFAFBF0000AAAA)) 
    \FSM_sequential_wr_state[1]_i_1 
       (.I0(\FSM_sequential_wr_state[1]_i_2__0_n_0 ),
        .I1(wr_state_reg[0]),
        .I2(\FSM_sequential_wr_state_reg[1]_0 ),
        .I3(\FSM_sequential_wr_state[1]_i_4__0_n_0 ),
        .I4(fifo_full),
        .I5(wr_state_reg[1]),
        .O(\FSM_sequential_wr_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000080000000000)) 
    \FSM_sequential_wr_state[1]_i_2__0 
       (.I0(\FSM_sequential_wr_state[1]_i_5_n_0 ),
        .I1(\wr_count_reg_n_0_[1] ),
        .I2(\wr_count_reg_n_0_[0] ),
        .I3(\wr_count_reg_n_0_[2] ),
        .I4(\wr_count_reg_n_0_[3] ),
        .I5(rx_axis_tvalid_int),
        .O(\FSM_sequential_wr_state[1]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'hEFFFFFFF)) 
    \FSM_sequential_wr_state[1]_i_4__0 
       (.I0(\wr_count_reg_n_0_[1] ),
        .I1(\wr_count_reg_n_0_[0] ),
        .I2(\wr_count_reg_n_0_[3] ),
        .I3(\wr_count_reg_n_0_[2] ),
        .I4(rx_axis_tvalid_int),
        .O(\FSM_sequential_wr_state[1]_i_4__0_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_wr_state[1]_i_5 
       (.I0(wr_state_reg[0]),
        .I1(wr_state_reg[1]),
        .O(\FSM_sequential_wr_state[1]_i_5_n_0 ));
  (* FSM_ENCODED_STATES = "P_3676AD20:01,P_367AFB90:10,P_367AFB30:11,P_367AFBF0:00" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_wr_state_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\FSM_sequential_wr_state[0]_i_1_n_0 ),
        .Q(wr_state_reg[0]),
        .R(SR));
  (* FSM_ENCODED_STATES = "P_3676AD20:01,P_367AFB90:10,P_367AFB30:11,P_367AFBF0:00" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_wr_state_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\FSM_sequential_wr_state[1]_i_1_n_0 ),
        .Q(wr_state_reg[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'hFF01)) 
    address_swap_i_1
       (.I0(rd_state[1]),
        .I1(rd_state[0]),
        .I2(rd_state[2]),
        .I3(address_swap),
        .O(address_swap_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    address_swap_reg
       (.C(CLK),
        .CE(1'b1),
        .D(address_swap_i_1_n_0),
        .Q(address_swap),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0210100102100210)) 
    fifo_full_i_1
       (.I0(fifo_full_i_2_n_0),
        .I1(fifo_full_i_3_n_0),
        .I2(p_0_in[4]),
        .I3(p_1_in[4]),
        .I4(p_1_in[3]),
        .I5(p_0_in[3]),
        .O(fifo_full0));
  LUT2 #(
    .INIT(4'h6)) 
    fifo_full_i_2
       (.I0(p_0_in[5]),
        .I1(p_1_in[5]),
        .O(fifo_full_i_2_n_0));
  LUT2 #(
    .INIT(4'h7)) 
    fifo_full_i_3
       (.I0(wr_state_reg[1]),
        .I1(wr_state_reg[0]),
        .O(fifo_full_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    fifo_full_reg
       (.C(CLK),
        .CE(1'b1),
        .D(fifo_full0),
        .Q(fifo_full),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFF00000B000000)) 
    new_packet_start_i_1
       (.I0(rx_axis_fifo_tlast_reg),
        .I1(rx_axis_fifo_tvalid_reg),
        .I2(packet_waiting),
        .I3(rx_axis_tvalid_int),
        .I4(\rd_state[2]_i_2_n_0 ),
        .I5(new_packet_start),
        .O(new_packet_start_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    new_packet_start_reg
       (.C(CLK),
        .CE(1'b1),
        .D(new_packet_start_i_1_n_0),
        .Q(new_packet_start),
        .R(SR));
  LUT6 #(
    .INIT(64'h0101010101000000)) 
    packet_waiting_i_1
       (.I0(rd_state[1]),
        .I1(rd_state[0]),
        .I2(rd_state[2]),
        .I3(\rd_state[2]_i_2_n_0 ),
        .I4(new_packet_start),
        .I5(packet_waiting),
        .O(packet_waiting_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    packet_waiting_reg
       (.C(CLK),
        .CE(1'b1),
        .D(packet_waiting_i_1_n_0),
        .Q(packet_waiting),
        .R(SR));
  (* BOX_TYPE = "PRIMITIVE" *) 
  RAM64X1D #(
    .INIT(64'h0000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \ram_loop[0].RAM64X1D_inst 
       (.A0(p_1_in[0]),
        .A1(p_1_in[1]),
        .A2(p_1_in[2]),
        .A3(p_1_in[3]),
        .A4(p_1_in[4]),
        .A5(p_1_in[5]),
        .D(rx_axis_tdata_int[0]),
        .DPO(dob[0]),
        .DPRA0(p_0_in[0]),
        .DPRA1(p_0_in[1]),
        .DPRA2(p_0_in[2]),
        .DPRA3(p_0_in[3]),
        .DPRA4(p_0_in[4]),
        .DPRA5(p_0_in[5]),
        .SPO(\NLW_ram_loop[0].RAM64X1D_inst_SPO_UNCONNECTED ),
        .WCLK(CLK),
        .WE(\ram_loop[0].RAM64X1D_inst_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'h54)) 
    \ram_loop[0].RAM64X1D_inst_i_1__0 
       (.I0(fifo_full),
        .I1(wr_state_reg[0]),
        .I2(wr_state_reg[1]),
        .O(\ram_loop[0].RAM64X1D_inst_i_1__0_n_0 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  RAM64X1D #(
    .INIT(64'h0000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \ram_loop[1].RAM64X1D_inst 
       (.A0(p_1_in[0]),
        .A1(p_1_in[1]),
        .A2(p_1_in[2]),
        .A3(p_1_in[3]),
        .A4(p_1_in[4]),
        .A5(p_1_in[5]),
        .D(rx_axis_tdata_int[1]),
        .DPO(dob[1]),
        .DPRA0(p_0_in[0]),
        .DPRA1(p_0_in[1]),
        .DPRA2(p_0_in[2]),
        .DPRA3(p_0_in[3]),
        .DPRA4(p_0_in[4]),
        .DPRA5(p_0_in[5]),
        .SPO(\NLW_ram_loop[1].RAM64X1D_inst_SPO_UNCONNECTED ),
        .WCLK(CLK),
        .WE(\ram_loop[0].RAM64X1D_inst_i_1__0_n_0 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  RAM64X1D #(
    .INIT(64'h0000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \ram_loop[2].RAM64X1D_inst 
       (.A0(p_1_in[0]),
        .A1(p_1_in[1]),
        .A2(p_1_in[2]),
        .A3(p_1_in[3]),
        .A4(p_1_in[4]),
        .A5(p_1_in[5]),
        .D(rx_axis_tdata_int[2]),
        .DPO(dob[2]),
        .DPRA0(p_0_in[0]),
        .DPRA1(p_0_in[1]),
        .DPRA2(p_0_in[2]),
        .DPRA3(p_0_in[3]),
        .DPRA4(p_0_in[4]),
        .DPRA5(p_0_in[5]),
        .SPO(\NLW_ram_loop[2].RAM64X1D_inst_SPO_UNCONNECTED ),
        .WCLK(CLK),
        .WE(\ram_loop[0].RAM64X1D_inst_i_1__0_n_0 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  RAM64X1D #(
    .INIT(64'h0000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \ram_loop[3].RAM64X1D_inst 
       (.A0(p_1_in[0]),
        .A1(p_1_in[1]),
        .A2(p_1_in[2]),
        .A3(p_1_in[3]),
        .A4(p_1_in[4]),
        .A5(p_1_in[5]),
        .D(rx_axis_tdata_int[3]),
        .DPO(dob[3]),
        .DPRA0(p_0_in[0]),
        .DPRA1(p_0_in[1]),
        .DPRA2(p_0_in[2]),
        .DPRA3(p_0_in[3]),
        .DPRA4(p_0_in[4]),
        .DPRA5(p_0_in[5]),
        .SPO(\NLW_ram_loop[3].RAM64X1D_inst_SPO_UNCONNECTED ),
        .WCLK(CLK),
        .WE(\ram_loop[0].RAM64X1D_inst_i_1__0_n_0 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  RAM64X1D #(
    .INIT(64'h0000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \ram_loop[4].RAM64X1D_inst 
       (.A0(p_1_in[0]),
        .A1(p_1_in[1]),
        .A2(p_1_in[2]),
        .A3(p_1_in[3]),
        .A4(p_1_in[4]),
        .A5(p_1_in[5]),
        .D(rx_axis_tdata_int[4]),
        .DPO(dob[4]),
        .DPRA0(p_0_in[0]),
        .DPRA1(p_0_in[1]),
        .DPRA2(p_0_in[2]),
        .DPRA3(p_0_in[3]),
        .DPRA4(p_0_in[4]),
        .DPRA5(p_0_in[5]),
        .SPO(\NLW_ram_loop[4].RAM64X1D_inst_SPO_UNCONNECTED ),
        .WCLK(CLK),
        .WE(\ram_loop[0].RAM64X1D_inst_i_1__0_n_0 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  RAM64X1D #(
    .INIT(64'h0000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \ram_loop[5].RAM64X1D_inst 
       (.A0(p_1_in[0]),
        .A1(p_1_in[1]),
        .A2(p_1_in[2]),
        .A3(p_1_in[3]),
        .A4(p_1_in[4]),
        .A5(p_1_in[5]),
        .D(rx_axis_tdata_int[5]),
        .DPO(dob[5]),
        .DPRA0(p_0_in[0]),
        .DPRA1(p_0_in[1]),
        .DPRA2(p_0_in[2]),
        .DPRA3(p_0_in[3]),
        .DPRA4(p_0_in[4]),
        .DPRA5(p_0_in[5]),
        .SPO(\NLW_ram_loop[5].RAM64X1D_inst_SPO_UNCONNECTED ),
        .WCLK(CLK),
        .WE(\ram_loop[0].RAM64X1D_inst_i_1__0_n_0 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  RAM64X1D #(
    .INIT(64'h0000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \ram_loop[6].RAM64X1D_inst 
       (.A0(p_1_in[0]),
        .A1(p_1_in[1]),
        .A2(p_1_in[2]),
        .A3(p_1_in[3]),
        .A4(p_1_in[4]),
        .A5(p_1_in[5]),
        .D(rx_axis_tdata_int[6]),
        .DPO(dob[6]),
        .DPRA0(p_0_in[0]),
        .DPRA1(p_0_in[1]),
        .DPRA2(p_0_in[2]),
        .DPRA3(p_0_in[3]),
        .DPRA4(p_0_in[4]),
        .DPRA5(p_0_in[5]),
        .SPO(\NLW_ram_loop[6].RAM64X1D_inst_SPO_UNCONNECTED ),
        .WCLK(CLK),
        .WE(\ram_loop[0].RAM64X1D_inst_i_1__0_n_0 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  RAM64X1D #(
    .INIT(64'h0000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \ram_loop[7].RAM64X1D_inst 
       (.A0(p_1_in[0]),
        .A1(p_1_in[1]),
        .A2(p_1_in[2]),
        .A3(p_1_in[3]),
        .A4(p_1_in[4]),
        .A5(p_1_in[5]),
        .D(rx_axis_tdata_int[7]),
        .DPO(dob[7]),
        .DPRA0(p_0_in[0]),
        .DPRA1(p_0_in[1]),
        .DPRA2(p_0_in[2]),
        .DPRA3(p_0_in[3]),
        .DPRA4(p_0_in[4]),
        .DPRA5(p_0_in[5]),
        .SPO(\NLW_ram_loop[7].RAM64X1D_inst_SPO_UNCONNECTED ),
        .WCLK(CLK),
        .WE(\ram_loop[0].RAM64X1D_inst_i_1__0_n_0 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  RAM64X1D #(
    .INIT(64'h0000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \ram_loop[8].RAM64X1D_inst 
       (.A0(p_1_in[0]),
        .A1(p_1_in[1]),
        .A2(p_1_in[2]),
        .A3(p_1_in[3]),
        .A4(p_1_in[4]),
        .A5(p_1_in[5]),
        .D(rx_axis_tlast_int),
        .DPO(\wr_addr_reg[0]_0 ),
        .DPRA0(p_0_in[0]),
        .DPRA1(p_0_in[1]),
        .DPRA2(p_0_in[2]),
        .DPRA3(p_0_in[3]),
        .DPRA4(p_0_in[4]),
        .DPRA5(p_0_in[5]),
        .SPO(\NLW_ram_loop[8].RAM64X1D_inst_SPO_UNCONNECTED ),
        .WCLK(CLK),
        .WE(\ram_loop[0].RAM64X1D_inst_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'h09)) 
    \rd_addr[0]_i_1__1 
       (.I0(\rd_addr[2]_i_2_n_0 ),
        .I1(p_0_in[0]),
        .I2(\rd_addr[2]_i_3_n_0 ),
        .O(\rd_addr[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT4 #(
    .INIT(16'h009C)) 
    \rd_addr[1]_i_1__0 
       (.I0(\rd_addr[2]_i_2_n_0 ),
        .I1(p_0_in[1]),
        .I2(p_0_in[0]),
        .I3(\rd_addr[2]_i_3_n_0 ),
        .O(\rd_addr[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT5 #(
    .INIT(32'h00009CCC)) 
    \rd_addr[2]_i_1__0 
       (.I0(\rd_addr[2]_i_2_n_0 ),
        .I1(p_0_in[2]),
        .I2(p_0_in[0]),
        .I3(p_0_in[1]),
        .I4(\rd_addr[2]_i_3_n_0 ),
        .O(\rd_addr[2]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF1111FFFF1F11)) 
    \rd_addr[2]_i_2 
       (.I0(rd_state[2]),
        .I1(rd_state[1]),
        .I2(\rd_addr[2]_i_4_n_0 ),
        .I3(\rd_addr[2]_i_5_n_0 ),
        .I4(tx_axis_fifo_tvalid_reg_1),
        .I5(\wr_addr_reg[0]_0 ),
        .O(\rd_addr[2]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFF0E)) 
    \rd_addr[2]_i_3 
       (.I0(rd_count_12_reg_n_0),
        .I1(rd_count_6),
        .I2(\rd_addr[2]_i_2_n_0 ),
        .I3(\rd_count[3]_i_3_n_0 ),
        .O(\rd_addr[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    \rd_addr[2]_i_4 
       (.I0(p_1_in[0]),
        .I1(p_0_in[0]),
        .I2(p_0_in[1]),
        .I3(p_1_in[1]),
        .I4(p_0_in[2]),
        .I5(p_1_in[2]),
        .O(\rd_addr[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \rd_addr[2]_i_5 
       (.I0(p_0_in[5]),
        .I1(p_1_in[5]),
        .I2(p_0_in[4]),
        .I3(p_1_in[4]),
        .I4(p_1_in[3]),
        .I5(p_0_in[3]),
        .O(\rd_addr[2]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h0E00)) 
    \rd_addr[5]_i_1 
       (.I0(wr_state_reg[1]),
        .I1(wr_state_reg[0]),
        .I2(fifo_full),
        .I3(rx_axis_tvalid_int),
        .O(wr_slot1));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\rd_addr[0]_i_1__1_n_0 ),
        .Q(p_0_in[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\rd_addr[1]_i_1__0_n_0 ),
        .Q(p_0_in[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(\rd_addr[2]_i_1__0_n_0 ),
        .Q(p_0_in[2]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h555DAAAE)) 
    \rd_count[0]_i_1 
       (.I0(rd_count_12),
        .I1(rd_state[0]),
        .I2(rd_state[2]),
        .I3(rd_state[1]),
        .I4(\rd_count_reg_n_0_[0] ),
        .O(\rd_count[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT4 #(
    .INIT(16'h006A)) 
    \rd_count[1]_i_1 
       (.I0(\rd_count_reg_n_0_[1] ),
        .I1(rd_count_12),
        .I2(\rd_count_reg_n_0_[0] ),
        .I3(\rd_count[3]_i_3_n_0 ),
        .O(\rd_count[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT5 #(
    .INIT(32'h00006AAA)) 
    \rd_count[2]_i_1 
       (.I0(\rd_count_reg_n_0_[2] ),
        .I1(rd_count_12),
        .I2(\rd_count_reg_n_0_[1] ),
        .I3(\rd_count_reg_n_0_[0] ),
        .I4(\rd_count[3]_i_3_n_0 ),
        .O(\rd_count[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000006AAAAAAA)) 
    \rd_count[3]_i_1 
       (.I0(\rd_count_reg_n_0_[3] ),
        .I1(rd_count_12),
        .I2(\rd_count_reg_n_0_[2] ),
        .I3(\rd_count_reg_n_0_[0] ),
        .I4(\rd_count_reg_n_0_[1] ),
        .I5(\rd_count[3]_i_3_n_0 ),
        .O(\rd_count[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h15555555)) 
    \rd_count[3]_i_2 
       (.I0(\rd_addr[2]_i_2_n_0 ),
        .I1(\rd_count_reg_n_0_[2] ),
        .I2(\rd_count_reg_n_0_[0] ),
        .I3(\rd_count_reg_n_0_[1] ),
        .I4(\rd_count_reg_n_0_[3] ),
        .O(rd_count_12));
  LUT4 #(
    .INIT(16'h02FF)) 
    \rd_count[3]_i_3 
       (.I0(rd_state[0]),
        .I1(rd_state[2]),
        .I2(rd_state[1]),
        .I3(rx_fifo_resetn),
        .O(\rd_count[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0080FFFF00800000)) 
    rd_count_12_i_1
       (.I0(\rd_count_reg_n_0_[0] ),
        .I1(\rd_count_reg_n_0_[1] ),
        .I2(\rd_count_reg_n_0_[3] ),
        .I3(\rd_count_reg_n_0_[2] ),
        .I4(rd_count_12),
        .I5(rd_count_12_reg_n_0),
        .O(rd_count_12_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rd_count_12_reg
       (.C(CLK),
        .CE(1'b1),
        .D(rd_count_12_i_1_n_0),
        .Q(rd_count_12_reg_n_0),
        .R(SR));
  LUT6 #(
    .INIT(64'h0040FFFF00400000)) 
    rd_count_6_i_1
       (.I0(\rd_count_reg_n_0_[1] ),
        .I1(\rd_count_reg_n_0_[0] ),
        .I2(\rd_count_reg_n_0_[2] ),
        .I3(\rd_count_reg_n_0_[3] ),
        .I4(rd_count_12),
        .I5(rd_count_6),
        .O(rd_count_6_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rd_count_6_reg
       (.C(CLK),
        .CE(1'b1),
        .D(rd_count_6_i_1_n_0),
        .Q(rd_count_6),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \rd_count_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\rd_count[0]_i_1_n_0 ),
        .Q(\rd_count_reg_n_0_[0] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \rd_count_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\rd_count[1]_i_1_n_0 ),
        .Q(\rd_count_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_count_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(\rd_count[2]_i_1_n_0 ),
        .Q(\rd_count_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_count_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(\rd_count[3]_i_1_n_0 ),
        .Q(\rd_count_reg_n_0_[3] ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hC0FFD500)) 
    \rd_slot[0]_i_1 
       (.I0(\rd_addr[2]_i_3_n_0 ),
        .I1(rx_fifo_resetn),
        .I2(\rd_slot[0]_i_2_n_0 ),
        .I3(rd_slot0),
        .I4(p_0_in[3]),
        .O(\rd_slot[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1000100010FF1000)) 
    \rd_slot[0]_i_2 
       (.I0(rd_state[1]),
        .I1(rd_state[2]),
        .I2(rd_state[0]),
        .I3(address_swap),
        .I4(rd_count_6),
        .I5(\rd_addr[2]_i_2_n_0 ),
        .O(\rd_slot[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h1011FFFF11100000)) 
    \rd_slot[1]_i_1 
       (.I0(\rd_slot[1]_i_2_n_0 ),
        .I1(\rd_count[3]_i_3_n_0 ),
        .I2(\rd_slot[1]_i_3_n_0 ),
        .I3(p_0_in[3]),
        .I4(rd_slot0),
        .I5(p_0_in[4]),
        .O(\rd_slot[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \rd_slot[1]_i_2 
       (.I0(rd_count_6),
        .I1(\rd_addr[2]_i_2_n_0 ),
        .O(\rd_slot[1]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \rd_slot[1]_i_3 
       (.I0(rd_count_12_reg_n_0),
        .I1(\rd_addr[2]_i_2_n_0 ),
        .O(\rd_slot[1]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h07FF0800)) 
    \rd_slot[2]_i_1 
       (.I0(p_0_in[4]),
        .I1(p_0_in[3]),
        .I2(\rd_addr[2]_i_3_n_0 ),
        .I3(rd_slot0),
        .I4(p_0_in[5]),
        .O(\rd_slot[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAFFFEFEFE)) 
    \rd_slot[2]_i_2 
       (.I0(\rd_count[3]_i_3_n_0 ),
        .I1(rd_count_6),
        .I2(rd_count_12_reg_n_0),
        .I3(p_0_in[2]),
        .I4(\rd_slot[2]_i_3_n_0 ),
        .I5(\rd_addr[2]_i_2_n_0 ),
        .O(rd_slot0));
  LUT2 #(
    .INIT(4'h8)) 
    \rd_slot[2]_i_3 
       (.I0(p_0_in[0]),
        .I1(p_0_in[1]),
        .O(\rd_slot[2]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rd_slot_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\rd_slot[0]_i_1_n_0 ),
        .Q(p_0_in[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_slot_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\rd_slot[1]_i_1_n_0 ),
        .Q(p_0_in[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_slot_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(\rd_slot[2]_i_1_n_0 ),
        .Q(p_0_in[5]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0F110FFF50555000)) 
    \rd_state[0]_i_1 
       (.I0(rd_state[1]),
        .I1(\rd_state[2]_i_2_n_0 ),
        .I2(\rd_state[2]_i_3_n_0 ),
        .I3(rd_state[2]),
        .I4(\rd_state[2]_i_4_n_0 ),
        .I5(rd_state[0]),
        .O(\rd_state[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCFFFCFFFC044C000)) 
    \rd_state[1]_i_1 
       (.I0(\rd_state[2]_i_2_n_0 ),
        .I1(rd_state[0]),
        .I2(\rd_state[2]_i_3_n_0 ),
        .I3(rd_state[2]),
        .I4(\rd_state[2]_i_4_n_0 ),
        .I5(rd_state[1]),
        .O(\rd_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h33FF646433FF0000)) 
    \rd_state[2]_i_1 
       (.I0(rd_state[0]),
        .I1(rd_state[1]),
        .I2(\rd_state[2]_i_2_n_0 ),
        .I3(\rd_state[2]_i_3_n_0 ),
        .I4(rd_state[2]),
        .I5(\rd_state[2]_i_4_n_0 ),
        .O(\rd_state[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \rd_state[2]_i_2 
       (.I0(wr_state_reg[1]),
        .I1(wr_state_reg[0]),
        .O(\rd_state[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000030BB3088)) 
    \rd_state[2]_i_3 
       (.I0(\wr_addr_reg[0]_0 ),
        .I1(rd_state[1]),
        .I2(rd_count_12_reg_n_0),
        .I3(rd_state[0]),
        .I4(rd_count_6),
        .I5(\rd_addr[2]_i_2_n_0 ),
        .O(\rd_state[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \rd_state[2]_i_4 
       (.I0(rd_count_6),
        .I1(rd_state[0]),
        .I2(rd_count_12_reg_n_0),
        .I3(\rd_addr[2]_i_2_n_0 ),
        .I4(rd_state[1]),
        .I5(\rd_state[2]_i_5_n_0 ),
        .O(\rd_state[2]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hD6)) 
    \rd_state[2]_i_5 
       (.I0(rd_state[0]),
        .I1(wr_state_reg[0]),
        .I2(wr_state_reg[1]),
        .O(\rd_state[2]_i_5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rd_state_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\rd_state[0]_i_1_n_0 ),
        .Q(rd_state[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \rd_state_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\rd_state[1]_i_1_n_0 ),
        .Q(rd_state[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \rd_state_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(\rd_state[2]_i_1_n_0 ),
        .Q(rd_state[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    rx_axis_fifo_tlast_reg_reg
       (.C(CLK),
        .CE(1'b1),
        .D(rx_axis_tlast_int),
        .Q(rx_axis_fifo_tlast_reg),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    rx_axis_fifo_tvalid_reg_reg
       (.C(CLK),
        .CE(1'b1),
        .D(rx_axis_tvalid_int),
        .Q(rx_axis_fifo_tvalid_reg),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000000009000009)) 
    \tx_axis_fifo_tdata[7]_i_2 
       (.I0(p_0_in[3]),
        .I1(p_1_in[3]),
        .I2(\tx_axis_fifo_tdata[7]_i_3_n_0 ),
        .I3(p_1_in[5]),
        .I4(p_0_in[5]),
        .I5(\rd_addr[2]_i_4_n_0 ),
        .O(\rd_slot_reg[0]_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \tx_axis_fifo_tdata[7]_i_3 
       (.I0(p_0_in[4]),
        .I1(p_1_in[4]),
        .O(\tx_axis_fifo_tdata[7]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \tx_axis_fifo_tdata_reg[0] 
       (.C(CLK),
        .CE(E),
        .D(dob[0]),
        .Q(\tx_axis_fifo_tdata_reg[7]_0 [0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tx_axis_fifo_tdata_reg[1] 
       (.C(CLK),
        .CE(E),
        .D(dob[1]),
        .Q(\tx_axis_fifo_tdata_reg[7]_0 [1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tx_axis_fifo_tdata_reg[2] 
       (.C(CLK),
        .CE(E),
        .D(dob[2]),
        .Q(\tx_axis_fifo_tdata_reg[7]_0 [2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tx_axis_fifo_tdata_reg[3] 
       (.C(CLK),
        .CE(E),
        .D(dob[3]),
        .Q(\tx_axis_fifo_tdata_reg[7]_0 [3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tx_axis_fifo_tdata_reg[4] 
       (.C(CLK),
        .CE(E),
        .D(dob[4]),
        .Q(\tx_axis_fifo_tdata_reg[7]_0 [4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tx_axis_fifo_tdata_reg[5] 
       (.C(CLK),
        .CE(E),
        .D(dob[5]),
        .Q(\tx_axis_fifo_tdata_reg[7]_0 [5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tx_axis_fifo_tdata_reg[6] 
       (.C(CLK),
        .CE(E),
        .D(dob[6]),
        .Q(\tx_axis_fifo_tdata_reg[7]_0 [6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tx_axis_fifo_tdata_reg[7] 
       (.C(CLK),
        .CE(E),
        .D(dob[7]),
        .Q(\tx_axis_fifo_tdata_reg[7]_0 [7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    tx_axis_fifo_tlast_int_reg
       (.C(CLK),
        .CE(1'b1),
        .D(tx_axis_fifo_tlast_int_reg_0),
        .Q(tx_axis_fifo_tlast),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFEE0E0000EE0E)) 
    tx_axis_fifo_tvalid_i_1
       (.I0(rd_state[2]),
        .I1(rd_state[1]),
        .I2(\rd_slot_reg[0]_0 ),
        .I3(\wr_addr_reg[0]_0 ),
        .I4(tx_axis_fifo_tvalid_reg_1),
        .I5(tx_axis_fifo_tvalid_reg_0),
        .O(tx_axis_fifo_tvalid_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    tx_axis_fifo_tvalid_reg
       (.C(CLK),
        .CE(1'b1),
        .D(tx_axis_fifo_tvalid_i_1_n_0),
        .Q(tx_axis_fifo_tvalid_reg_0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000000000060000)) 
    \wr_addr[0]_i_1 
       (.I0(p_1_in[0]),
        .I1(wr_slot1),
        .I2(\FSM_sequential_wr_state[1]_i_2__0_n_0 ),
        .I3(packet_waiting018_out),
        .I4(rx_fifo_resetn),
        .I5(\FSM_sequential_wr_state[0]_i_2__0_n_0 ),
        .O(\wr_addr[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000100000000)) 
    \wr_addr[0]_i_2 
       (.I0(rd_state[1]),
        .I1(rd_state[0]),
        .I2(rd_state[2]),
        .I3(wr_state_reg[1]),
        .I4(wr_state_reg[0]),
        .I5(new_packet_start),
        .O(packet_waiting018_out));
  LUT6 #(
    .INIT(64'h00000000006A0000)) 
    \wr_addr[1]_i_1 
       (.I0(p_1_in[1]),
        .I1(wr_slot1),
        .I2(p_1_in[0]),
        .I3(\FSM_sequential_wr_state[1]_i_2__0_n_0 ),
        .I4(\wr_addr[1]_i_2_n_0 ),
        .I5(\FSM_sequential_wr_state[0]_i_2__0_n_0 ),
        .O(\wr_addr[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAA2A)) 
    \wr_addr[1]_i_2 
       (.I0(rx_fifo_resetn),
        .I1(new_packet_start),
        .I2(\rd_state[2]_i_2_n_0 ),
        .I3(rd_state[2]),
        .I4(rd_state[0]),
        .I5(rd_state[1]),
        .O(\wr_addr[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000006AAA)) 
    \wr_addr[2]_i_1 
       (.I0(p_1_in[2]),
        .I1(wr_slot1),
        .I2(p_1_in[0]),
        .I3(p_1_in[1]),
        .I4(\wr_addr[2]_i_2_n_0 ),
        .I5(\FSM_sequential_wr_state[0]_i_2__0_n_0 ),
        .O(\wr_addr[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF0020FFFFFFFF)) 
    \wr_addr[2]_i_2 
       (.I0(rx_axis_tvalid_int),
        .I1(\FSM_sequential_wr_state[0]_i_5_n_0 ),
        .I2(wr_state_reg[0]),
        .I3(wr_state_reg[1]),
        .I4(packet_waiting018_out),
        .I5(rx_fifo_resetn),
        .O(\wr_addr[2]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\wr_addr[0]_i_1_n_0 ),
        .Q(p_1_in[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\wr_addr[1]_i_1_n_0 ),
        .Q(p_1_in[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(\wr_addr[2]_i_1_n_0 ),
        .Q(p_1_in[2]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFFF8F0FF0F0)) 
    \wr_count[0]_i_1 
       (.I0(\wr_count_reg_n_0_[2] ),
        .I1(\wr_count_reg_n_0_[3] ),
        .I2(\wr_count_reg_n_0_[0] ),
        .I3(\wr_count_reg_n_0_[1] ),
        .I4(wr_slot1),
        .I5(packet_waiting018_out),
        .O(\wr_count[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8FF0FF0000000000)) 
    \wr_count[1]_i_1 
       (.I0(\wr_count_reg_n_0_[2] ),
        .I1(\wr_count_reg_n_0_[3] ),
        .I2(\wr_count_reg_n_0_[0] ),
        .I3(\wr_count_reg_n_0_[1] ),
        .I4(wr_slot1),
        .I5(\wr_addr[1]_i_2_n_0 ),
        .O(\wr_count[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hDAAAAAAA00000000)) 
    \wr_count[2]_i_1 
       (.I0(\wr_count_reg_n_0_[2] ),
        .I1(\wr_count_reg_n_0_[3] ),
        .I2(\wr_count_reg_n_0_[0] ),
        .I3(\wr_count_reg_n_0_[1] ),
        .I4(wr_slot1),
        .I5(\wr_addr[1]_i_2_n_0 ),
        .O(\wr_count[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hECCCCCCC00000000)) 
    \wr_count[3]_i_1 
       (.I0(\wr_count_reg_n_0_[2] ),
        .I1(\wr_count_reg_n_0_[3] ),
        .I2(\wr_count_reg_n_0_[0] ),
        .I3(\wr_count_reg_n_0_[1] ),
        .I4(wr_slot1),
        .I5(\wr_addr[1]_i_2_n_0 ),
        .O(\wr_count[3]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_count_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\wr_count[0]_i_1_n_0 ),
        .Q(\wr_count_reg_n_0_[0] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \wr_count_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\wr_count[1]_i_1_n_0 ),
        .Q(\wr_count_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_count_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(\wr_count[2]_i_1_n_0 ),
        .Q(\wr_count_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_count_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(\wr_count[3]_i_1_n_0 ),
        .Q(\wr_count_reg_n_0_[3] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \wr_eof_pipe[0]_i_1 
       (.I0(tx_axis_fifo_tlast),
        .I1(tx_axis_fifo_tvalid_reg_0),
        .I2(wr_eof_reg),
        .O(p_16_out));
  LUT6 #(
    .INIT(64'h8C888C8C888C8888)) 
    \wr_slot[0]_i_1 
       (.I0(\FSM_sequential_wr_state[1]_i_2__0_n_0 ),
        .I1(\wr_addr[1]_i_2_n_0 ),
        .I2(\FSM_sequential_wr_state[0]_i_2__0_n_0 ),
        .I3(\wr_slot[2]_i_3_n_0 ),
        .I4(wr_slot1),
        .I5(p_1_in[3]),
        .O(\wr_slot[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h3331333330323030)) 
    \wr_slot[1]_i_1 
       (.I0(p_1_in[3]),
        .I1(\wr_addr[2]_i_2_n_0 ),
        .I2(\FSM_sequential_wr_state[0]_i_2__0_n_0 ),
        .I3(\wr_slot[2]_i_3_n_0 ),
        .I4(wr_slot1),
        .I5(p_1_in[4]),
        .O(\wr_slot[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0302030300020000)) 
    \wr_slot[2]_i_1 
       (.I0(\wr_slot[2]_i_2_n_0 ),
        .I1(\wr_addr[2]_i_2_n_0 ),
        .I2(\FSM_sequential_wr_state[0]_i_2__0_n_0 ),
        .I3(\wr_slot[2]_i_3_n_0 ),
        .I4(wr_slot1),
        .I5(p_1_in[5]),
        .O(\wr_slot[2]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h6A)) 
    \wr_slot[2]_i_2 
       (.I0(p_1_in[5]),
        .I1(p_1_in[4]),
        .I2(p_1_in[3]),
        .O(\wr_slot[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \wr_slot[2]_i_3 
       (.I0(p_1_in[2]),
        .I1(p_1_in[1]),
        .I2(p_1_in[0]),
        .O(\wr_slot[2]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_slot_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\wr_slot[0]_i_1_n_0 ),
        .Q(p_1_in[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_slot_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\wr_slot[1]_i_1_n_0 ),
        .Q(p_1_in[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_slot_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(\wr_slot[2]_i_1_n_0 ),
        .Q(p_1_in[5]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \wr_sof_pipe[0]_i_1 
       (.I0(tx_axis_fifo_tlast),
        .I1(wr_eof_reg),
        .I2(tx_axis_fifo_tvalid_reg_0),
        .O(p_23_out));
endmodule

(* ORIG_REF_NAME = "axi_lite_ipif" *) 
module tri_mode_ethernet_mac_0_axi_lite_ipif
   (bus2ip_reset,
    s_axi_rresp,
    \MEM_DECODE_GEN[0].cs_out_i_reg[0] ,
    s_axi_rvalid_i_reg,
    s_axi_bvalid_i_reg,
    s_axi_bresp,
    ip2bus_rdack_reg,
    ip2bus_wrack_reg,
    local_wrack_reg,
    local_rdack_reg,
    \MEM_DECODE_GEN[0].cs_out_i_reg[0]_0 ,
    bus2ip_rdce,
    bus2ip_wrce,
    s_axi_rdata,
    Q,
    s_axi_aclk,
    ip2bus_error,
    s_axi_arvalid,
    s_axi_rready,
    s_axi_bready,
    local_wrack_reg_0,
    local_wrack1,
    s_axi_resetn,
    local_rdack_reg_0,
    s_axi_awvalid,
    s_axi_wvalid,
    D,
    ip2bus_wrack,
    ip2bus_rdack,
    s_axi_araddr,
    s_axi_awaddr);
  output bus2ip_reset;
  output [0:0]s_axi_rresp;
  output \MEM_DECODE_GEN[0].cs_out_i_reg[0] ;
  output s_axi_rvalid_i_reg;
  output s_axi_bvalid_i_reg;
  output [0:0]s_axi_bresp;
  output ip2bus_rdack_reg;
  output ip2bus_wrack_reg;
  output local_wrack_reg;
  output local_rdack_reg;
  output \MEM_DECODE_GEN[0].cs_out_i_reg[0]_0 ;
  output bus2ip_rdce;
  output bus2ip_wrce;
  output [31:0]s_axi_rdata;
  output [10:0]Q;
  input s_axi_aclk;
  input ip2bus_error;
  input s_axi_arvalid;
  input s_axi_rready;
  input s_axi_bready;
  input local_wrack_reg_0;
  input local_wrack1;
  input s_axi_resetn;
  input local_rdack_reg_0;
  input s_axi_awvalid;
  input s_axi_wvalid;
  input [31:0]D;
  input ip2bus_wrack;
  input ip2bus_rdack;
  input [10:0]s_axi_araddr;
  input [10:0]s_axi_awaddr;

  wire \MEM_DECODE_GEN[0].cs_out_i_reg[0] ;
  wire \MEM_DECODE_GEN[0].cs_out_i_reg[0]_0 ;
  wire [10:0]Q;
  wire bus2ip_rdce;
  wire bus2ip_reset;
  wire bus2ip_wrce;
  wire ip2bus_rdack;
  wire ip2bus_rdack_reg;
  wire ip2bus_wrack;
  wire ip2bus_wrack_reg;
  wire local_rdack_reg;
  wire local_rdack_reg_0;
  wire local_wrack1;
  wire local_wrack_reg;
  wire local_wrack_reg_0;
  wire s_axi_aclk;
  wire [10:0]s_axi_araddr;
  wire s_axi_arvalid;
  wire [10:0]s_axi_awaddr;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid_i_reg;
  wire s_axi_resetn;
  wire s_axi_rready;
  wire s_axi_rvalid_i_reg;
  wire s_axi_wvalid;
  wire NLW_I_SLAVE_ATTACHMENT_ip2bus_error_UNCONNECTED;
  wire [31:0]NLW_I_SLAVE_ATTACHMENT_D_UNCONNECTED;
  wire [1:0]NLW_I_SLAVE_ATTACHMENT_Q_UNCONNECTED;
  wire [7:0]NLW_I_SLAVE_ATTACHMENT_s_axi_araddr_UNCONNECTED;
  wire [7:0]NLW_I_SLAVE_ATTACHMENT_s_axi_awaddr_UNCONNECTED;
  wire [0:0]NLW_I_SLAVE_ATTACHMENT_s_axi_bresp_UNCONNECTED;
  wire [31:0]NLW_I_SLAVE_ATTACHMENT_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_I_SLAVE_ATTACHMENT_s_axi_rresp_UNCONNECTED;

  tri_mode_ethernet_mac_0_slave_attachment I_SLAVE_ATTACHMENT
       (.D(NLW_I_SLAVE_ATTACHMENT_D_UNCONNECTED[31:0]),
        .\MEM_DECODE_GEN[0].cs_out_i_reg[0] (\MEM_DECODE_GEN[0].cs_out_i_reg[0] ),
        .\MEM_DECODE_GEN[0].cs_out_i_reg[0]_0 (\MEM_DECODE_GEN[0].cs_out_i_reg[0]_0 ),
        .Q({Q[10:2],NLW_I_SLAVE_ATTACHMENT_Q_UNCONNECTED[1:0]}),
        .bus2ip_rdce(bus2ip_rdce),
        .bus2ip_reset(bus2ip_reset),
        .bus2ip_wrce(bus2ip_wrce),
        .ip2bus_error(NLW_I_SLAVE_ATTACHMENT_ip2bus_error_UNCONNECTED),
        .ip2bus_rdack(ip2bus_rdack),
        .ip2bus_rdack_reg(ip2bus_rdack_reg),
        .ip2bus_wrack(ip2bus_wrack),
        .ip2bus_wrack_reg(ip2bus_wrack_reg),
        .local_rdack_reg(local_rdack_reg),
        .local_rdack_reg_0(local_rdack_reg_0),
        .local_wrack1(local_wrack1),
        .local_wrack_reg(local_wrack_reg),
        .local_wrack_reg_0(local_wrack_reg_0),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr({s_axi_araddr[10:8],NLW_I_SLAVE_ATTACHMENT_s_axi_araddr_UNCONNECTED[7:5],s_axi_araddr[4:2],NLW_I_SLAVE_ATTACHMENT_s_axi_araddr_UNCONNECTED[1:0]}),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr({s_axi_awaddr[10:8],NLW_I_SLAVE_ATTACHMENT_s_axi_awaddr_UNCONNECTED[7:5],s_axi_awaddr[4:2],NLW_I_SLAVE_ATTACHMENT_s_axi_awaddr_UNCONNECTED[1:0]}),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(NLW_I_SLAVE_ATTACHMENT_s_axi_bresp_UNCONNECTED[0]),
        .s_axi_bvalid_i_reg_0(s_axi_bvalid_i_reg),
        .s_axi_rdata(NLW_I_SLAVE_ATTACHMENT_s_axi_rdata_UNCONNECTED[31:0]),
        .s_axi_resetn(s_axi_resetn),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(NLW_I_SLAVE_ATTACHMENT_s_axi_rresp_UNCONNECTED[0]),
        .s_axi_rvalid_i_reg_0(s_axi_rvalid_i_reg),
        .s_axi_wvalid(s_axi_wvalid));
endmodule

module tri_mode_ethernet_mac_0_axi_lite_sm
   (s_axi_arvalid,
    s_axi_rready,
    s_axi_awvalid,
    s_axi_wvalid,
    s_axi_bready,
    Q,
    \s_axi_wdata_reg[31]_0 ,
    \s_axi_araddr_reg[10]_0 ,
    clk_200,
    SR,
    s_axi_resetn,
    s_axi_arready,
    s_axi_rvalid,
    s_axi_awready,
    s_axi_wready,
    s_axi_bvalid);
  output s_axi_arvalid;
  output s_axi_rready;
  output s_axi_awvalid;
  output s_axi_wvalid;
  output s_axi_bready;
  output [4:0]Q;
  output [4:0]\s_axi_wdata_reg[31]_0 ;
  output [4:0]\s_axi_araddr_reg[10]_0 ;
  input clk_200;
  input [0:0]SR;
  input s_axi_resetn;
  input s_axi_arready;
  input s_axi_rvalid;
  input s_axi_awready;
  input s_axi_wready;
  input s_axi_bvalid;

  wire \FSM_sequential_axi_state[1]_i_1_n_0 ;
  wire \FSM_sequential_axi_state[2]_i_1_n_0 ;
  wire \FSM_sequential_axi_state[3]_i_2_n_0 ;
  wire \FSM_sequential_axi_state[3]_i_3_n_0 ;
  wire [4:0]Q;
  wire [0:0]SR;
  wire \addr[2]_i_1_n_0 ;
  wire \addr[3]_i_1_n_0 ;
  wire \addr[4]_i_1_n_0 ;
  wire \addr[9]_i_1_n_0 ;
  wire \addr[9]_i_2_n_0 ;
  wire \addr_reg_n_0_[10] ;
  wire \addr_reg_n_0_[2] ;
  wire \addr_reg_n_0_[3] ;
  wire \addr_reg_n_0_[4] ;
  wire \addr_reg_n_0_[9] ;
  wire \axi_access_sm[0]_i_1_n_0 ;
  wire \axi_access_sm[1]_i_1_n_0 ;
  wire \axi_access_sm[1]_i_3_n_0 ;
  wire \axi_access_sm_reg_n_0_[0] ;
  wire \axi_access_sm_reg_n_0_[1] ;
  wire axi_state;
  wire axi_state1__0;
  wire [3:0]axi_state__0;
  wire [0:0]axi_state__1;
  wire \axi_status[0]_inv_i_1_n_0 ;
  wire \axi_status[1]_i_1_n_0 ;
  wire \axi_status[2]_inv_i_1_n_0 ;
  wire \axi_status[3]_inv_i_1_n_0 ;
  wire \axi_status[4]_i_1_n_0 ;
  wire \axi_status_reg_n_0_[1] ;
  wire [31:9]axi_wr_data;
  wire [31:9]axi_wr_data0_in;
  wire \axi_wr_data[28]_i_1_n_0 ;
  wire clk_200;
  wire [20:20]count_shift;
  wire \count_shift_reg[19]_srl20_n_0 ;
  wire p_0_out;
  wire p_10_in;
  wire p_14_in;
  wire p_8_in;
  wire \s_axi_araddr[10]_i_1_n_0 ;
  wire [4:0]\s_axi_araddr_reg[10]_0 ;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire s_axi_arvalid_i_1_n_0;
  wire \s_axi_awaddr[10]_i_1_n_0 ;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_awvalid_i_1_n_0;
  wire s_axi_bready;
  wire s_axi_bready_i_1_n_0;
  wire s_axi_bvalid;
  wire s_axi_resetn;
  wire s_axi_rready;
  wire s_axi_rready_i_1_n_0;
  wire s_axi_rvalid;
  wire \s_axi_wdata[31]_i_1_n_0 ;
  wire [4:0]\s_axi_wdata_reg[31]_0 ;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire s_axi_wvalid_i_1_n_0;
  wire [2:2]sel0;
  wire start_access_i_1_n_0;
  wire start_access_i_2_n_0;
  wire start_access_reg_n_0;
  wire update_speed_reg;
  wire update_speed_reg_i_1_n_0;
  wire update_speed_sync;
  wire \NLW_count_shift_reg[19]_srl20_Q31_UNCONNECTED ;

  LUT4 #(
    .INIT(16'h0155)) 
    \FSM_sequential_axi_state[0]_i_1 
       (.I0(axi_state__0[0]),
        .I1(axi_state__0[1]),
        .I2(axi_state__0[2]),
        .I3(axi_state__0[3]),
        .O(axi_state__1));
  LUT3 #(
    .INIT(8'h06)) 
    \FSM_sequential_axi_state[1]_i_1 
       (.I0(axi_state__0[1]),
        .I1(axi_state__0[0]),
        .I2(axi_state__0[3]),
        .O(\FSM_sequential_axi_state[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT4 #(
    .INIT(16'h006A)) 
    \FSM_sequential_axi_state[2]_i_1 
       (.I0(axi_state__0[2]),
        .I1(axi_state__0[0]),
        .I2(axi_state__0[1]),
        .I3(axi_state__0[3]),
        .O(\FSM_sequential_axi_state[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0100)) 
    \FSM_sequential_axi_state[3]_i_2 
       (.I0(start_access_reg_n_0),
        .I1(\axi_access_sm_reg_n_0_[1] ),
        .I2(\axi_access_sm_reg_n_0_[0] ),
        .I3(axi_state),
        .O(\FSM_sequential_axi_state[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \FSM_sequential_axi_state[3]_i_3 
       (.I0(axi_state__0[1]),
        .I1(axi_state__0[0]),
        .I2(axi_state__0[2]),
        .I3(axi_state__0[3]),
        .O(\FSM_sequential_axi_state[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h333333333333338B)) 
    \FSM_sequential_axi_state[3]_i_4 
       (.I0(update_speed_reg),
        .I1(axi_state__0[3]),
        .I2(count_shift),
        .I3(axi_state__0[2]),
        .I4(axi_state__0[0]),
        .I5(axi_state__0[1]),
        .O(axi_state));
  (* FSM_ENCODED_STATES = "STARTUP:0000,CNFG_HI_ADDR:0110,CNFG_FLOW:0100,CNFG_LO_ADDR:0101,RESET_MAC_RX:0010,RESET_MAC_TX:0011,CHECK_SPEED:1000,UPDATE_SPEED:0001,CNFG_FILTER:0111" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_axi_state_reg[0] 
       (.C(clk_200),
        .CE(\FSM_sequential_axi_state[3]_i_2_n_0 ),
        .D(axi_state__1),
        .Q(axi_state__0[0]),
        .R(SR));
  (* FSM_ENCODED_STATES = "STARTUP:0000,CNFG_HI_ADDR:0110,CNFG_FLOW:0100,CNFG_LO_ADDR:0101,RESET_MAC_RX:0010,RESET_MAC_TX:0011,CHECK_SPEED:1000,UPDATE_SPEED:0001,CNFG_FILTER:0111" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_axi_state_reg[1] 
       (.C(clk_200),
        .CE(\FSM_sequential_axi_state[3]_i_2_n_0 ),
        .D(\FSM_sequential_axi_state[1]_i_1_n_0 ),
        .Q(axi_state__0[1]),
        .R(SR));
  (* FSM_ENCODED_STATES = "STARTUP:0000,CNFG_HI_ADDR:0110,CNFG_FLOW:0100,CNFG_LO_ADDR:0101,RESET_MAC_RX:0010,RESET_MAC_TX:0011,CHECK_SPEED:1000,UPDATE_SPEED:0001,CNFG_FILTER:0111" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_axi_state_reg[2] 
       (.C(clk_200),
        .CE(\FSM_sequential_axi_state[3]_i_2_n_0 ),
        .D(\FSM_sequential_axi_state[2]_i_1_n_0 ),
        .Q(axi_state__0[2]),
        .R(SR));
  (* FSM_ENCODED_STATES = "STARTUP:0000,CNFG_HI_ADDR:0110,CNFG_FLOW:0100,CNFG_LO_ADDR:0101,RESET_MAC_RX:0010,RESET_MAC_TX:0011,CHECK_SPEED:1000,UPDATE_SPEED:0001,CNFG_FILTER:0111" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_axi_state_reg[3] 
       (.C(clk_200),
        .CE(\FSM_sequential_axi_state[3]_i_2_n_0 ),
        .D(\FSM_sequential_axi_state[3]_i_3_n_0 ),
        .Q(axi_state__0[3]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT3 #(
    .INIT(8'h54)) 
    \addr[2]_i_1 
       (.I0(axi_state__0[0]),
        .I1(axi_state__0[1]),
        .I2(axi_state__0[2]),
        .O(\addr[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT3 #(
    .INIT(8'h98)) 
    \addr[3]_i_1 
       (.I0(axi_state__0[0]),
        .I1(axi_state__0[1]),
        .I2(axi_state__0[2]),
        .O(\addr[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \addr[4]_i_1 
       (.I0(axi_state__0[2]),
        .I1(axi_state__0[1]),
        .O(\addr[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h22222220)) 
    \addr[9]_i_1 
       (.I0(axi_state1__0),
        .I1(axi_state__0[3]),
        .I2(axi_state__0[1]),
        .I3(axi_state__0[0]),
        .I4(axi_state__0[2]),
        .O(\addr[9]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \addr[9]_i_2 
       (.I0(axi_state__0[2]),
        .I1(axi_state__0[0]),
        .I2(axi_state__0[1]),
        .O(\addr[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \addr[9]_i_3 
       (.I0(\axi_access_sm_reg_n_0_[0] ),
        .I1(\axi_access_sm_reg_n_0_[1] ),
        .I2(start_access_reg_n_0),
        .O(axi_state1__0));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg[10] 
       (.C(clk_200),
        .CE(\addr[9]_i_1_n_0 ),
        .D(1'b1),
        .Q(\addr_reg_n_0_[10] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg[2] 
       (.C(clk_200),
        .CE(\addr[9]_i_1_n_0 ),
        .D(\addr[2]_i_1_n_0 ),
        .Q(\addr_reg_n_0_[2] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg[3] 
       (.C(clk_200),
        .CE(\addr[9]_i_1_n_0 ),
        .D(\addr[3]_i_1_n_0 ),
        .Q(\addr_reg_n_0_[3] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg[4] 
       (.C(clk_200),
        .CE(\addr[9]_i_1_n_0 ),
        .D(\addr[4]_i_1_n_0 ),
        .Q(\addr_reg_n_0_[4] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg[9] 
       (.C(clk_200),
        .CE(\addr[9]_i_1_n_0 ),
        .D(\addr[9]_i_2_n_0 ),
        .Q(\addr_reg_n_0_[9] ),
        .R(SR));
  LUT6 #(
    .INIT(64'h662666AE00000000)) 
    \axi_access_sm[0]_i_1 
       (.I0(\axi_access_sm_reg_n_0_[0] ),
        .I1(p_0_out),
        .I2(\addr_reg_n_0_[10] ),
        .I3(\axi_access_sm_reg_n_0_[1] ),
        .I4(p_14_in),
        .I5(s_axi_resetn),
        .O(\axi_access_sm[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h6E6A2E2A00000000)) 
    \axi_access_sm[1]_i_1 
       (.I0(\axi_access_sm_reg_n_0_[1] ),
        .I1(p_0_out),
        .I2(\axi_access_sm_reg_n_0_[0] ),
        .I3(\addr_reg_n_0_[10] ),
        .I4(\axi_status_reg_n_0_[1] ),
        .I5(s_axi_resetn),
        .O(\axi_access_sm[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFF20)) 
    \axi_access_sm[1]_i_2 
       (.I0(\axi_access_sm_reg_n_0_[0] ),
        .I1(p_14_in),
        .I2(\axi_status_reg_n_0_[1] ),
        .I3(\axi_access_sm[1]_i_3_n_0 ),
        .O(p_0_out));
  LUT6 #(
    .INIT(64'hFF00FF0002FF0200)) 
    \axi_access_sm[1]_i_3 
       (.I0(sel0),
        .I1(p_10_in),
        .I2(p_8_in),
        .I3(\axi_access_sm_reg_n_0_[1] ),
        .I4(start_access_reg_n_0),
        .I5(\axi_access_sm_reg_n_0_[0] ),
        .O(\axi_access_sm[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \axi_access_sm_reg[0] 
       (.C(clk_200),
        .CE(1'b1),
        .D(\axi_access_sm[0]_i_1_n_0 ),
        .Q(\axi_access_sm_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \axi_access_sm_reg[1] 
       (.C(clk_200),
        .CE(1'b1),
        .D(\axi_access_sm[1]_i_1_n_0 ),
        .Q(\axi_access_sm_reg_n_0_[1] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'hFFFF2AFF)) 
    \axi_status[0]_inv_i_1 
       (.I0(p_14_in),
        .I1(s_axi_arready),
        .I2(s_axi_arvalid),
        .I3(\axi_access_sm_reg_n_0_[0] ),
        .I4(\axi_access_sm_reg_n_0_[1] ),
        .O(\axi_status[0]_inv_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT5 #(
    .INIT(32'h0000EA00)) 
    \axi_status[1]_i_1 
       (.I0(\axi_status_reg_n_0_[1] ),
        .I1(s_axi_rvalid),
        .I2(s_axi_rready),
        .I3(\axi_access_sm_reg_n_0_[0] ),
        .I4(\axi_access_sm_reg_n_0_[1] ),
        .O(\axi_status[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT5 #(
    .INIT(32'hFFFF2AFF)) 
    \axi_status[2]_inv_i_1 
       (.I0(p_10_in),
        .I1(s_axi_awready),
        .I2(s_axi_awvalid),
        .I3(\axi_access_sm_reg_n_0_[1] ),
        .I4(\axi_access_sm_reg_n_0_[0] ),
        .O(\axi_status[2]_inv_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT5 #(
    .INIT(32'hFFFF2AFF)) 
    \axi_status[3]_inv_i_1 
       (.I0(p_8_in),
        .I1(s_axi_wready),
        .I2(s_axi_wvalid),
        .I3(\axi_access_sm_reg_n_0_[1] ),
        .I4(\axi_access_sm_reg_n_0_[0] ),
        .O(\axi_status[3]_inv_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT5 #(
    .INIT(32'h0000EA00)) 
    \axi_status[4]_i_1 
       (.I0(sel0),
        .I1(s_axi_bvalid),
        .I2(s_axi_bready),
        .I3(\axi_access_sm_reg_n_0_[1] ),
        .I4(\axi_access_sm_reg_n_0_[0] ),
        .O(\axi_status[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b1)) 
    \axi_status_reg[0]_inv 
       (.C(clk_200),
        .CE(1'b1),
        .D(\axi_status[0]_inv_i_1_n_0 ),
        .Q(p_14_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \axi_status_reg[1] 
       (.C(clk_200),
        .CE(1'b1),
        .D(\axi_status[1]_i_1_n_0 ),
        .Q(\axi_status_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \axi_status_reg[2]_inv 
       (.C(clk_200),
        .CE(1'b1),
        .D(\axi_status[2]_inv_i_1_n_0 ),
        .Q(p_10_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \axi_status_reg[3]_inv 
       (.C(clk_200),
        .CE(1'b1),
        .D(\axi_status[3]_inv_i_1_n_0 ),
        .Q(p_8_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \axi_status_reg[4] 
       (.C(clk_200),
        .CE(1'b1),
        .D(\axi_status[4]_i_1_n_0 ),
        .Q(sel0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \axi_wr_data[10]_i_1 
       (.I0(axi_state__0[0]),
        .I1(axi_state__0[1]),
        .I2(axi_state__0[2]),
        .O(axi_wr_data0_in[10]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT3 #(
    .INIT(8'h41)) 
    \axi_wr_data[26]_i_1 
       (.I0(axi_state__0[1]),
        .I1(axi_state__0[2]),
        .I2(axi_state__0[0]),
        .O(axi_wr_data0_in[26]));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT3 #(
    .INIT(8'h51)) 
    \axi_wr_data[28]_i_1 
       (.I0(axi_state__0[2]),
        .I1(axi_state__0[0]),
        .I2(axi_state__0[1]),
        .O(\axi_wr_data[28]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT3 #(
    .INIT(8'h8F)) 
    \axi_wr_data[31]_i_1 
       (.I0(axi_state__0[0]),
        .I1(axi_state__0[1]),
        .I2(axi_state__0[2]),
        .O(axi_wr_data0_in[31]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT3 #(
    .INIT(8'h60)) 
    \axi_wr_data[9]_i_1 
       (.I0(axi_state__0[0]),
        .I1(axi_state__0[1]),
        .I2(axi_state__0[2]),
        .O(axi_wr_data0_in[9]));
  FDRE #(
    .INIT(1'b0)) 
    \axi_wr_data_reg[10] 
       (.C(clk_200),
        .CE(\addr[9]_i_1_n_0 ),
        .D(axi_wr_data0_in[10]),
        .Q(axi_wr_data[10]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \axi_wr_data_reg[26] 
       (.C(clk_200),
        .CE(\addr[9]_i_1_n_0 ),
        .D(axi_wr_data0_in[26]),
        .Q(axi_wr_data[26]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \axi_wr_data_reg[28] 
       (.C(clk_200),
        .CE(\addr[9]_i_1_n_0 ),
        .D(\axi_wr_data[28]_i_1_n_0 ),
        .Q(axi_wr_data[28]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \axi_wr_data_reg[31] 
       (.C(clk_200),
        .CE(\addr[9]_i_1_n_0 ),
        .D(axi_wr_data0_in[31]),
        .Q(axi_wr_data[31]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \axi_wr_data_reg[9] 
       (.C(clk_200),
        .CE(\addr[9]_i_1_n_0 ),
        .D(axi_wr_data0_in[9]),
        .Q(axi_wr_data[9]),
        .R(SR));
  (* srl_bus_name = "\axi_lite_controller/count_shift_reg " *) 
  (* srl_name = "\axi_lite_controller/count_shift_reg[19]_srl20 " *) 
  SRLC32E #(
    .INIT(32'h000FFFFF)) 
    \count_shift_reg[19]_srl20 
       (.A({1'b1,1'b0,1'b0,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(clk_200),
        .D(SR),
        .Q(\count_shift_reg[19]_srl20_n_0 ),
        .Q31(\NLW_count_shift_reg[19]_srl20_Q31_UNCONNECTED ));
  FDRE #(
    .INIT(1'b1)) 
    \count_shift_reg[20] 
       (.C(clk_200),
        .CE(1'b1),
        .D(\count_shift_reg[19]_srl20_n_0 ),
        .Q(count_shift),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFFFD555)) 
    \s_axi_araddr[10]_i_1 
       (.I0(\axi_access_sm_reg_n_0_[0] ),
        .I1(s_axi_arvalid),
        .I2(s_axi_arready),
        .I3(p_14_in),
        .I4(\axi_access_sm_reg_n_0_[1] ),
        .O(\s_axi_araddr[10]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_araddr_reg[10] 
       (.C(clk_200),
        .CE(p_14_in),
        .D(\addr_reg_n_0_[10] ),
        .Q(\s_axi_araddr_reg[10]_0 [4]),
        .R(\s_axi_araddr[10]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_araddr_reg[2] 
       (.C(clk_200),
        .CE(p_14_in),
        .D(\addr_reg_n_0_[2] ),
        .Q(\s_axi_araddr_reg[10]_0 [0]),
        .R(\s_axi_araddr[10]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_araddr_reg[3] 
       (.C(clk_200),
        .CE(p_14_in),
        .D(\addr_reg_n_0_[3] ),
        .Q(\s_axi_araddr_reg[10]_0 [1]),
        .R(\s_axi_araddr[10]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_araddr_reg[4] 
       (.C(clk_200),
        .CE(p_14_in),
        .D(\addr_reg_n_0_[4] ),
        .Q(\s_axi_araddr_reg[10]_0 [2]),
        .R(\s_axi_araddr[10]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_araddr_reg[9] 
       (.C(clk_200),
        .CE(p_14_in),
        .D(\addr_reg_n_0_[9] ),
        .Q(\s_axi_araddr_reg[10]_0 [3]),
        .R(\s_axi_araddr[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'h00007A00)) 
    s_axi_arvalid_i_1
       (.I0(p_14_in),
        .I1(s_axi_arready),
        .I2(s_axi_arvalid),
        .I3(\axi_access_sm_reg_n_0_[0] ),
        .I4(\axi_access_sm_reg_n_0_[1] ),
        .O(s_axi_arvalid_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    s_axi_arvalid_reg
       (.C(clk_200),
        .CE(1'b1),
        .D(s_axi_arvalid_i_1_n_0),
        .Q(s_axi_arvalid),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFDDDDDDD)) 
    \s_axi_awaddr[10]_i_1 
       (.I0(\axi_access_sm_reg_n_0_[1] ),
        .I1(\axi_access_sm_reg_n_0_[0] ),
        .I2(s_axi_awvalid),
        .I3(s_axi_awready),
        .I4(p_10_in),
        .O(\s_axi_awaddr[10]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_awaddr_reg[10] 
       (.C(clk_200),
        .CE(p_10_in),
        .D(\addr_reg_n_0_[10] ),
        .Q(Q[4]),
        .R(\s_axi_awaddr[10]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_awaddr_reg[2] 
       (.C(clk_200),
        .CE(p_10_in),
        .D(\addr_reg_n_0_[2] ),
        .Q(Q[0]),
        .R(\s_axi_awaddr[10]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_awaddr_reg[3] 
       (.C(clk_200),
        .CE(p_10_in),
        .D(\addr_reg_n_0_[3] ),
        .Q(Q[1]),
        .R(\s_axi_awaddr[10]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_awaddr_reg[4] 
       (.C(clk_200),
        .CE(p_10_in),
        .D(\addr_reg_n_0_[4] ),
        .Q(Q[2]),
        .R(\s_axi_awaddr[10]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_awaddr_reg[9] 
       (.C(clk_200),
        .CE(p_10_in),
        .D(\addr_reg_n_0_[9] ),
        .Q(Q[3]),
        .R(\s_axi_awaddr[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT5 #(
    .INIT(32'h00002A88)) 
    s_axi_awvalid_i_1
       (.I0(\axi_access_sm_reg_n_0_[1] ),
        .I1(p_10_in),
        .I2(s_axi_awready),
        .I3(s_axi_awvalid),
        .I4(\axi_access_sm_reg_n_0_[0] ),
        .O(s_axi_awvalid_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    s_axi_awvalid_reg
       (.C(clk_200),
        .CE(1'b1),
        .D(s_axi_awvalid_i_1_n_0),
        .Q(s_axi_awvalid),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT5 #(
    .INIT(32'h00008A22)) 
    s_axi_bready_i_1
       (.I0(\axi_access_sm_reg_n_0_[1] ),
        .I1(sel0),
        .I2(s_axi_bvalid),
        .I3(s_axi_bready),
        .I4(\axi_access_sm_reg_n_0_[0] ),
        .O(s_axi_bready_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    s_axi_bready_reg
       (.C(clk_200),
        .CE(1'b1),
        .D(s_axi_bready_i_1_n_0),
        .Q(s_axi_bready),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT5 #(
    .INIT(32'h0000B500)) 
    s_axi_rready_i_1
       (.I0(\axi_status_reg_n_0_[1] ),
        .I1(s_axi_rvalid),
        .I2(s_axi_rready),
        .I3(\axi_access_sm_reg_n_0_[0] ),
        .I4(\axi_access_sm_reg_n_0_[1] ),
        .O(s_axi_rready_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    s_axi_rready_reg
       (.C(clk_200),
        .CE(1'b1),
        .D(s_axi_rready_i_1_n_0),
        .Q(s_axi_rready),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hB)) 
    \s_axi_wdata[31]_i_1 
       (.I0(\axi_access_sm_reg_n_0_[0] ),
        .I1(\axi_access_sm_reg_n_0_[1] ),
        .O(\s_axi_wdata[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_wdata_reg[10] 
       (.C(clk_200),
        .CE(p_8_in),
        .D(axi_wr_data[10]),
        .Q(\s_axi_wdata_reg[31]_0 [1]),
        .R(\s_axi_wdata[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_wdata_reg[26] 
       (.C(clk_200),
        .CE(p_8_in),
        .D(axi_wr_data[26]),
        .Q(\s_axi_wdata_reg[31]_0 [2]),
        .R(\s_axi_wdata[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_wdata_reg[28] 
       (.C(clk_200),
        .CE(p_8_in),
        .D(axi_wr_data[28]),
        .Q(\s_axi_wdata_reg[31]_0 [3]),
        .R(\s_axi_wdata[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_wdata_reg[31] 
       (.C(clk_200),
        .CE(p_8_in),
        .D(axi_wr_data[31]),
        .Q(\s_axi_wdata_reg[31]_0 [4]),
        .R(\s_axi_wdata[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_wdata_reg[9] 
       (.C(clk_200),
        .CE(p_8_in),
        .D(axi_wr_data[9]),
        .Q(\s_axi_wdata_reg[31]_0 [0]),
        .R(\s_axi_wdata[31]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT5 #(
    .INIT(32'h00002A88)) 
    s_axi_wvalid_i_1
       (.I0(\axi_access_sm_reg_n_0_[1] ),
        .I1(p_8_in),
        .I2(s_axi_wready),
        .I3(s_axi_wvalid),
        .I4(\axi_access_sm_reg_n_0_[0] ),
        .O(s_axi_wvalid_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    s_axi_wvalid_reg
       (.C(clk_200),
        .CE(1'b1),
        .D(s_axi_wvalid_i_1_n_0),
        .Q(s_axi_wvalid),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000000200000000)) 
    start_access_i_1
       (.I0(start_access_i_2_n_0),
        .I1(axi_state__0[3]),
        .I2(\axi_access_sm_reg_n_0_[0] ),
        .I3(\axi_access_sm_reg_n_0_[1] ),
        .I4(start_access_reg_n_0),
        .I5(s_axi_resetn),
        .O(start_access_i_1_n_0));
  LUT4 #(
    .INIT(16'h00FE)) 
    start_access_i_2
       (.I0(axi_state__0[2]),
        .I1(axi_state__0[0]),
        .I2(axi_state__0[1]),
        .I3(axi_state__0[3]),
        .O(start_access_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    start_access_reg
       (.C(clk_200),
        .CE(1'b1),
        .D(start_access_i_1_n_0),
        .Q(start_access_reg_n_0),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    update_speed_reg_i_1
       (.I0(update_speed_sync),
        .I1(s_axi_resetn),
        .O(update_speed_reg_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    update_speed_reg_reg
       (.C(clk_200),
        .CE(1'b1),
        .D(update_speed_reg_i_1_n_0),
        .Q(update_speed_reg),
        .R(1'b0));
  (* DEPTH = "5" *) 
  (* DONT_TOUCH *) 
  (* INITIALISE = "1'b0" *) 
  tri_mode_ethernet_mac_0_sync_block__3 update_speed_sync_inst
       (.clk(clk_200),
        .data_in(1'b0),
        .data_out(update_speed_sync));
endmodule

module tri_mode_ethernet_mac_0_axi_pat_gen
   (Q,
    mux_tlast,
    mux_tdata,
    rx_axis_fifo_tvalid_reg,
    CLK,
    SR,
    \wr_addr_reg[5] ,
    gen_tx_data_IBUF,
    \pkt_size_reg[0]_0 ,
    rx_axis_fifo_tlast,
    \ram_loop[7].RAM64X1D_inst ,
    rx_fifo_resetn,
    rx_axis_fifo_tvalid,
    SS);
  output [0:0]Q;
  output mux_tlast;
  output [7:0]mux_tdata;
  output rx_axis_fifo_tvalid_reg;
  input CLK;
  input [0:0]SR;
  input \wr_addr_reg[5] ;
  input gen_tx_data_IBUF;
  input \pkt_size_reg[0]_0 ;
  input rx_axis_fifo_tlast;
  input [7:0]\ram_loop[7].RAM64X1D_inst ;
  input rx_fifo_resetn;
  input rx_axis_fifo_tvalid;
  input [0:0]SS;

  wire CLK;
  wire \FSM_sequential_gen_state[0]_i_2_n_0 ;
  wire \FSM_sequential_gen_state[0]_i_3_n_0 ;
  wire \FSM_sequential_gen_state[0]_i_4_n_0 ;
  wire \FSM_sequential_gen_state[0]_i_5_n_0 ;
  wire \FSM_sequential_gen_state[1]_i_2_n_0 ;
  wire \FSM_sequential_gen_state[2]_i_2_n_0 ;
  wire \FSM_sequential_gen_state[2]_i_3_n_0 ;
  wire [0:0]Q;
  wire [0:0]SR;
  wire [0:0]SS;
  wire add_credit;
  wire add_credit_i_1_n_0;
  wire add_credit_i_2_n_0;
  wire \basic_rc_counter[7]_i_3_n_0 ;
  wire [7:1]basic_rc_counter_reg;
  wire \basic_rc_counter_reg_n_0_[0] ;
  wire \byte_count[0]_i_10_n_0 ;
  wire \byte_count[0]_i_11_n_0 ;
  wire \byte_count[0]_i_12_n_0 ;
  wire \byte_count[0]_i_13_n_0 ;
  wire \byte_count[0]_i_14_n_0 ;
  wire \byte_count[0]_i_1_n_0 ;
  wire \byte_count[0]_i_3_n_0 ;
  wire \byte_count[0]_i_4_n_0 ;
  wire \byte_count[0]_i_5_n_0 ;
  wire \byte_count[0]_i_6_n_0 ;
  wire \byte_count[0]_i_7_n_0 ;
  wire \byte_count[0]_i_8_n_0 ;
  wire \byte_count[0]_i_9_n_0 ;
  wire \byte_count[4]_i_2_n_0 ;
  wire \byte_count[4]_i_3_n_0 ;
  wire \byte_count[4]_i_4_n_0 ;
  wire \byte_count[4]_i_5_n_0 ;
  wire \byte_count[4]_i_6_n_0 ;
  wire \byte_count[4]_i_7_n_0 ;
  wire \byte_count[4]_i_8_n_0 ;
  wire \byte_count[4]_i_9_n_0 ;
  wire \byte_count[8]_i_2_n_0 ;
  wire \byte_count[8]_i_3_n_0 ;
  wire \byte_count[8]_i_4_n_0 ;
  wire \byte_count[8]_i_5_n_0 ;
  wire \byte_count[8]_i_6_n_0 ;
  wire \byte_count[8]_i_7_n_0 ;
  wire \byte_count[8]_i_8_n_0 ;
  wire byte_count_eq_1;
  wire byte_count_eq_10;
  wire byte_count_eq_1_i_1_n_0;
  wire byte_count_eq_1_i_3_n_0;
  wire byte_count_eq_1_i_4_n_0;
  wire byte_count_eq_1_i_5_n_0;
  wire [11:0]byte_count_reg;
  wire \byte_count_reg[0]_i_2_n_0 ;
  wire \byte_count_reg[0]_i_2_n_4 ;
  wire \byte_count_reg[0]_i_2_n_5 ;
  wire \byte_count_reg[0]_i_2_n_6 ;
  wire \byte_count_reg[0]_i_2_n_7 ;
  wire \byte_count_reg[4]_i_1_n_0 ;
  wire \byte_count_reg[4]_i_1_n_4 ;
  wire \byte_count_reg[4]_i_1_n_5 ;
  wire \byte_count_reg[4]_i_1_n_6 ;
  wire \byte_count_reg[4]_i_1_n_7 ;
  wire \byte_count_reg[8]_i_1_n_4 ;
  wire \byte_count_reg[8]_i_1_n_5 ;
  wire \byte_count_reg[8]_i_1_n_6 ;
  wire \byte_count_reg[8]_i_1_n_7 ;
  wire \credit_count[0]_i_10_n_0 ;
  wire \credit_count[0]_i_1_n_0 ;
  wire \credit_count[0]_i_3_n_0 ;
  wire \credit_count[0]_i_4_n_0 ;
  wire \credit_count[0]_i_5_n_0 ;
  wire \credit_count[0]_i_6_n_0 ;
  wire \credit_count[0]_i_7_n_0 ;
  wire \credit_count[0]_i_8_n_0 ;
  wire \credit_count[0]_i_9_n_0 ;
  wire \credit_count[12]_i_2_n_0 ;
  wire \credit_count[4]_i_2_n_0 ;
  wire \credit_count[4]_i_3_n_0 ;
  wire \credit_count[4]_i_4_n_0 ;
  wire \credit_count[4]_i_5_n_0 ;
  wire \credit_count[4]_i_6_n_0 ;
  wire \credit_count[4]_i_7_n_0 ;
  wire \credit_count[4]_i_8_n_0 ;
  wire \credit_count[4]_i_9_n_0 ;
  wire \credit_count[8]_i_2_n_0 ;
  wire \credit_count[8]_i_3_n_0 ;
  wire \credit_count[8]_i_4_n_0 ;
  wire \credit_count[8]_i_5_n_0 ;
  wire \credit_count[8]_i_6_n_0 ;
  wire \credit_count[8]_i_7_n_0 ;
  wire \credit_count[8]_i_8_n_0 ;
  wire \credit_count[8]_i_9_n_0 ;
  wire [12:10]credit_count_reg;
  wire \credit_count_reg[0]_i_2_n_0 ;
  wire \credit_count_reg[0]_i_2_n_4 ;
  wire \credit_count_reg[0]_i_2_n_5 ;
  wire \credit_count_reg[0]_i_2_n_6 ;
  wire \credit_count_reg[0]_i_2_n_7 ;
  wire \credit_count_reg[12]_i_1_n_7 ;
  wire \credit_count_reg[4]_i_1_n_0 ;
  wire \credit_count_reg[4]_i_1_n_4 ;
  wire \credit_count_reg[4]_i_1_n_5 ;
  wire \credit_count_reg[4]_i_1_n_6 ;
  wire \credit_count_reg[4]_i_1_n_7 ;
  wire \credit_count_reg[8]_i_1_n_0 ;
  wire \credit_count_reg[8]_i_1_n_4 ;
  wire \credit_count_reg[8]_i_1_n_5 ;
  wire \credit_count_reg[8]_i_1_n_6 ;
  wire \credit_count_reg[8]_i_1_n_7 ;
  wire \credit_count_reg_n_0_[0] ;
  wire \credit_count_reg_n_0_[1] ;
  wire \credit_count_reg_n_0_[2] ;
  wire \credit_count_reg_n_0_[3] ;
  wire \credit_count_reg_n_0_[4] ;
  wire \credit_count_reg_n_0_[5] ;
  wire \credit_count_reg_n_0_[6] ;
  wire \credit_count_reg_n_0_[7] ;
  wire \credit_count_reg_n_0_[8] ;
  wire \credit_count_reg_n_0_[9] ;
  wire [11:1]data0;
  wire [2:1]gen_state;
  wire gen_tx_data_IBUF;
  wire header_count04_out;
  wire \header_count[3]_i_1_n_0 ;
  wire \header_count_reg_n_0_[0] ;
  wire \header_count_reg_n_0_[1] ;
  wire \header_count_reg_n_0_[2] ;
  wire [7:0]mux_tdata;
  wire mux_tlast;
  wire [2:0]next_gen_state__0;
  wire overhead_count0;
  wire \overhead_count[0]_i_1_n_0 ;
  wire \overhead_count[1]_i_1_n_0 ;
  wire \overhead_count[2]_i_1_n_0 ;
  wire \overhead_count[3]_i_1_n_0 ;
  wire \overhead_count[4]_i_1_n_0 ;
  wire \overhead_count[4]_i_2_n_0 ;
  wire \overhead_count_reg_n_0_[0] ;
  wire \overhead_count_reg_n_0_[1] ;
  wire \overhead_count_reg_n_0_[2] ;
  wire \overhead_count_reg_n_0_[3] ;
  wire \overhead_count_reg_n_0_[4] ;
  wire [3:0]p_0_in;
  wire p_0_in_0;
  wire [7:0]p_0_in__0;
  wire p_0_out;
  wire p_1_out;
  wire p_3_out;
  wire p_4_out;
  wire p_5_out;
  wire p_6_out;
  wire p_8_out;
  wire pat_gen_tlast;
  wire pat_gen_tvalid;
  wire [11:0]pkt_size;
  wire pkt_size0;
  wire \pkt_size0_inferred__0/i__carry__0_n_0 ;
  wire \pkt_size0_inferred__0/i__carry_n_0 ;
  wire \pkt_size[11]_i_3_n_0 ;
  wire \pkt_size[11]_i_4_n_0 ;
  wire \pkt_size[11]_i_5_n_0 ;
  wire \pkt_size_reg[0]_0 ;
  wire \pkt_size_reg_n_0_[0] ;
  wire \pkt_size_reg_n_0_[10] ;
  wire \pkt_size_reg_n_0_[11] ;
  wire \pkt_size_reg_n_0_[1] ;
  wire \pkt_size_reg_n_0_[2] ;
  wire \pkt_size_reg_n_0_[3] ;
  wire \pkt_size_reg_n_0_[4] ;
  wire \pkt_size_reg_n_0_[5] ;
  wire \pkt_size_reg_n_0_[6] ;
  wire \pkt_size_reg_n_0_[7] ;
  wire \pkt_size_reg_n_0_[8] ;
  wire \pkt_size_reg_n_0_[9] ;
  wire [7:0]\ram_loop[7].RAM64X1D_inst ;
  wire rx_axis_fifo_tlast;
  wire rx_axis_fifo_tvalid;
  wire rx_axis_fifo_tvalid_reg;
  wire rx_fifo_resetn;
  wire \tdata[0]_i_1_n_0 ;
  wire \tdata[0]_i_2_n_0 ;
  wire \tdata[1]_i_1_n_0 ;
  wire \tdata[1]_i_2_n_0 ;
  wire \tdata[2]_i_1_n_0 ;
  wire \tdata[2]_i_2_n_0 ;
  wire \tdata[3]_i_1_n_0 ;
  wire \tdata[4]_i_1_n_0 ;
  wire \tdata[5]_i_1_n_0 ;
  wire \tdata[6]_i_1_n_0 ;
  wire \tdata[7]_i_1_n_0 ;
  wire \tdata[7]_i_2_n_0 ;
  wire \tdata[7]_i_3_n_0 ;
  wire \tdata[7]_i_4_n_0 ;
  wire \tdata_reg_n_0_[0] ;
  wire \tdata_reg_n_0_[1] ;
  wire \tdata_reg_n_0_[2] ;
  wire \tdata_reg_n_0_[3] ;
  wire \tdata_reg_n_0_[4] ;
  wire \tdata_reg_n_0_[5] ;
  wire \tdata_reg_n_0_[6] ;
  wire \tdata_reg_n_0_[7] ;
  wire tlast_i_1_n_0;
  wire tvalid_int_i_1_n_0;
  wire \wr_addr_reg[5] ;
  wire [2:0]\NLW_byte_count_reg[0]_i_2_CO_UNCONNECTED ;
  wire [2:0]\NLW_byte_count_reg[4]_i_1_CO_UNCONNECTED ;
  wire [3:0]\NLW_byte_count_reg[8]_i_1_CO_UNCONNECTED ;
  wire [2:0]\NLW_credit_count_reg[0]_i_2_CO_UNCONNECTED ;
  wire [3:0]\NLW_credit_count_reg[12]_i_1_CO_UNCONNECTED ;
  wire [3:1]\NLW_credit_count_reg[12]_i_1_O_UNCONNECTED ;
  wire [2:0]\NLW_credit_count_reg[4]_i_1_CO_UNCONNECTED ;
  wire [2:0]\NLW_credit_count_reg[8]_i_1_CO_UNCONNECTED ;
  wire [2:0]\NLW_pkt_size0_inferred__0/i__carry_CO_UNCONNECTED ;
  wire [2:0]\NLW_pkt_size0_inferred__0/i__carry__0_CO_UNCONNECTED ;
  wire [3:0]\NLW_pkt_size0_inferred__0/i__carry__1_CO_UNCONNECTED ;
  wire [3:3]\NLW_pkt_size0_inferred__0/i__carry__1_O_UNCONNECTED ;

  LUT6 #(
    .INIT(64'hFFFFFFFFAAAAFFEA)) 
    \FSM_sequential_gen_state[0]_i_1 
       (.I0(\FSM_sequential_gen_state[0]_i_2_n_0 ),
        .I1(\wr_addr_reg[5] ),
        .I2(byte_count_eq_1),
        .I3(Q),
        .I4(\FSM_sequential_gen_state[0]_i_3_n_0 ),
        .I5(\FSM_sequential_gen_state[1]_i_2_n_0 ),
        .O(next_gen_state__0[0]));
  LUT6 #(
    .INIT(64'hA0A2A2A2A2A2A2A2)) 
    \FSM_sequential_gen_state[0]_i_2 
       (.I0(Q),
        .I1(gen_state[1]),
        .I2(gen_state[2]),
        .I3(\wr_addr_reg[5] ),
        .I4(\overhead_count_reg_n_0_[0] ),
        .I5(\FSM_sequential_gen_state[0]_i_4_n_0 ),
        .O(\FSM_sequential_gen_state[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAAB)) 
    \FSM_sequential_gen_state[0]_i_3 
       (.I0(\FSM_sequential_gen_state[0]_i_5_n_0 ),
        .I1(\pkt_size_reg[0]_0 ),
        .I2(p_0_in_0),
        .I3(\header_count_reg_n_0_[2] ),
        .I4(\header_count_reg_n_0_[0] ),
        .I5(\header_count_reg_n_0_[1] ),
        .O(\FSM_sequential_gen_state[0]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \FSM_sequential_gen_state[0]_i_4 
       (.I0(\overhead_count_reg_n_0_[2] ),
        .I1(\overhead_count_reg_n_0_[1] ),
        .I2(\overhead_count_reg_n_0_[3] ),
        .I3(\overhead_count_reg_n_0_[4] ),
        .O(\FSM_sequential_gen_state[0]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \FSM_sequential_gen_state[0]_i_5 
       (.I0(gen_state[2]),
        .I1(gen_state[1]),
        .O(\FSM_sequential_gen_state[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFF7FFF7FFF70000)) 
    \FSM_sequential_gen_state[1]_i_1 
       (.I0(byte_count_eq_1),
        .I1(\wr_addr_reg[5] ),
        .I2(Q),
        .I3(gen_state[2]),
        .I4(\FSM_sequential_gen_state[1]_i_2_n_0 ),
        .I5(gen_state[1]),
        .O(next_gen_state__0[1]));
  LUT6 #(
    .INIT(64'h0800000000000000)) 
    \FSM_sequential_gen_state[1]_i_2 
       (.I0(\header_count_reg_n_0_[1] ),
        .I1(\header_count_reg_n_0_[0] ),
        .I2(\header_count_reg_n_0_[2] ),
        .I3(p_0_in_0),
        .I4(\wr_addr_reg[5] ),
        .I5(gen_state[2]),
        .O(\FSM_sequential_gen_state[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0040FFFF00400040)) 
    \FSM_sequential_gen_state[2]_i_1 
       (.I0(credit_count_reg[12]),
        .I1(\FSM_sequential_gen_state[2]_i_2_n_0 ),
        .I2(gen_tx_data_IBUF),
        .I3(pat_gen_tvalid),
        .I4(\FSM_sequential_gen_state[2]_i_3_n_0 ),
        .I5(gen_state[2]),
        .O(next_gen_state__0[2]));
  LUT3 #(
    .INIT(8'h01)) 
    \FSM_sequential_gen_state[2]_i_2 
       (.I0(gen_state[1]),
        .I1(gen_state[2]),
        .I2(Q),
        .O(\FSM_sequential_gen_state[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h08000000)) 
    \FSM_sequential_gen_state[2]_i_3 
       (.I0(\wr_addr_reg[5] ),
        .I1(p_0_in_0),
        .I2(\header_count_reg_n_0_[2] ),
        .I3(\header_count_reg_n_0_[0] ),
        .I4(\header_count_reg_n_0_[1] ),
        .O(\FSM_sequential_gen_state[2]_i_3_n_0 ));
  (* FSM_ENCODED_STATES = "HEADER:100,SIZE:011,DATA:010,OVERHEAD:001,IDLE:000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_state_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(next_gen_state__0[0]),
        .Q(Q),
        .R(SR));
  (* FSM_ENCODED_STATES = "HEADER:100,SIZE:011,DATA:010,OVERHEAD:001,IDLE:000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_state_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(next_gen_state__0[1]),
        .Q(gen_state[1]),
        .R(SR));
  (* FSM_ENCODED_STATES = "HEADER:100,SIZE:011,DATA:010,OVERHEAD:001,IDLE:000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_state_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(next_gen_state__0[2]),
        .Q(gen_state[2]),
        .R(SR));
  LUT3 #(
    .INIT(8'hB8)) 
    RAM64X1D_inst_last_i_1
       (.I0(pat_gen_tlast),
        .I1(gen_tx_data_IBUF),
        .I2(rx_axis_fifo_tlast),
        .O(mux_tlast));
  LUT4 #(
    .INIT(16'hE200)) 
    RAM64X1D_inst_last_i_2
       (.I0(rx_axis_fifo_tvalid),
        .I1(gen_tx_data_IBUF),
        .I2(pat_gen_tvalid),
        .I3(\wr_addr_reg[5] ),
        .O(rx_axis_fifo_tvalid_reg));
  LUT6 #(
    .INIT(64'h10FFFFFFFFFFFFFF)) 
    add_credit_i_1
       (.I0(basic_rc_counter_reg[3]),
        .I1(basic_rc_counter_reg[4]),
        .I2(add_credit_i_2_n_0),
        .I3(basic_rc_counter_reg[5]),
        .I4(basic_rc_counter_reg[6]),
        .I5(basic_rc_counter_reg[7]),
        .O(add_credit_i_1_n_0));
  LUT2 #(
    .INIT(4'h7)) 
    add_credit_i_2
       (.I0(basic_rc_counter_reg[1]),
        .I1(basic_rc_counter_reg[2]),
        .O(add_credit_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    add_credit_reg
       (.C(CLK),
        .CE(1'b1),
        .D(add_credit_i_1_n_0),
        .Q(add_credit),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \basic_rc_counter[0]_i_1 
       (.I0(\basic_rc_counter_reg_n_0_[0] ),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \basic_rc_counter[1]_i_1 
       (.I0(\basic_rc_counter_reg_n_0_[0] ),
        .I1(basic_rc_counter_reg[1]),
        .O(p_0_in__0[1]));
  LUT3 #(
    .INIT(8'h6A)) 
    \basic_rc_counter[2]_i_1 
       (.I0(basic_rc_counter_reg[2]),
        .I1(basic_rc_counter_reg[1]),
        .I2(\basic_rc_counter_reg_n_0_[0] ),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \basic_rc_counter[3]_i_1 
       (.I0(basic_rc_counter_reg[3]),
        .I1(basic_rc_counter_reg[1]),
        .I2(basic_rc_counter_reg[2]),
        .I3(\basic_rc_counter_reg_n_0_[0] ),
        .O(p_0_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \basic_rc_counter[4]_i_1 
       (.I0(basic_rc_counter_reg[4]),
        .I1(\basic_rc_counter_reg_n_0_[0] ),
        .I2(basic_rc_counter_reg[2]),
        .I3(basic_rc_counter_reg[1]),
        .I4(basic_rc_counter_reg[3]),
        .O(p_0_in__0[4]));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \basic_rc_counter[5]_i_1 
       (.I0(basic_rc_counter_reg[5]),
        .I1(basic_rc_counter_reg[3]),
        .I2(basic_rc_counter_reg[1]),
        .I3(basic_rc_counter_reg[2]),
        .I4(\basic_rc_counter_reg_n_0_[0] ),
        .I5(basic_rc_counter_reg[4]),
        .O(p_0_in__0[5]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \basic_rc_counter[6]_i_1 
       (.I0(basic_rc_counter_reg[6]),
        .I1(\basic_rc_counter[7]_i_3_n_0 ),
        .O(p_0_in__0[6]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \basic_rc_counter[7]_i_2 
       (.I0(basic_rc_counter_reg[7]),
        .I1(\basic_rc_counter[7]_i_3_n_0 ),
        .I2(basic_rc_counter_reg[6]),
        .O(p_0_in__0[7]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \basic_rc_counter[7]_i_3 
       (.I0(basic_rc_counter_reg[3]),
        .I1(basic_rc_counter_reg[1]),
        .I2(basic_rc_counter_reg[2]),
        .I3(\basic_rc_counter_reg_n_0_[0] ),
        .I4(basic_rc_counter_reg[4]),
        .I5(basic_rc_counter_reg[5]),
        .O(\basic_rc_counter[7]_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \basic_rc_counter_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(p_0_in__0[0]),
        .Q(\basic_rc_counter_reg_n_0_[0] ),
        .S(SS));
  FDSE #(
    .INIT(1'b1)) 
    \basic_rc_counter_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(p_0_in__0[1]),
        .Q(basic_rc_counter_reg[1]),
        .S(SS));
  FDSE #(
    .INIT(1'b1)) 
    \basic_rc_counter_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(p_0_in__0[2]),
        .Q(basic_rc_counter_reg[2]),
        .S(SS));
  FDSE #(
    .INIT(1'b1)) 
    \basic_rc_counter_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(p_0_in__0[3]),
        .Q(basic_rc_counter_reg[3]),
        .S(SS));
  FDSE #(
    .INIT(1'b1)) 
    \basic_rc_counter_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(p_0_in__0[4]),
        .Q(basic_rc_counter_reg[4]),
        .S(SS));
  FDSE #(
    .INIT(1'b1)) 
    \basic_rc_counter_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(p_0_in__0[5]),
        .Q(basic_rc_counter_reg[5]),
        .S(SS));
  FDSE #(
    .INIT(1'b1)) 
    \basic_rc_counter_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(p_0_in__0[6]),
        .Q(basic_rc_counter_reg[6]),
        .S(SS));
  FDSE #(
    .INIT(1'b1)) 
    \basic_rc_counter_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(p_0_in__0[7]),
        .Q(basic_rc_counter_reg[7]),
        .S(SS));
  LUT4 #(
    .INIT(16'h04FF)) 
    \byte_count[0]_i_1 
       (.I0(Q),
        .I1(gen_state[2]),
        .I2(gen_state[1]),
        .I3(\byte_count[0]_i_3_n_0 ),
        .O(\byte_count[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAEAAFFFFF3FF)) 
    \byte_count[0]_i_10 
       (.I0(\pkt_size_reg_n_0_[1] ),
        .I1(byte_count_reg[1]),
        .I2(\FSM_sequential_gen_state[0]_i_5_n_0 ),
        .I3(\wr_addr_reg[5] ),
        .I4(Q),
        .I5(\byte_count[0]_i_3_n_0 ),
        .O(\byte_count[0]_i_10_n_0 ));
  LUT3 #(
    .INIT(8'hC5)) 
    \byte_count[0]_i_11 
       (.I0(byte_count_reg[0]),
        .I1(\pkt_size_reg_n_0_[0] ),
        .I2(\byte_count[0]_i_3_n_0 ),
        .O(\byte_count[0]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hFBFF)) 
    \byte_count[0]_i_12 
       (.I0(Q),
        .I1(\wr_addr_reg[5] ),
        .I2(gen_state[2]),
        .I3(gen_state[1]),
        .O(\byte_count[0]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \byte_count[0]_i_13 
       (.I0(byte_count_reg[3]),
        .I1(byte_count_reg[2]),
        .I2(byte_count_reg[1]),
        .I3(byte_count_reg[0]),
        .O(\byte_count[0]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \byte_count[0]_i_14 
       (.I0(byte_count_reg[7]),
        .I1(byte_count_reg[4]),
        .I2(byte_count_reg[8]),
        .I3(byte_count_reg[9]),
        .I4(byte_count_reg[10]),
        .I5(byte_count_reg[11]),
        .O(\byte_count[0]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'hAAAAAAAB)) 
    \byte_count[0]_i_3 
       (.I0(\byte_count[0]_i_12_n_0 ),
        .I1(\byte_count[0]_i_13_n_0 ),
        .I2(byte_count_reg[6]),
        .I3(byte_count_reg[5]),
        .I4(\byte_count[0]_i_14_n_0 ),
        .O(\byte_count[0]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \byte_count[0]_i_4 
       (.I0(\pkt_size_reg_n_0_[3] ),
        .I1(\byte_count[0]_i_3_n_0 ),
        .I2(byte_count_reg[3]),
        .O(\byte_count[0]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \byte_count[0]_i_5 
       (.I0(\pkt_size_reg_n_0_[2] ),
        .I1(\byte_count[0]_i_3_n_0 ),
        .I2(byte_count_reg[2]),
        .O(\byte_count[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF040004000400)) 
    \byte_count[0]_i_6 
       (.I0(Q),
        .I1(\wr_addr_reg[5] ),
        .I2(\FSM_sequential_gen_state[0]_i_5_n_0 ),
        .I3(byte_count_reg[1]),
        .I4(\byte_count[0]_i_3_n_0 ),
        .I5(\pkt_size_reg_n_0_[1] ),
        .O(\byte_count[0]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \byte_count[0]_i_7 
       (.I0(\pkt_size_reg_n_0_[0] ),
        .I1(\byte_count[0]_i_3_n_0 ),
        .I2(byte_count_reg[0]),
        .O(\byte_count[0]_i_7_n_0 ));
  LUT3 #(
    .INIT(8'hC5)) 
    \byte_count[0]_i_8 
       (.I0(byte_count_reg[3]),
        .I1(\pkt_size_reg_n_0_[3] ),
        .I2(\byte_count[0]_i_3_n_0 ),
        .O(\byte_count[0]_i_8_n_0 ));
  LUT3 #(
    .INIT(8'hC5)) 
    \byte_count[0]_i_9 
       (.I0(byte_count_reg[2]),
        .I1(\pkt_size_reg_n_0_[2] ),
        .I2(\byte_count[0]_i_3_n_0 ),
        .O(\byte_count[0]_i_9_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \byte_count[4]_i_2 
       (.I0(\pkt_size_reg_n_0_[7] ),
        .I1(\byte_count[0]_i_3_n_0 ),
        .I2(byte_count_reg[7]),
        .O(\byte_count[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \byte_count[4]_i_3 
       (.I0(\pkt_size_reg_n_0_[6] ),
        .I1(\byte_count[0]_i_3_n_0 ),
        .I2(byte_count_reg[6]),
        .O(\byte_count[4]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \byte_count[4]_i_4 
       (.I0(\pkt_size_reg_n_0_[5] ),
        .I1(\byte_count[0]_i_3_n_0 ),
        .I2(byte_count_reg[5]),
        .O(\byte_count[4]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \byte_count[4]_i_5 
       (.I0(\pkt_size_reg_n_0_[4] ),
        .I1(\byte_count[0]_i_3_n_0 ),
        .I2(byte_count_reg[4]),
        .O(\byte_count[4]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'hC5)) 
    \byte_count[4]_i_6 
       (.I0(byte_count_reg[7]),
        .I1(\pkt_size_reg_n_0_[7] ),
        .I2(\byte_count[0]_i_3_n_0 ),
        .O(\byte_count[4]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'hC5)) 
    \byte_count[4]_i_7 
       (.I0(byte_count_reg[6]),
        .I1(\pkt_size_reg_n_0_[6] ),
        .I2(\byte_count[0]_i_3_n_0 ),
        .O(\byte_count[4]_i_7_n_0 ));
  LUT3 #(
    .INIT(8'hC5)) 
    \byte_count[4]_i_8 
       (.I0(byte_count_reg[5]),
        .I1(\pkt_size_reg_n_0_[5] ),
        .I2(\byte_count[0]_i_3_n_0 ),
        .O(\byte_count[4]_i_8_n_0 ));
  LUT3 #(
    .INIT(8'hC5)) 
    \byte_count[4]_i_9 
       (.I0(byte_count_reg[4]),
        .I1(\pkt_size_reg_n_0_[4] ),
        .I2(\byte_count[0]_i_3_n_0 ),
        .O(\byte_count[4]_i_9_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \byte_count[8]_i_2 
       (.I0(\pkt_size_reg_n_0_[10] ),
        .I1(\byte_count[0]_i_3_n_0 ),
        .I2(byte_count_reg[10]),
        .O(\byte_count[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \byte_count[8]_i_3 
       (.I0(\pkt_size_reg_n_0_[9] ),
        .I1(\byte_count[0]_i_3_n_0 ),
        .I2(byte_count_reg[9]),
        .O(\byte_count[8]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \byte_count[8]_i_4 
       (.I0(\pkt_size_reg_n_0_[8] ),
        .I1(\byte_count[0]_i_3_n_0 ),
        .I2(byte_count_reg[8]),
        .O(\byte_count[8]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'h8B)) 
    \byte_count[8]_i_5 
       (.I0(\pkt_size_reg_n_0_[11] ),
        .I1(\byte_count[0]_i_3_n_0 ),
        .I2(byte_count_reg[11]),
        .O(\byte_count[8]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'hC5)) 
    \byte_count[8]_i_6 
       (.I0(byte_count_reg[10]),
        .I1(\pkt_size_reg_n_0_[10] ),
        .I2(\byte_count[0]_i_3_n_0 ),
        .O(\byte_count[8]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'hC5)) 
    \byte_count[8]_i_7 
       (.I0(byte_count_reg[9]),
        .I1(\pkt_size_reg_n_0_[9] ),
        .I2(\byte_count[0]_i_3_n_0 ),
        .O(\byte_count[8]_i_7_n_0 ));
  LUT3 #(
    .INIT(8'hC5)) 
    \byte_count[8]_i_8 
       (.I0(byte_count_reg[8]),
        .I1(\pkt_size_reg_n_0_[8] ),
        .I2(\byte_count[0]_i_3_n_0 ),
        .O(\byte_count[8]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00040000)) 
    byte_count_eq_1_i_1
       (.I0(Q),
        .I1(byte_count_eq_1),
        .I2(\wr_addr_reg[5] ),
        .I3(gen_state[2]),
        .I4(gen_state[1]),
        .I5(byte_count_eq_10),
        .O(byte_count_eq_1_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    byte_count_eq_1_i_2
       (.I0(byte_count_eq_1_i_3_n_0),
        .I1(byte_count_eq_1_i_4_n_0),
        .I2(byte_count_eq_1_i_5_n_0),
        .I3(byte_count_reg[8]),
        .I4(byte_count_reg[9]),
        .I5(byte_count_reg[6]),
        .O(byte_count_eq_10));
  LUT5 #(
    .INIT(32'h00000800)) 
    byte_count_eq_1_i_3
       (.I0(byte_count_reg[1]),
        .I1(gen_state[1]),
        .I2(gen_state[2]),
        .I3(\wr_addr_reg[5] ),
        .I4(Q),
        .O(byte_count_eq_1_i_3_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    byte_count_eq_1_i_4
       (.I0(byte_count_reg[7]),
        .I1(byte_count_reg[4]),
        .I2(byte_count_reg[5]),
        .I3(byte_count_reg[2]),
        .O(byte_count_eq_1_i_4_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    byte_count_eq_1_i_5
       (.I0(byte_count_reg[11]),
        .I1(byte_count_reg[10]),
        .I2(byte_count_reg[3]),
        .I3(byte_count_reg[0]),
        .O(byte_count_eq_1_i_5_n_0));
  FDRE #(
    .INIT(1'b0)) 
    byte_count_eq_1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(byte_count_eq_1_i_1_n_0),
        .Q(byte_count_eq_1),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \byte_count_reg[0] 
       (.C(CLK),
        .CE(\byte_count[0]_i_1_n_0 ),
        .D(\byte_count_reg[0]_i_2_n_7 ),
        .Q(byte_count_reg[0]),
        .R(SR));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \byte_count_reg[0]_i_2 
       (.CI(1'b0),
        .CO({\byte_count_reg[0]_i_2_n_0 ,\NLW_byte_count_reg[0]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\byte_count[0]_i_4_n_0 ,\byte_count[0]_i_5_n_0 ,\byte_count[0]_i_6_n_0 ,\byte_count[0]_i_7_n_0 }),
        .O({\byte_count_reg[0]_i_2_n_4 ,\byte_count_reg[0]_i_2_n_5 ,\byte_count_reg[0]_i_2_n_6 ,\byte_count_reg[0]_i_2_n_7 }),
        .S({\byte_count[0]_i_8_n_0 ,\byte_count[0]_i_9_n_0 ,\byte_count[0]_i_10_n_0 ,\byte_count[0]_i_11_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \byte_count_reg[10] 
       (.C(CLK),
        .CE(\byte_count[0]_i_1_n_0 ),
        .D(\byte_count_reg[8]_i_1_n_5 ),
        .Q(byte_count_reg[10]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \byte_count_reg[11] 
       (.C(CLK),
        .CE(\byte_count[0]_i_1_n_0 ),
        .D(\byte_count_reg[8]_i_1_n_4 ),
        .Q(byte_count_reg[11]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \byte_count_reg[1] 
       (.C(CLK),
        .CE(\byte_count[0]_i_1_n_0 ),
        .D(\byte_count_reg[0]_i_2_n_6 ),
        .Q(byte_count_reg[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \byte_count_reg[2] 
       (.C(CLK),
        .CE(\byte_count[0]_i_1_n_0 ),
        .D(\byte_count_reg[0]_i_2_n_5 ),
        .Q(byte_count_reg[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \byte_count_reg[3] 
       (.C(CLK),
        .CE(\byte_count[0]_i_1_n_0 ),
        .D(\byte_count_reg[0]_i_2_n_4 ),
        .Q(byte_count_reg[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \byte_count_reg[4] 
       (.C(CLK),
        .CE(\byte_count[0]_i_1_n_0 ),
        .D(\byte_count_reg[4]_i_1_n_7 ),
        .Q(byte_count_reg[4]),
        .R(SR));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \byte_count_reg[4]_i_1 
       (.CI(\byte_count_reg[0]_i_2_n_0 ),
        .CO({\byte_count_reg[4]_i_1_n_0 ,\NLW_byte_count_reg[4]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\byte_count[4]_i_2_n_0 ,\byte_count[4]_i_3_n_0 ,\byte_count[4]_i_4_n_0 ,\byte_count[4]_i_5_n_0 }),
        .O({\byte_count_reg[4]_i_1_n_4 ,\byte_count_reg[4]_i_1_n_5 ,\byte_count_reg[4]_i_1_n_6 ,\byte_count_reg[4]_i_1_n_7 }),
        .S({\byte_count[4]_i_6_n_0 ,\byte_count[4]_i_7_n_0 ,\byte_count[4]_i_8_n_0 ,\byte_count[4]_i_9_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \byte_count_reg[5] 
       (.C(CLK),
        .CE(\byte_count[0]_i_1_n_0 ),
        .D(\byte_count_reg[4]_i_1_n_6 ),
        .Q(byte_count_reg[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \byte_count_reg[6] 
       (.C(CLK),
        .CE(\byte_count[0]_i_1_n_0 ),
        .D(\byte_count_reg[4]_i_1_n_5 ),
        .Q(byte_count_reg[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \byte_count_reg[7] 
       (.C(CLK),
        .CE(\byte_count[0]_i_1_n_0 ),
        .D(\byte_count_reg[4]_i_1_n_4 ),
        .Q(byte_count_reg[7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \byte_count_reg[8] 
       (.C(CLK),
        .CE(\byte_count[0]_i_1_n_0 ),
        .D(\byte_count_reg[8]_i_1_n_7 ),
        .Q(byte_count_reg[8]),
        .R(SR));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \byte_count_reg[8]_i_1 
       (.CI(\byte_count_reg[4]_i_1_n_0 ),
        .CO(\NLW_byte_count_reg[8]_i_1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,\byte_count[8]_i_2_n_0 ,\byte_count[8]_i_3_n_0 ,\byte_count[8]_i_4_n_0 }),
        .O({\byte_count_reg[8]_i_1_n_4 ,\byte_count_reg[8]_i_1_n_5 ,\byte_count_reg[8]_i_1_n_6 ,\byte_count_reg[8]_i_1_n_7 }),
        .S({\byte_count[8]_i_5_n_0 ,\byte_count[8]_i_6_n_0 ,\byte_count[8]_i_7_n_0 ,\byte_count[8]_i_8_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \byte_count_reg[9] 
       (.C(CLK),
        .CE(\byte_count[0]_i_1_n_0 ),
        .D(\byte_count_reg[8]_i_1_n_6 ),
        .Q(byte_count_reg[9]),
        .R(SR));
  LUT5 #(
    .INIT(32'h88AA5155)) 
    \credit_count[0]_i_1 
       (.I0(\FSM_sequential_gen_state[2]_i_2_n_0 ),
        .I1(credit_count_reg[12]),
        .I2(credit_count_reg[10]),
        .I3(credit_count_reg[11]),
        .I4(add_credit),
        .O(\credit_count[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FE)) 
    \credit_count[0]_i_10 
       (.I0(Q),
        .I1(gen_state[2]),
        .I2(gen_state[1]),
        .I3(\credit_count_reg_n_0_[0] ),
        .O(\credit_count[0]_i_10_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \credit_count[0]_i_3 
       (.I0(Q),
        .I1(gen_state[2]),
        .I2(gen_state[1]),
        .O(\credit_count[0]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \credit_count[0]_i_4 
       (.I0(Q),
        .I1(gen_state[2]),
        .I2(gen_state[1]),
        .O(\credit_count[0]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \credit_count[0]_i_5 
       (.I0(Q),
        .I1(gen_state[2]),
        .I2(gen_state[1]),
        .O(\credit_count[0]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \credit_count[0]_i_6 
       (.I0(Q),
        .I1(gen_state[2]),
        .I2(gen_state[1]),
        .O(\credit_count[0]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h01FE)) 
    \credit_count[0]_i_7 
       (.I0(Q),
        .I1(gen_state[2]),
        .I2(gen_state[1]),
        .I3(\credit_count_reg_n_0_[3] ),
        .O(\credit_count[0]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h01FE)) 
    \credit_count[0]_i_8 
       (.I0(Q),
        .I1(gen_state[2]),
        .I2(gen_state[1]),
        .I3(\credit_count_reg_n_0_[2] ),
        .O(\credit_count[0]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h01FE)) 
    \credit_count[0]_i_9 
       (.I0(Q),
        .I1(gen_state[2]),
        .I2(gen_state[1]),
        .I3(\credit_count_reg_n_0_[1] ),
        .O(\credit_count[0]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'h5556)) 
    \credit_count[12]_i_2 
       (.I0(credit_count_reg[12]),
        .I1(Q),
        .I2(gen_state[2]),
        .I3(gen_state[1]),
        .O(\credit_count[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \credit_count[4]_i_2 
       (.I0(Q),
        .I1(gen_state[2]),
        .I2(gen_state[1]),
        .O(\credit_count[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \credit_count[4]_i_3 
       (.I0(Q),
        .I1(gen_state[2]),
        .I2(gen_state[1]),
        .O(\credit_count[4]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \credit_count[4]_i_4 
       (.I0(Q),
        .I1(gen_state[2]),
        .I2(gen_state[1]),
        .O(\credit_count[4]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \credit_count[4]_i_5 
       (.I0(Q),
        .I1(gen_state[2]),
        .I2(gen_state[1]),
        .O(\credit_count[4]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h01FE)) 
    \credit_count[4]_i_6 
       (.I0(Q),
        .I1(gen_state[2]),
        .I2(gen_state[1]),
        .I3(\credit_count_reg_n_0_[7] ),
        .O(\credit_count[4]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h01FE)) 
    \credit_count[4]_i_7 
       (.I0(Q),
        .I1(gen_state[2]),
        .I2(gen_state[1]),
        .I3(\credit_count_reg_n_0_[6] ),
        .O(\credit_count[4]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h01FE)) 
    \credit_count[4]_i_8 
       (.I0(Q),
        .I1(gen_state[2]),
        .I2(gen_state[1]),
        .I3(\credit_count_reg_n_0_[5] ),
        .O(\credit_count[4]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h01FE)) 
    \credit_count[4]_i_9 
       (.I0(Q),
        .I1(gen_state[2]),
        .I2(gen_state[1]),
        .I3(\credit_count_reg_n_0_[4] ),
        .O(\credit_count[4]_i_9_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \credit_count[8]_i_2 
       (.I0(Q),
        .I1(gen_state[2]),
        .I2(gen_state[1]),
        .O(\credit_count[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \credit_count[8]_i_3 
       (.I0(Q),
        .I1(gen_state[2]),
        .I2(gen_state[1]),
        .O(\credit_count[8]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \credit_count[8]_i_4 
       (.I0(Q),
        .I1(gen_state[2]),
        .I2(gen_state[1]),
        .O(\credit_count[8]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \credit_count[8]_i_5 
       (.I0(Q),
        .I1(gen_state[2]),
        .I2(gen_state[1]),
        .O(\credit_count[8]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h01FE)) 
    \credit_count[8]_i_6 
       (.I0(Q),
        .I1(gen_state[2]),
        .I2(gen_state[1]),
        .I3(credit_count_reg[11]),
        .O(\credit_count[8]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h01FE)) 
    \credit_count[8]_i_7 
       (.I0(Q),
        .I1(gen_state[2]),
        .I2(gen_state[1]),
        .I3(credit_count_reg[10]),
        .O(\credit_count[8]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h01FE)) 
    \credit_count[8]_i_8 
       (.I0(Q),
        .I1(gen_state[2]),
        .I2(gen_state[1]),
        .I3(\credit_count_reg_n_0_[9] ),
        .O(\credit_count[8]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h01FE)) 
    \credit_count[8]_i_9 
       (.I0(Q),
        .I1(gen_state[2]),
        .I2(gen_state[1]),
        .I3(\credit_count_reg_n_0_[8] ),
        .O(\credit_count[8]_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \credit_count_reg[0] 
       (.C(CLK),
        .CE(\credit_count[0]_i_1_n_0 ),
        .D(\credit_count_reg[0]_i_2_n_7 ),
        .Q(\credit_count_reg_n_0_[0] ),
        .R(SR));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \credit_count_reg[0]_i_2 
       (.CI(1'b0),
        .CO({\credit_count_reg[0]_i_2_n_0 ,\NLW_credit_count_reg[0]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(\FSM_sequential_gen_state[2]_i_2_n_0 ),
        .DI({\credit_count[0]_i_3_n_0 ,\credit_count[0]_i_4_n_0 ,\credit_count[0]_i_5_n_0 ,\credit_count[0]_i_6_n_0 }),
        .O({\credit_count_reg[0]_i_2_n_4 ,\credit_count_reg[0]_i_2_n_5 ,\credit_count_reg[0]_i_2_n_6 ,\credit_count_reg[0]_i_2_n_7 }),
        .S({\credit_count[0]_i_7_n_0 ,\credit_count[0]_i_8_n_0 ,\credit_count[0]_i_9_n_0 ,\credit_count[0]_i_10_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \credit_count_reg[10] 
       (.C(CLK),
        .CE(\credit_count[0]_i_1_n_0 ),
        .D(\credit_count_reg[8]_i_1_n_5 ),
        .Q(credit_count_reg[10]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \credit_count_reg[11] 
       (.C(CLK),
        .CE(\credit_count[0]_i_1_n_0 ),
        .D(\credit_count_reg[8]_i_1_n_4 ),
        .Q(credit_count_reg[11]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \credit_count_reg[12] 
       (.C(CLK),
        .CE(\credit_count[0]_i_1_n_0 ),
        .D(\credit_count_reg[12]_i_1_n_7 ),
        .Q(credit_count_reg[12]),
        .R(SR));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \credit_count_reg[12]_i_1 
       (.CI(\credit_count_reg[8]_i_1_n_0 ),
        .CO(\NLW_credit_count_reg[12]_i_1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_credit_count_reg[12]_i_1_O_UNCONNECTED [3:1],\credit_count_reg[12]_i_1_n_7 }),
        .S({1'b0,1'b0,1'b0,\credit_count[12]_i_2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \credit_count_reg[1] 
       (.C(CLK),
        .CE(\credit_count[0]_i_1_n_0 ),
        .D(\credit_count_reg[0]_i_2_n_6 ),
        .Q(\credit_count_reg_n_0_[1] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \credit_count_reg[2] 
       (.C(CLK),
        .CE(\credit_count[0]_i_1_n_0 ),
        .D(\credit_count_reg[0]_i_2_n_5 ),
        .Q(\credit_count_reg_n_0_[2] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \credit_count_reg[3] 
       (.C(CLK),
        .CE(\credit_count[0]_i_1_n_0 ),
        .D(\credit_count_reg[0]_i_2_n_4 ),
        .Q(\credit_count_reg_n_0_[3] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \credit_count_reg[4] 
       (.C(CLK),
        .CE(\credit_count[0]_i_1_n_0 ),
        .D(\credit_count_reg[4]_i_1_n_7 ),
        .Q(\credit_count_reg_n_0_[4] ),
        .R(SR));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \credit_count_reg[4]_i_1 
       (.CI(\credit_count_reg[0]_i_2_n_0 ),
        .CO({\credit_count_reg[4]_i_1_n_0 ,\NLW_credit_count_reg[4]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\credit_count[4]_i_2_n_0 ,\credit_count[4]_i_3_n_0 ,\credit_count[4]_i_4_n_0 ,\credit_count[4]_i_5_n_0 }),
        .O({\credit_count_reg[4]_i_1_n_4 ,\credit_count_reg[4]_i_1_n_5 ,\credit_count_reg[4]_i_1_n_6 ,\credit_count_reg[4]_i_1_n_7 }),
        .S({\credit_count[4]_i_6_n_0 ,\credit_count[4]_i_7_n_0 ,\credit_count[4]_i_8_n_0 ,\credit_count[4]_i_9_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \credit_count_reg[5] 
       (.C(CLK),
        .CE(\credit_count[0]_i_1_n_0 ),
        .D(\credit_count_reg[4]_i_1_n_6 ),
        .Q(\credit_count_reg_n_0_[5] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \credit_count_reg[6] 
       (.C(CLK),
        .CE(\credit_count[0]_i_1_n_0 ),
        .D(\credit_count_reg[4]_i_1_n_5 ),
        .Q(\credit_count_reg_n_0_[6] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \credit_count_reg[7] 
       (.C(CLK),
        .CE(\credit_count[0]_i_1_n_0 ),
        .D(\credit_count_reg[4]_i_1_n_4 ),
        .Q(\credit_count_reg_n_0_[7] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \credit_count_reg[8] 
       (.C(CLK),
        .CE(\credit_count[0]_i_1_n_0 ),
        .D(\credit_count_reg[8]_i_1_n_7 ),
        .Q(\credit_count_reg_n_0_[8] ),
        .R(SR));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \credit_count_reg[8]_i_1 
       (.CI(\credit_count_reg[4]_i_1_n_0 ),
        .CO({\credit_count_reg[8]_i_1_n_0 ,\NLW_credit_count_reg[8]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\credit_count[8]_i_2_n_0 ,\credit_count[8]_i_3_n_0 ,\credit_count[8]_i_4_n_0 ,\credit_count[8]_i_5_n_0 }),
        .O({\credit_count_reg[8]_i_1_n_4 ,\credit_count_reg[8]_i_1_n_5 ,\credit_count_reg[8]_i_1_n_6 ,\credit_count_reg[8]_i_1_n_7 }),
        .S({\credit_count[8]_i_6_n_0 ,\credit_count[8]_i_7_n_0 ,\credit_count[8]_i_8_n_0 ,\credit_count[8]_i_9_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \credit_count_reg[9] 
       (.C(CLK),
        .CE(\credit_count[0]_i_1_n_0 ),
        .D(\credit_count_reg[8]_i_1_n_6 ),
        .Q(\credit_count_reg_n_0_[9] ),
        .R(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \header_count[0]_i_1 
       (.I0(\header_count_reg_n_0_[0] ),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \header_count[1]_i_1 
       (.I0(\header_count_reg_n_0_[0] ),
        .I1(\header_count_reg_n_0_[1] ),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \header_count[2]_i_1 
       (.I0(\header_count_reg_n_0_[2] ),
        .I1(\header_count_reg_n_0_[1] ),
        .I2(\header_count_reg_n_0_[0] ),
        .O(p_0_in[2]));
  LUT5 #(
    .INIT(32'h2000FFFF)) 
    \header_count[3]_i_1 
       (.I0(gen_state[1]),
        .I1(gen_state[2]),
        .I2(\wr_addr_reg[5] ),
        .I3(Q),
        .I4(rx_fifo_resetn),
        .O(\header_count[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF0000)) 
    \header_count[3]_i_2 
       (.I0(\header_count_reg_n_0_[2] ),
        .I1(\header_count_reg_n_0_[1] ),
        .I2(\header_count_reg_n_0_[0] ),
        .I3(p_0_in_0),
        .I4(\tdata[7]_i_3_n_0 ),
        .O(header_count04_out));
  LUT4 #(
    .INIT(16'h6AAA)) 
    \header_count[3]_i_3 
       (.I0(p_0_in_0),
        .I1(\header_count_reg_n_0_[0] ),
        .I2(\header_count_reg_n_0_[1] ),
        .I3(\header_count_reg_n_0_[2] ),
        .O(p_0_in[3]));
  FDRE #(
    .INIT(1'b0)) 
    \header_count_reg[0] 
       (.C(CLK),
        .CE(header_count04_out),
        .D(p_0_in[0]),
        .Q(\header_count_reg_n_0_[0] ),
        .R(\header_count[3]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \header_count_reg[1] 
       (.C(CLK),
        .CE(header_count04_out),
        .D(p_0_in[1]),
        .Q(\header_count_reg_n_0_[1] ),
        .R(\header_count[3]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \header_count_reg[2] 
       (.C(CLK),
        .CE(header_count04_out),
        .D(p_0_in[2]),
        .Q(\header_count_reg_n_0_[2] ),
        .R(\header_count[3]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \header_count_reg[3] 
       (.C(CLK),
        .CE(header_count04_out),
        .D(p_0_in[3]),
        .Q(p_0_in_0),
        .R(\header_count[3]_i_1_n_0 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'h1AAA)) 
    \lut_loop[0].LUT6_inst 
       (.I0(\header_count_reg_n_0_[0] ),
        .I1(\header_count_reg_n_0_[1] ),
        .I2(\header_count_reg_n_0_[2] ),
        .I3(p_0_in_0),
        .O(p_8_out));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'h834D)) 
    \lut_loop[1].LUT6_inst 
       (.I0(\header_count_reg_n_0_[0] ),
        .I1(\header_count_reg_n_0_[1] ),
        .I2(\header_count_reg_n_0_[2] ),
        .I3(p_0_in_0),
        .O(p_6_out));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT3 #(
    .INIT(8'h24)) 
    \lut_loop[2].LUT6_inst 
       (.I0(\header_count_reg_n_0_[1] ),
        .I1(\header_count_reg_n_0_[2] ),
        .I2(p_0_in_0),
        .O(p_5_out));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'h0041)) 
    \lut_loop[3].LUT6_inst 
       (.I0(\header_count_reg_n_0_[0] ),
        .I1(\header_count_reg_n_0_[1] ),
        .I2(\header_count_reg_n_0_[2] ),
        .I3(p_0_in_0),
        .O(p_4_out));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'h0041)) 
    \lut_loop[4].LUT6_inst 
       (.I0(\header_count_reg_n_0_[0] ),
        .I1(\header_count_reg_n_0_[1] ),
        .I2(\header_count_reg_n_0_[2] ),
        .I3(p_0_in_0),
        .O(p_3_out));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'h4041)) 
    \lut_loop[6].LUT6_inst 
       (.I0(\header_count_reg_n_0_[0] ),
        .I1(\header_count_reg_n_0_[1] ),
        .I2(\header_count_reg_n_0_[2] ),
        .I3(p_0_in_0),
        .O(p_1_out));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'h1001)) 
    \lut_loop[7].LUT6_inst 
       (.I0(\header_count_reg_n_0_[0] ),
        .I1(\header_count_reg_n_0_[1] ),
        .I2(\header_count_reg_n_0_[2] ),
        .I3(p_0_in_0),
        .O(p_0_out));
  LUT6 #(
    .INIT(64'h6060606060606000)) 
    \overhead_count[0]_i_1 
       (.I0(\overhead_count_reg_n_0_[0] ),
        .I1(overhead_count0),
        .I2(rx_fifo_resetn),
        .I3(gen_state[1]),
        .I4(gen_state[2]),
        .I5(Q),
        .O(\overhead_count[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0000A600)) 
    \overhead_count[1]_i_1 
       (.I0(\overhead_count_reg_n_0_[1] ),
        .I1(overhead_count0),
        .I2(\overhead_count_reg_n_0_[0] ),
        .I3(rx_fifo_resetn),
        .I4(\FSM_sequential_gen_state[2]_i_2_n_0 ),
        .O(\overhead_count[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000AAA60000)) 
    \overhead_count[2]_i_1 
       (.I0(\overhead_count_reg_n_0_[2] ),
        .I1(overhead_count0),
        .I2(\overhead_count_reg_n_0_[1] ),
        .I3(\overhead_count_reg_n_0_[0] ),
        .I4(rx_fifo_resetn),
        .I5(\FSM_sequential_gen_state[2]_i_2_n_0 ),
        .O(\overhead_count[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFEFFFFFF0100)) 
    \overhead_count[3]_i_1 
       (.I0(\overhead_count_reg_n_0_[0] ),
        .I1(\overhead_count_reg_n_0_[1] ),
        .I2(\overhead_count_reg_n_0_[2] ),
        .I3(overhead_count0),
        .I4(\FSM_sequential_gen_state[2]_i_2_n_0 ),
        .I5(\overhead_count_reg_n_0_[3] ),
        .O(\overhead_count[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFDFFF20)) 
    \overhead_count[4]_i_1 
       (.I0(\overhead_count[4]_i_2_n_0 ),
        .I1(\overhead_count_reg_n_0_[3] ),
        .I2(overhead_count0),
        .I3(\FSM_sequential_gen_state[2]_i_2_n_0 ),
        .I4(\overhead_count_reg_n_0_[4] ),
        .O(\overhead_count[4]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \overhead_count[4]_i_2 
       (.I0(\overhead_count_reg_n_0_[0] ),
        .I1(\overhead_count_reg_n_0_[1] ),
        .I2(\overhead_count_reg_n_0_[2] ),
        .O(\overhead_count[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h000D000000000000)) 
    \overhead_count[4]_i_3 
       (.I0(\FSM_sequential_gen_state[0]_i_4_n_0 ),
        .I1(\overhead_count_reg_n_0_[0] ),
        .I2(gen_state[2]),
        .I3(gen_state[1]),
        .I4(\wr_addr_reg[5] ),
        .I5(Q),
        .O(overhead_count0));
  FDRE #(
    .INIT(1'b0)) 
    \overhead_count_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\overhead_count[0]_i_1_n_0 ),
        .Q(\overhead_count_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \overhead_count_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\overhead_count[1]_i_1_n_0 ),
        .Q(\overhead_count_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \overhead_count_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(\overhead_count[2]_i_1_n_0 ),
        .Q(\overhead_count_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \overhead_count_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(\overhead_count[3]_i_1_n_0 ),
        .Q(\overhead_count_reg_n_0_[3] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \overhead_count_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(\overhead_count[4]_i_1_n_0 ),
        .Q(\overhead_count_reg_n_0_[4] ),
        .R(SR));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \pkt_size0_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\pkt_size0_inferred__0/i__carry_n_0 ,\NLW_pkt_size0_inferred__0/i__carry_CO_UNCONNECTED [2:0]}),
        .CYINIT(\pkt_size_reg_n_0_[0] ),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data0[4:1]),
        .S({\pkt_size_reg_n_0_[4] ,\pkt_size_reg_n_0_[3] ,\pkt_size_reg_n_0_[2] ,\pkt_size_reg_n_0_[1] }));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \pkt_size0_inferred__0/i__carry__0 
       (.CI(\pkt_size0_inferred__0/i__carry_n_0 ),
        .CO({\pkt_size0_inferred__0/i__carry__0_n_0 ,\NLW_pkt_size0_inferred__0/i__carry__0_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data0[8:5]),
        .S({\pkt_size_reg_n_0_[8] ,\pkt_size_reg_n_0_[7] ,\pkt_size_reg_n_0_[6] ,\pkt_size_reg_n_0_[5] }));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \pkt_size0_inferred__0/i__carry__1 
       (.CI(\pkt_size0_inferred__0/i__carry__0_n_0 ),
        .CO(\NLW_pkt_size0_inferred__0/i__carry__1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_pkt_size0_inferred__0/i__carry__1_O_UNCONNECTED [3],data0[11:9]}),
        .S({1'b0,\pkt_size_reg_n_0_[11] ,\pkt_size_reg_n_0_[10] ,\pkt_size_reg_n_0_[9] }));
  LUT2 #(
    .INIT(4'h1)) 
    \pkt_size[0]_i_1 
       (.I0(\pkt_size_reg_n_0_[0] ),
        .I1(\pkt_size[11]_i_3_n_0 ),
        .O(pkt_size[0]));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \pkt_size[10]_i_1 
       (.I0(data0[10]),
        .I1(\pkt_size[11]_i_3_n_0 ),
        .O(pkt_size[10]));
  LUT4 #(
    .INIT(16'h0040)) 
    \pkt_size[11]_i_1 
       (.I0(Q),
        .I1(\wr_addr_reg[5] ),
        .I2(byte_count_eq_1),
        .I3(\FSM_sequential_gen_state[0]_i_3_n_0 ),
        .O(pkt_size0));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \pkt_size[11]_i_2 
       (.I0(data0[11]),
        .I1(\pkt_size[11]_i_3_n_0 ),
        .O(pkt_size[11]));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    \pkt_size[11]_i_3 
       (.I0(\pkt_size_reg_n_0_[9] ),
        .I1(\pkt_size_reg_n_0_[7] ),
        .I2(\pkt_size_reg_n_0_[2] ),
        .I3(\pkt_size_reg_n_0_[3] ),
        .I4(\pkt_size[11]_i_4_n_0 ),
        .I5(\pkt_size[11]_i_5_n_0 ),
        .O(\pkt_size[11]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFF7F)) 
    \pkt_size[11]_i_4 
       (.I0(\pkt_size_reg_n_0_[6] ),
        .I1(\pkt_size_reg_n_0_[1] ),
        .I2(\pkt_size_reg_n_0_[8] ),
        .I3(\pkt_size_reg_n_0_[4] ),
        .O(\pkt_size[11]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hFFEF)) 
    \pkt_size[11]_i_5 
       (.I0(\pkt_size_reg_n_0_[11] ),
        .I1(\pkt_size_reg_n_0_[0] ),
        .I2(\pkt_size_reg_n_0_[5] ),
        .I3(\pkt_size_reg_n_0_[10] ),
        .O(\pkt_size[11]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \pkt_size[1]_i_1 
       (.I0(data0[1]),
        .I1(\pkt_size[11]_i_3_n_0 ),
        .O(pkt_size[1]));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \pkt_size[2]_i_1 
       (.I0(data0[2]),
        .I1(\pkt_size[11]_i_3_n_0 ),
        .O(pkt_size[2]));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \pkt_size[3]_i_1 
       (.I0(data0[3]),
        .I1(\pkt_size[11]_i_3_n_0 ),
        .O(pkt_size[3]));
  LUT2 #(
    .INIT(4'h2)) 
    \pkt_size[4]_i_1 
       (.I0(data0[4]),
        .I1(\pkt_size[11]_i_3_n_0 ),
        .O(pkt_size[4]));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \pkt_size[5]_i_1 
       (.I0(data0[5]),
        .I1(\pkt_size[11]_i_3_n_0 ),
        .O(pkt_size[5]));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \pkt_size[6]_i_1 
       (.I0(data0[6]),
        .I1(\pkt_size[11]_i_3_n_0 ),
        .O(pkt_size[6]));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \pkt_size[7]_i_1 
       (.I0(data0[7]),
        .I1(\pkt_size[11]_i_3_n_0 ),
        .O(pkt_size[7]));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \pkt_size[8]_i_1 
       (.I0(data0[8]),
        .I1(\pkt_size[11]_i_3_n_0 ),
        .O(pkt_size[8]));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \pkt_size[9]_i_1 
       (.I0(data0[9]),
        .I1(\pkt_size[11]_i_3_n_0 ),
        .O(pkt_size[9]));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_size_reg[0] 
       (.C(CLK),
        .CE(pkt_size0),
        .D(pkt_size[0]),
        .Q(\pkt_size_reg_n_0_[0] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_size_reg[10] 
       (.C(CLK),
        .CE(pkt_size0),
        .D(pkt_size[10]),
        .Q(\pkt_size_reg_n_0_[10] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_size_reg[11] 
       (.C(CLK),
        .CE(pkt_size0),
        .D(pkt_size[11]),
        .Q(\pkt_size_reg_n_0_[11] ),
        .R(SR));
  FDSE #(
    .INIT(1'b1)) 
    \pkt_size_reg[1] 
       (.C(CLK),
        .CE(pkt_size0),
        .D(pkt_size[1]),
        .Q(\pkt_size_reg_n_0_[1] ),
        .S(SR));
  FDSE #(
    .INIT(1'b1)) 
    \pkt_size_reg[2] 
       (.C(CLK),
        .CE(pkt_size0),
        .D(pkt_size[2]),
        .Q(\pkt_size_reg_n_0_[2] ),
        .S(SR));
  FDSE #(
    .INIT(1'b1)) 
    \pkt_size_reg[3] 
       (.C(CLK),
        .CE(pkt_size0),
        .D(pkt_size[3]),
        .Q(\pkt_size_reg_n_0_[3] ),
        .S(SR));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_size_reg[4] 
       (.C(CLK),
        .CE(pkt_size0),
        .D(pkt_size[4]),
        .Q(\pkt_size_reg_n_0_[4] ),
        .R(SR));
  FDSE #(
    .INIT(1'b1)) 
    \pkt_size_reg[5] 
       (.C(CLK),
        .CE(pkt_size0),
        .D(pkt_size[5]),
        .Q(\pkt_size_reg_n_0_[5] ),
        .S(SR));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_size_reg[6] 
       (.C(CLK),
        .CE(pkt_size0),
        .D(pkt_size[6]),
        .Q(\pkt_size_reg_n_0_[6] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_size_reg[7] 
       (.C(CLK),
        .CE(pkt_size0),
        .D(pkt_size[7]),
        .Q(\pkt_size_reg_n_0_[7] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_size_reg[8] 
       (.C(CLK),
        .CE(pkt_size0),
        .D(pkt_size[8]),
        .Q(\pkt_size_reg_n_0_[8] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_size_reg[9] 
       (.C(CLK),
        .CE(pkt_size0),
        .D(pkt_size[9]),
        .Q(\pkt_size_reg_n_0_[9] ),
        .R(SR));
  LUT3 #(
    .INIT(8'hB8)) 
    \ram_loop[0].RAM64X1D_inst_i_1 
       (.I0(\tdata_reg_n_0_[0] ),
        .I1(gen_tx_data_IBUF),
        .I2(\ram_loop[7].RAM64X1D_inst [0]),
        .O(mux_tdata[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    \ram_loop[1].RAM64X1D_inst_i_1 
       (.I0(\tdata_reg_n_0_[1] ),
        .I1(gen_tx_data_IBUF),
        .I2(\ram_loop[7].RAM64X1D_inst [1]),
        .O(mux_tdata[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    \ram_loop[2].RAM64X1D_inst_i_1 
       (.I0(\tdata_reg_n_0_[2] ),
        .I1(gen_tx_data_IBUF),
        .I2(\ram_loop[7].RAM64X1D_inst [2]),
        .O(mux_tdata[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    \ram_loop[3].RAM64X1D_inst_i_1 
       (.I0(\tdata_reg_n_0_[3] ),
        .I1(gen_tx_data_IBUF),
        .I2(\ram_loop[7].RAM64X1D_inst [3]),
        .O(mux_tdata[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    \ram_loop[4].RAM64X1D_inst_i_1 
       (.I0(\tdata_reg_n_0_[4] ),
        .I1(gen_tx_data_IBUF),
        .I2(\ram_loop[7].RAM64X1D_inst [4]),
        .O(mux_tdata[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    \ram_loop[5].RAM64X1D_inst_i_1 
       (.I0(\tdata_reg_n_0_[5] ),
        .I1(gen_tx_data_IBUF),
        .I2(\ram_loop[7].RAM64X1D_inst [5]),
        .O(mux_tdata[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    \ram_loop[6].RAM64X1D_inst_i_1 
       (.I0(\tdata_reg_n_0_[6] ),
        .I1(gen_tx_data_IBUF),
        .I2(\ram_loop[7].RAM64X1D_inst [6]),
        .O(mux_tdata[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    \ram_loop[7].RAM64X1D_inst_i_1 
       (.I0(\tdata_reg_n_0_[7] ),
        .I1(gen_tx_data_IBUF),
        .I2(\ram_loop[7].RAM64X1D_inst [7]),
        .O(mux_tdata[7]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \tdata[0]_i_1 
       (.I0(p_8_out),
        .I1(\tdata[7]_i_3_n_0 ),
        .I2(\tdata[0]_i_2_n_0 ),
        .I3(\tdata[7]_i_4_n_0 ),
        .I4(byte_count_reg[0]),
        .O(\tdata[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \tdata[0]_i_2 
       (.I0(\pkt_size_reg_n_0_[8] ),
        .I1(p_0_in_0),
        .I2(\pkt_size_reg_n_0_[0] ),
        .O(\tdata[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \tdata[1]_i_1 
       (.I0(p_6_out),
        .I1(\tdata[7]_i_3_n_0 ),
        .I2(\tdata[1]_i_2_n_0 ),
        .I3(\tdata[7]_i_4_n_0 ),
        .I4(byte_count_reg[1]),
        .O(\tdata[1]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \tdata[1]_i_2 
       (.I0(\pkt_size_reg_n_0_[9] ),
        .I1(p_0_in_0),
        .I2(\pkt_size_reg_n_0_[1] ),
        .O(\tdata[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \tdata[2]_i_1 
       (.I0(p_5_out),
        .I1(\tdata[7]_i_3_n_0 ),
        .I2(\tdata[2]_i_2_n_0 ),
        .I3(\tdata[7]_i_4_n_0 ),
        .I4(byte_count_reg[2]),
        .O(\tdata[2]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \tdata[2]_i_2 
       (.I0(\pkt_size_reg_n_0_[10] ),
        .I1(p_0_in_0),
        .I2(\pkt_size_reg_n_0_[2] ),
        .O(\tdata[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h88B8BBBB88B88888)) 
    \tdata[3]_i_1 
       (.I0(p_4_out),
        .I1(\tdata[7]_i_3_n_0 ),
        .I2(\pkt_size_reg_n_0_[3] ),
        .I3(p_0_in_0),
        .I4(\tdata[7]_i_4_n_0 ),
        .I5(byte_count_reg[3]),
        .O(\tdata[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h88B8BBBB88B88888)) 
    \tdata[4]_i_1 
       (.I0(p_3_out),
        .I1(\tdata[7]_i_3_n_0 ),
        .I2(\pkt_size_reg_n_0_[4] ),
        .I3(p_0_in_0),
        .I4(\tdata[7]_i_4_n_0 ),
        .I5(byte_count_reg[4]),
        .O(\tdata[4]_i_1_n_0 ));
  (* OPT_MODIFIED = "PROPCONST" *) 
  LUT5 #(
    .INIT(32'h04550400)) 
    \tdata[5]_i_1 
       (.I0(\tdata[7]_i_3_n_0 ),
        .I1(\pkt_size_reg_n_0_[5] ),
        .I2(p_0_in_0),
        .I3(\tdata[7]_i_4_n_0 ),
        .I4(byte_count_reg[5]),
        .O(\tdata[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h88B8BBBB88B88888)) 
    \tdata[6]_i_1 
       (.I0(p_1_out),
        .I1(\tdata[7]_i_3_n_0 ),
        .I2(\pkt_size_reg_n_0_[6] ),
        .I3(p_0_in_0),
        .I4(\tdata[7]_i_4_n_0 ),
        .I5(byte_count_reg[6]),
        .O(\tdata[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hCCCCCDCC)) 
    \tdata[7]_i_1 
       (.I0(pat_gen_tvalid),
        .I1(\wr_addr_reg[5] ),
        .I2(gen_state[1]),
        .I3(gen_state[2]),
        .I4(Q),
        .O(\tdata[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h88B8BBBB88B88888)) 
    \tdata[7]_i_2 
       (.I0(p_0_out),
        .I1(\tdata[7]_i_3_n_0 ),
        .I2(\pkt_size_reg_n_0_[7] ),
        .I3(p_0_in_0),
        .I4(\tdata[7]_i_4_n_0 ),
        .I5(byte_count_reg[7]),
        .O(\tdata[7]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h04000404)) 
    \tdata[7]_i_3 
       (.I0(Q),
        .I1(gen_state[2]),
        .I2(gen_state[1]),
        .I3(\wr_addr_reg[5] ),
        .I4(pat_gen_tvalid),
        .O(\tdata[7]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h0800)) 
    \tdata[7]_i_4 
       (.I0(Q),
        .I1(\wr_addr_reg[5] ),
        .I2(gen_state[2]),
        .I3(gen_state[1]),
        .O(\tdata[7]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \tdata_reg[0] 
       (.C(CLK),
        .CE(\tdata[7]_i_1_n_0 ),
        .D(\tdata[0]_i_1_n_0 ),
        .Q(\tdata_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tdata_reg[1] 
       (.C(CLK),
        .CE(\tdata[7]_i_1_n_0 ),
        .D(\tdata[1]_i_1_n_0 ),
        .Q(\tdata_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tdata_reg[2] 
       (.C(CLK),
        .CE(\tdata[7]_i_1_n_0 ),
        .D(\tdata[2]_i_1_n_0 ),
        .Q(\tdata_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tdata_reg[3] 
       (.C(CLK),
        .CE(\tdata[7]_i_1_n_0 ),
        .D(\tdata[3]_i_1_n_0 ),
        .Q(\tdata_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tdata_reg[4] 
       (.C(CLK),
        .CE(\tdata[7]_i_1_n_0 ),
        .D(\tdata[4]_i_1_n_0 ),
        .Q(\tdata_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tdata_reg[5] 
       (.C(CLK),
        .CE(\tdata[7]_i_1_n_0 ),
        .D(\tdata[5]_i_1_n_0 ),
        .Q(\tdata_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tdata_reg[6] 
       (.C(CLK),
        .CE(\tdata[7]_i_1_n_0 ),
        .D(\tdata[6]_i_1_n_0 ),
        .Q(\tdata_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tdata_reg[7] 
       (.C(CLK),
        .CE(\tdata[7]_i_1_n_0 ),
        .D(\tdata[7]_i_2_n_0 ),
        .Q(\tdata_reg_n_0_[7] ),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    tlast_i_1
       (.I0(byte_count_eq_1),
        .I1(\wr_addr_reg[5] ),
        .I2(pat_gen_tlast),
        .O(tlast_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    tlast_reg
       (.C(CLK),
        .CE(1'b1),
        .D(tlast_i_1_n_0),
        .Q(pat_gen_tlast),
        .R(SR));
  LUT4 #(
    .INIT(16'hFDFC)) 
    tvalid_int_i_1
       (.I0(\wr_addr_reg[5] ),
        .I1(gen_state[1]),
        .I2(gen_state[2]),
        .I3(pat_gen_tvalid),
        .O(tvalid_int_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    tvalid_int_reg
       (.C(CLK),
        .CE(1'b1),
        .D(tvalid_int_i_1_n_0),
        .Q(pat_gen_tvalid),
        .R(SR));
endmodule

module tri_mode_ethernet_mac_0_axi_pipe
   (rx_axis_tlast_int,
    rx_axis_tdata_int,
    rx_axis_fifo_tready_int_reg_0,
    rx_axis_fifo_tready_int_reg_1,
    \wr_addr_reg[0]_0 ,
    rx_axis_tvalid_int,
    rx_axis_fifo_tready_int_reg_2,
    CLK,
    mux_tlast,
    \wr_addr_reg[5]_0 ,
    mux_tdata,
    gen_tx_data_IBUF,
    rx_fifo_resetn,
    Q,
    SR,
    E);
  output rx_axis_tlast_int;
  output [7:0]rx_axis_tdata_int;
  output rx_axis_fifo_tready_int_reg_0;
  output rx_axis_fifo_tready_int_reg_1;
  output \wr_addr_reg[0]_0 ;
  output rx_axis_tvalid_int;
  output rx_axis_fifo_tready_int_reg_2;
  input CLK;
  input mux_tlast;
  input \wr_addr_reg[5]_0 ;
  input [7:0]mux_tdata;
  input gen_tx_data_IBUF;
  input rx_fifo_resetn;
  input [0:0]Q;
  input [0:0]SR;
  input [0:0]E;

  wire CLK;
  wire [0:0]E;
  wire [0:0]Q;
  wire [0:0]SR;
  wire gen_tx_data_IBUF;
  wire [7:0]mux_tdata;
  wire mux_tlast;
  wire [1:0]p_0_in;
  wire [5:0]p_0_in__1;
  wire [5:0]p_0_in__2;
  wire p_10_in;
  wire p_11_in;
  wire p_2_in;
  wire p_3_in;
  wire p_4_in;
  wire p_5_in;
  wire p_8_in;
  wire p_9_in;
  wire rx_axis_fifo_tready_int_i_1_n_0;
  wire rx_axis_fifo_tready_int_reg_0;
  wire rx_axis_fifo_tready_int_reg_1;
  wire rx_axis_fifo_tready_int_reg_2;
  wire rx_axis_fifo_tvalid_reg_i_2_n_0;
  wire rx_axis_fifo_tvalid_reg_i_3_n_0;
  wire [7:0]rx_axis_tdata_int;
  wire rx_axis_tlast_int;
  wire rx_axis_tvalid_int;
  wire rx_fifo_resetn;
  wire \wr_addr_reg[0]_0 ;
  wire \wr_addr_reg[5]_0 ;
  wire [1:0]wr_block;
  wire NLW_RAM64X1D_inst_last_SPO_UNCONNECTED;
  wire \NLW_ram_loop[0].RAM64X1D_inst_SPO_UNCONNECTED ;
  wire \NLW_ram_loop[1].RAM64X1D_inst_SPO_UNCONNECTED ;
  wire \NLW_ram_loop[2].RAM64X1D_inst_SPO_UNCONNECTED ;
  wire \NLW_ram_loop[3].RAM64X1D_inst_SPO_UNCONNECTED ;
  wire \NLW_ram_loop[4].RAM64X1D_inst_SPO_UNCONNECTED ;
  wire \NLW_ram_loop[5].RAM64X1D_inst_SPO_UNCONNECTED ;
  wire \NLW_ram_loop[6].RAM64X1D_inst_SPO_UNCONNECTED ;
  wire \NLW_ram_loop[7].RAM64X1D_inst_SPO_UNCONNECTED ;

  LUT2 #(
    .INIT(4'h7)) 
    \FSM_sequential_gen_state[0]_i_6 
       (.I0(rx_axis_fifo_tready_int_reg_0),
        .I1(Q),
        .O(rx_axis_fifo_tready_int_reg_2));
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_sequential_wr_state[1]_i_3__0 
       (.I0(rx_axis_tlast_int),
        .I1(rx_axis_tvalid_int),
        .O(\wr_addr_reg[0]_0 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  RAM64X1D #(
    .INIT(64'h0000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
    RAM64X1D_inst_last
       (.A0(p_11_in),
        .A1(p_10_in),
        .A2(p_9_in),
        .A3(p_8_in),
        .A4(wr_block[0]),
        .A5(wr_block[1]),
        .D(mux_tlast),
        .DPO(rx_axis_tlast_int),
        .DPRA0(p_5_in),
        .DPRA1(p_4_in),
        .DPRA2(p_3_in),
        .DPRA3(p_2_in),
        .DPRA4(p_0_in[0]),
        .DPRA5(p_0_in[1]),
        .SPO(NLW_RAM64X1D_inst_last_SPO_UNCONNECTED),
        .WCLK(CLK),
        .WE(\wr_addr_reg[5]_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    mem_reg_i_5
       (.I0(gen_tx_data_IBUF),
        .I1(rx_axis_fifo_tready_int_reg_0),
        .O(rx_axis_fifo_tready_int_reg_1));
  (* BOX_TYPE = "PRIMITIVE" *) 
  RAM64X1D #(
    .INIT(64'h0000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \ram_loop[0].RAM64X1D_inst 
       (.A0(p_11_in),
        .A1(p_10_in),
        .A2(p_9_in),
        .A3(p_8_in),
        .A4(wr_block[0]),
        .A5(wr_block[1]),
        .D(mux_tdata[0]),
        .DPO(rx_axis_tdata_int[0]),
        .DPRA0(p_5_in),
        .DPRA1(p_4_in),
        .DPRA2(p_3_in),
        .DPRA3(p_2_in),
        .DPRA4(p_0_in[0]),
        .DPRA5(p_0_in[1]),
        .SPO(\NLW_ram_loop[0].RAM64X1D_inst_SPO_UNCONNECTED ),
        .WCLK(CLK),
        .WE(\wr_addr_reg[5]_0 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  RAM64X1D #(
    .INIT(64'h0000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \ram_loop[1].RAM64X1D_inst 
       (.A0(p_11_in),
        .A1(p_10_in),
        .A2(p_9_in),
        .A3(p_8_in),
        .A4(wr_block[0]),
        .A5(wr_block[1]),
        .D(mux_tdata[1]),
        .DPO(rx_axis_tdata_int[1]),
        .DPRA0(p_5_in),
        .DPRA1(p_4_in),
        .DPRA2(p_3_in),
        .DPRA3(p_2_in),
        .DPRA4(p_0_in[0]),
        .DPRA5(p_0_in[1]),
        .SPO(\NLW_ram_loop[1].RAM64X1D_inst_SPO_UNCONNECTED ),
        .WCLK(CLK),
        .WE(\wr_addr_reg[5]_0 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  RAM64X1D #(
    .INIT(64'h0000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \ram_loop[2].RAM64X1D_inst 
       (.A0(p_11_in),
        .A1(p_10_in),
        .A2(p_9_in),
        .A3(p_8_in),
        .A4(wr_block[0]),
        .A5(wr_block[1]),
        .D(mux_tdata[2]),
        .DPO(rx_axis_tdata_int[2]),
        .DPRA0(p_5_in),
        .DPRA1(p_4_in),
        .DPRA2(p_3_in),
        .DPRA3(p_2_in),
        .DPRA4(p_0_in[0]),
        .DPRA5(p_0_in[1]),
        .SPO(\NLW_ram_loop[2].RAM64X1D_inst_SPO_UNCONNECTED ),
        .WCLK(CLK),
        .WE(\wr_addr_reg[5]_0 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  RAM64X1D #(
    .INIT(64'h0000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \ram_loop[3].RAM64X1D_inst 
       (.A0(p_11_in),
        .A1(p_10_in),
        .A2(p_9_in),
        .A3(p_8_in),
        .A4(wr_block[0]),
        .A5(wr_block[1]),
        .D(mux_tdata[3]),
        .DPO(rx_axis_tdata_int[3]),
        .DPRA0(p_5_in),
        .DPRA1(p_4_in),
        .DPRA2(p_3_in),
        .DPRA3(p_2_in),
        .DPRA4(p_0_in[0]),
        .DPRA5(p_0_in[1]),
        .SPO(\NLW_ram_loop[3].RAM64X1D_inst_SPO_UNCONNECTED ),
        .WCLK(CLK),
        .WE(\wr_addr_reg[5]_0 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  RAM64X1D #(
    .INIT(64'h0000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \ram_loop[4].RAM64X1D_inst 
       (.A0(p_11_in),
        .A1(p_10_in),
        .A2(p_9_in),
        .A3(p_8_in),
        .A4(wr_block[0]),
        .A5(wr_block[1]),
        .D(mux_tdata[4]),
        .DPO(rx_axis_tdata_int[4]),
        .DPRA0(p_5_in),
        .DPRA1(p_4_in),
        .DPRA2(p_3_in),
        .DPRA3(p_2_in),
        .DPRA4(p_0_in[0]),
        .DPRA5(p_0_in[1]),
        .SPO(\NLW_ram_loop[4].RAM64X1D_inst_SPO_UNCONNECTED ),
        .WCLK(CLK),
        .WE(\wr_addr_reg[5]_0 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  RAM64X1D #(
    .INIT(64'h0000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \ram_loop[5].RAM64X1D_inst 
       (.A0(p_11_in),
        .A1(p_10_in),
        .A2(p_9_in),
        .A3(p_8_in),
        .A4(wr_block[0]),
        .A5(wr_block[1]),
        .D(mux_tdata[5]),
        .DPO(rx_axis_tdata_int[5]),
        .DPRA0(p_5_in),
        .DPRA1(p_4_in),
        .DPRA2(p_3_in),
        .DPRA3(p_2_in),
        .DPRA4(p_0_in[0]),
        .DPRA5(p_0_in[1]),
        .SPO(\NLW_ram_loop[5].RAM64X1D_inst_SPO_UNCONNECTED ),
        .WCLK(CLK),
        .WE(\wr_addr_reg[5]_0 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  RAM64X1D #(
    .INIT(64'h0000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \ram_loop[6].RAM64X1D_inst 
       (.A0(p_11_in),
        .A1(p_10_in),
        .A2(p_9_in),
        .A3(p_8_in),
        .A4(wr_block[0]),
        .A5(wr_block[1]),
        .D(mux_tdata[6]),
        .DPO(rx_axis_tdata_int[6]),
        .DPRA0(p_5_in),
        .DPRA1(p_4_in),
        .DPRA2(p_3_in),
        .DPRA3(p_2_in),
        .DPRA4(p_0_in[0]),
        .DPRA5(p_0_in[1]),
        .SPO(\NLW_ram_loop[6].RAM64X1D_inst_SPO_UNCONNECTED ),
        .WCLK(CLK),
        .WE(\wr_addr_reg[5]_0 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  RAM64X1D #(
    .INIT(64'h0000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \ram_loop[7].RAM64X1D_inst 
       (.A0(p_11_in),
        .A1(p_10_in),
        .A2(p_9_in),
        .A3(p_8_in),
        .A4(wr_block[0]),
        .A5(wr_block[1]),
        .D(mux_tdata[7]),
        .DPO(rx_axis_tdata_int[7]),
        .DPRA0(p_5_in),
        .DPRA1(p_4_in),
        .DPRA2(p_3_in),
        .DPRA3(p_2_in),
        .DPRA4(p_0_in[0]),
        .DPRA5(p_0_in[1]),
        .SPO(\NLW_ram_loop[7].RAM64X1D_inst_SPO_UNCONNECTED ),
        .WCLK(CLK),
        .WE(\wr_addr_reg[5]_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \rd_addr[0]_i_1__0 
       (.I0(p_5_in),
        .O(p_0_in__2[0]));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_addr[1]_i_1 
       (.I0(p_5_in),
        .I1(p_4_in),
        .O(p_0_in__2[1]));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \rd_addr[2]_i_1 
       (.I0(p_3_in),
        .I1(p_4_in),
        .I2(p_5_in),
        .O(p_0_in__2[2]));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \rd_addr[3]_i_1 
       (.I0(p_2_in),
        .I1(p_5_in),
        .I2(p_4_in),
        .I3(p_3_in),
        .O(p_0_in__2[3]));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \rd_addr[4]_i_1 
       (.I0(p_0_in[0]),
        .I1(p_3_in),
        .I2(p_4_in),
        .I3(p_5_in),
        .I4(p_2_in),
        .O(p_0_in__2[4]));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \rd_addr[5]_i_2 
       (.I0(p_0_in[1]),
        .I1(p_2_in),
        .I2(p_5_in),
        .I3(p_4_in),
        .I4(p_3_in),
        .I5(p_0_in[0]),
        .O(p_0_in__2[5]));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_reg[0] 
       (.C(CLK),
        .CE(E),
        .D(p_0_in__2[0]),
        .Q(p_5_in),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_reg[1] 
       (.C(CLK),
        .CE(E),
        .D(p_0_in__2[1]),
        .Q(p_4_in),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_reg[2] 
       (.C(CLK),
        .CE(E),
        .D(p_0_in__2[2]),
        .Q(p_3_in),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_reg[3] 
       (.C(CLK),
        .CE(E),
        .D(p_0_in__2[3]),
        .Q(p_2_in),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_reg[4] 
       (.C(CLK),
        .CE(E),
        .D(p_0_in__2[4]),
        .Q(p_0_in[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_reg[5] 
       (.C(CLK),
        .CE(E),
        .D(p_0_in__2[5]),
        .Q(p_0_in[1]),
        .R(SR));
  LUT5 #(
    .INIT(32'hAA8228AA)) 
    rx_axis_fifo_tready_int_i_1
       (.I0(rx_fifo_resetn),
        .I1(wr_block[1]),
        .I2(p_0_in[1]),
        .I3(p_0_in[0]),
        .I4(wr_block[0]),
        .O(rx_axis_fifo_tready_int_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rx_axis_fifo_tready_int_reg
       (.C(CLK),
        .CE(1'b1),
        .D(rx_axis_fifo_tready_int_i_1_n_0),
        .Q(rx_axis_fifo_tready_int_reg_0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFFFF6FFFFF6)) 
    rx_axis_fifo_tvalid_reg_i_1
       (.I0(p_0_in[1]),
        .I1(wr_block[1]),
        .I2(rx_axis_fifo_tvalid_reg_i_2_n_0),
        .I3(p_8_in),
        .I4(p_2_in),
        .I5(rx_axis_fifo_tvalid_reg_i_3_n_0),
        .O(rx_axis_tvalid_int));
  LUT2 #(
    .INIT(4'h6)) 
    rx_axis_fifo_tvalid_reg_i_2
       (.I0(wr_block[0]),
        .I1(p_0_in[0]),
        .O(rx_axis_fifo_tvalid_reg_i_2_n_0));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    rx_axis_fifo_tvalid_reg_i_3
       (.I0(p_5_in),
        .I1(p_11_in),
        .I2(p_9_in),
        .I3(p_3_in),
        .I4(p_10_in),
        .I5(p_4_in),
        .O(rx_axis_fifo_tvalid_reg_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \wr_addr[0]_i_1__0 
       (.I0(p_11_in),
        .O(p_0_in__1[0]));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_addr[1]_i_1 
       (.I0(p_11_in),
        .I1(p_10_in),
        .O(p_0_in__1[1]));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \wr_addr[2]_i_1 
       (.I0(p_9_in),
        .I1(p_10_in),
        .I2(p_11_in),
        .O(p_0_in__1[2]));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \wr_addr[3]_i_1 
       (.I0(p_8_in),
        .I1(p_11_in),
        .I2(p_10_in),
        .I3(p_9_in),
        .O(p_0_in__1[3]));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \wr_addr[4]_i_1 
       (.I0(wr_block[0]),
        .I1(p_9_in),
        .I2(p_10_in),
        .I3(p_11_in),
        .I4(p_8_in),
        .O(p_0_in__1[4]));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \wr_addr[5]_i_1 
       (.I0(wr_block[1]),
        .I1(p_8_in),
        .I2(p_11_in),
        .I3(p_10_in),
        .I4(p_9_in),
        .I5(wr_block[0]),
        .O(p_0_in__1[5]));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_reg[0] 
       (.C(CLK),
        .CE(\wr_addr_reg[5]_0 ),
        .D(p_0_in__1[0]),
        .Q(p_11_in),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_reg[1] 
       (.C(CLK),
        .CE(\wr_addr_reg[5]_0 ),
        .D(p_0_in__1[1]),
        .Q(p_10_in),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_reg[2] 
       (.C(CLK),
        .CE(\wr_addr_reg[5]_0 ),
        .D(p_0_in__1[2]),
        .Q(p_9_in),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_reg[3] 
       (.C(CLK),
        .CE(\wr_addr_reg[5]_0 ),
        .D(p_0_in__1[3]),
        .Q(p_8_in),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_reg[4] 
       (.C(CLK),
        .CE(\wr_addr_reg[5]_0 ),
        .D(p_0_in__1[4]),
        .Q(wr_block[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_reg[5] 
       (.C(CLK),
        .CE(\wr_addr_reg[5]_0 ),
        .D(p_0_in__1[5]),
        .Q(wr_block[1]),
        .R(SR));
endmodule

module tri_mode_ethernet_mac_0_basic_pat_gen
   (dob_8,
    mux_tready,
    tx_axis_fifo_tvalid,
    tx_axis_fifo_tlast,
    p_16_out,
    p_23_out,
    rx_axis_fifo_tready_int_reg,
    \rd_slot_reg[0] ,
    \tx_axis_fifo_tdata_reg[7] ,
    CLK,
    SR,
    tx_axis_fifo_tlast_int_reg,
    tx_axis_fifo_tvalid_reg,
    wr_eof_reg,
    gen_tx_data_IBUF,
    rx_axis_fifo_tlast,
    rx_fifo_resetn,
    Q,
    rx_axis_fifo_tvalid,
    E,
    SS);
  output dob_8;
  output mux_tready;
  output tx_axis_fifo_tvalid;
  output tx_axis_fifo_tlast;
  output p_16_out;
  output p_23_out;
  output rx_axis_fifo_tready_int_reg;
  output \rd_slot_reg[0] ;
  output [7:0]\tx_axis_fifo_tdata_reg[7] ;
  input CLK;
  input [0:0]SR;
  input tx_axis_fifo_tlast_int_reg;
  input tx_axis_fifo_tvalid_reg;
  input wr_eof_reg;
  input gen_tx_data_IBUF;
  input rx_axis_fifo_tlast;
  input rx_fifo_resetn;
  input [7:0]Q;
  input rx_axis_fifo_tvalid;
  input [0:0]E;
  input [0:0]SS;

  wire CLK;
  wire [0:0]E;
  wire [7:0]Q;
  wire [0:0]SR;
  wire [0:0]SS;
  wire axi_pat_gen_inst_n_10;
  wire axi_pipe_inst_n_11;
  wire axi_pipe_inst_n_13;
  wire dob_8;
  wire [0:0]gen_state;
  wire gen_tx_data_IBUF;
  wire [7:0]mux_tdata;
  wire mux_tlast;
  wire mux_tready;
  wire p_16_out;
  wire p_23_out;
  wire \rd_slot_reg[0] ;
  wire rx_axis_fifo_tlast;
  wire rx_axis_fifo_tready_int_reg;
  wire rx_axis_fifo_tvalid;
  wire [7:0]rx_axis_tdata_int;
  wire rx_axis_tlast_int;
  wire rx_axis_tvalid_int;
  wire rx_fifo_resetn;
  wire [7:0]\tx_axis_fifo_tdata_reg[7] ;
  wire tx_axis_fifo_tlast;
  wire tx_axis_fifo_tlast_int_reg;
  wire tx_axis_fifo_tvalid;
  wire tx_axis_fifo_tvalid_reg;
  wire wr_eof_reg;
  wire wr_slot1;

  tri_mode_ethernet_mac_0_address_swap address_swap_inst
       (.CLK(CLK),
        .E(E),
        .\FSM_sequential_wr_state_reg[1]_0 (axi_pipe_inst_n_11),
        .SR(SR),
        .p_16_out(p_16_out),
        .p_23_out(p_23_out),
        .\rd_slot_reg[0]_0 (\rd_slot_reg[0] ),
        .rx_axis_tdata_int(rx_axis_tdata_int),
        .rx_axis_tlast_int(rx_axis_tlast_int),
        .rx_axis_tvalid_int(rx_axis_tvalid_int),
        .rx_fifo_resetn(rx_fifo_resetn),
        .\tx_axis_fifo_tdata_reg[7]_0 (\tx_axis_fifo_tdata_reg[7] ),
        .tx_axis_fifo_tlast(tx_axis_fifo_tlast),
        .tx_axis_fifo_tlast_int_reg_0(tx_axis_fifo_tlast_int_reg),
        .tx_axis_fifo_tvalid_reg_0(tx_axis_fifo_tvalid),
        .tx_axis_fifo_tvalid_reg_1(tx_axis_fifo_tvalid_reg),
        .\wr_addr_reg[0]_0 (dob_8),
        .wr_eof_reg(wr_eof_reg),
        .wr_slot1(wr_slot1));
  tri_mode_ethernet_mac_0_axi_pat_gen axi_pat_gen_inst
       (.CLK(CLK),
        .Q(gen_state),
        .SR(SR),
        .SS(SS),
        .gen_tx_data_IBUF(gen_tx_data_IBUF),
        .mux_tdata(mux_tdata),
        .mux_tlast(mux_tlast),
        .\pkt_size_reg[0]_0 (axi_pipe_inst_n_13),
        .\ram_loop[7].RAM64X1D_inst (Q),
        .rx_axis_fifo_tlast(rx_axis_fifo_tlast),
        .rx_axis_fifo_tvalid(rx_axis_fifo_tvalid),
        .rx_axis_fifo_tvalid_reg(axi_pat_gen_inst_n_10),
        .rx_fifo_resetn(rx_fifo_resetn),
        .\wr_addr_reg[5] (mux_tready));
  tri_mode_ethernet_mac_0_axi_pipe axi_pipe_inst
       (.CLK(CLK),
        .E(wr_slot1),
        .Q(gen_state),
        .SR(SR),
        .gen_tx_data_IBUF(gen_tx_data_IBUF),
        .mux_tdata(mux_tdata),
        .mux_tlast(mux_tlast),
        .rx_axis_fifo_tready_int_reg_0(mux_tready),
        .rx_axis_fifo_tready_int_reg_1(rx_axis_fifo_tready_int_reg),
        .rx_axis_fifo_tready_int_reg_2(axi_pipe_inst_n_13),
        .rx_axis_tdata_int(rx_axis_tdata_int),
        .rx_axis_tlast_int(rx_axis_tlast_int),
        .rx_axis_tvalid_int(rx_axis_tvalid_int),
        .rx_fifo_resetn(rx_fifo_resetn),
        .\wr_addr_reg[0]_0 (axi_pipe_inst_n_11),
        .\wr_addr_reg[5]_0 (axi_pat_gen_inst_n_10));
endmodule

module tri_mode_ethernet_mac_0_bram_tdp
   (rd_eof_reg0,
    b_dout,
    rd_en,
    wr_accept_bram,
    Q,
    rd_eof,
    mem_reg_0,
    tx_axis_mac_tready,
    userclk2_out,
    tx_mac_aclk,
    rx_fifo_resetn,
    SR,
    wr_addr_reg,
    b_addr,
    a_din);
  output rd_eof_reg0;
  output [8:0]b_dout;
  output rd_en;
  input wr_accept_bram;
  input [1:0]Q;
  input rd_eof;
  input [3:0]mem_reg_0;
  input tx_axis_mac_tready;
  input userclk2_out;
  input tx_mac_aclk;
  input rx_fifo_resetn;
  input [0:0]SR;
  input [11:0]wr_addr_reg;
  input [11:0]b_addr;
  input [8:0]a_din;

  wire [1:0]Q;
  wire [0:0]SR;
  wire [8:0]a_din;
  wire [11:0]b_addr;
  wire [8:0]b_dout;
  wire [3:0]mem_reg_0;
  wire mem_reg_ENARDEN_cooolgate_en_sig_2;
  wire mem_reg_i_1_n_0;
  wire rd_en;
  wire rd_eof;
  wire rd_eof_reg0;
  wire rx_fifo_resetn;
  wire tx_axis_mac_tready;
  wire tx_mac_aclk;
  wire userclk2_out;
  wire wr_accept_bram;
  wire [11:0]wr_addr_reg;
  wire wr_en;
  wire NLW_mem_reg_CASCADEOUTA_UNCONNECTED;
  wire NLW_mem_reg_CASCADEOUTB_UNCONNECTED;
  wire NLW_mem_reg_DBITERR_UNCONNECTED;
  wire NLW_mem_reg_INJECTDBITERR_UNCONNECTED;
  wire NLW_mem_reg_INJECTSBITERR_UNCONNECTED;
  wire NLW_mem_reg_SBITERR_UNCONNECTED;
  wire [31:0]NLW_mem_reg_DOADO_UNCONNECTED;
  wire [31:8]NLW_mem_reg_DOBDO_UNCONNECTED;
  wire [3:0]NLW_mem_reg_DOPADOP_UNCONNECTED;
  wire [3:1]NLW_mem_reg_DOPBDOP_UNCONNECTED;
  wire [7:0]NLW_mem_reg_ECCPARITY_UNCONNECTED;
  wire [8:0]NLW_mem_reg_RDADDRECC_UNCONNECTED;

  (* IS_CLOCK_GATED *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p1_d8" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p1_d8" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* OPT_MODIFIED = "RETARGET" *) 
  (* POWER_OPTED_CE = "ENARDEN=AUG" *) 
  (* RTL_RAM_BITS = "36864" *) 
  (* RTL_RAM_NAME = "trimac_fifo_block/user_side_FIFO/tx_fifo_i/tx_ramgen_i/mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "4095" *) 
  (* bram_slice_begin = "0" *) 
  (* bram_slice_end = "8" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "4095" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "8" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(1),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(9),
    .READ_WIDTH_B(9),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(9),
    .WRITE_WIDTH_B(9)) 
    mem_reg
       (.ADDRARDADDR({1'b1,wr_addr_reg,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,b_addr,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b1),
        .CASCADEINB(1'b1),
        .CASCADEOUTA(NLW_mem_reg_CASCADEOUTA_UNCONNECTED),
        .CASCADEOUTB(NLW_mem_reg_CASCADEOUTB_UNCONNECTED),
        .CLKARDCLK(userclk2_out),
        .CLKBWRCLK(tx_mac_aclk),
        .DBITERR(NLW_mem_reg_DBITERR_UNCONNECTED),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,a_din[7:0]}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DIPADIP({1'b0,1'b0,1'b0,a_din[8]}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b1}),
        .DOADO(NLW_mem_reg_DOADO_UNCONNECTED[31:0]),
        .DOBDO({NLW_mem_reg_DOBDO_UNCONNECTED[31:8],b_dout[7:0]}),
        .DOPADOP(NLW_mem_reg_DOPADOP_UNCONNECTED[3:0]),
        .DOPBDOP({NLW_mem_reg_DOPBDOP_UNCONNECTED[3:1],b_dout[8]}),
        .ECCPARITY(NLW_mem_reg_ECCPARITY_UNCONNECTED[7:0]),
        .ENARDEN(mem_reg_ENARDEN_cooolgate_en_sig_2),
        .ENBWREN(mem_reg_i_1_n_0),
        .INJECTDBITERR(NLW_mem_reg_INJECTDBITERR_UNCONNECTED),
        .INJECTSBITERR(NLW_mem_reg_INJECTSBITERR_UNCONNECTED),
        .RDADDRECC(NLW_mem_reg_RDADDRECC_UNCONNECTED[8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(rd_en),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(SR),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(NLW_mem_reg_SBITERR_UNCONNECTED),
        .WEA({1'b0,1'b0,1'b0,wr_en}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
  (* OPT_MODIFIED = "POST_PROCESS_NETLIST" *) 
  LUT4 #(
    .INIT(16'hA800)) 
    mem_reg_ENARDEN_cooolgate_en_gate_3_LOPT_REMAP
       (.I0(wr_accept_bram),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(rx_fifo_resetn),
        .O(mem_reg_ENARDEN_cooolgate_en_sig_2));
  LUT6 #(
    .INIT(64'hFFFEFFFEFFFEABFE)) 
    mem_reg_i_1
       (.I0(SR),
        .I1(mem_reg_0[1]),
        .I2(mem_reg_0[0]),
        .I3(mem_reg_0[2]),
        .I4(tx_axis_mac_tready),
        .I5(mem_reg_0[3]),
        .O(mem_reg_i_1_n_0));
  LUT5 #(
    .INIT(32'hEFEFEFF0)) 
    mem_reg_i_2
       (.I0(mem_reg_0[3]),
        .I1(tx_axis_mac_tready),
        .I2(mem_reg_0[2]),
        .I3(mem_reg_0[0]),
        .I4(mem_reg_0[1]),
        .O(rd_en));
  LUT3 #(
    .INIT(8'hA8)) 
    mem_reg_i_3
       (.I0(wr_accept_bram),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(wr_en));
  LUT2 #(
    .INIT(4'hE)) 
    rd_eof_reg_i_1
       (.I0(rd_eof),
        .I1(b_dout[8]),
        .O(rd_eof_reg0));
endmodule

(* ORIG_REF_NAME = "tri_mode_ethernet_mac_0_bram_tdp" *) 
module tri_mode_ethernet_mac_0_bram_tdp_0
   (rd_addr_reload0,
    \FSM_onehot_rd_state_reg[5] ,
    D,
    rd_en,
    b_dout,
    rd_addr_reload_reg,
    rd_addr_reload_reg_0,
    Q,
    rd_addr_reload_reg_1,
    mem_reg_0,
    mux_tready,
    gen_tx_data_IBUF,
    rx_fifo_resetn,
    mem_reg_1,
    mem_reg_2,
    rx_mac_aclk,
    userclk2_out,
    mem_reg_3,
    a_addr,
    b_addr,
    a_din,
    reset_out);
  output rd_addr_reload0;
  output \FSM_onehot_rd_state_reg[5] ;
  output [1:0]D;
  output rd_en;
  output [7:0]b_dout;
  input rd_addr_reload_reg;
  input rd_addr_reload_reg_0;
  input [7:0]Q;
  input rd_addr_reload_reg_1;
  input mem_reg_0;
  input mux_tready;
  input gen_tx_data_IBUF;
  input rx_fifo_resetn;
  input [0:0]mem_reg_1;
  input mem_reg_2;
  input rx_mac_aclk;
  input userclk2_out;
  input [0:0]mem_reg_3;
  input [11:0]a_addr;
  input [11:0]b_addr;
  input [8:0]a_din;
  input reset_out;

  wire [1:0]D;
  wire \FSM_onehot_rd_state_reg[5] ;
  wire [7:0]Q;
  wire [11:0]a_addr;
  wire [8:0]a_din;
  wire [11:0]b_addr;
  wire [7:0]b_dout;
  wire gen_tx_data_IBUF;
  wire mem_reg_0;
  wire [0:0]mem_reg_1;
  wire mem_reg_2;
  wire mem_reg_ENARDEN_cooolgate_en_sig_1;
  wire mem_reg_i_2__0_n_0;
  wire mux_tready;
  wire rd_addr_reload0;
  wire rd_addr_reload_reg;
  wire rd_addr_reload_reg_0;
  wire rd_addr_reload_reg_1;
  wire rd_en;
  wire rd_eof;
  wire reset_out;
  wire rx_fifo_resetn;
  wire rx_mac_aclk;
  wire userclk2_out;
  wire wr_en;
  wire NLW_mem_reg_CASCADEOUTA_UNCONNECTED;
  wire NLW_mem_reg_CASCADEOUTB_UNCONNECTED;
  wire NLW_mem_reg_DBITERR_UNCONNECTED;
  wire NLW_mem_reg_INJECTDBITERR_UNCONNECTED;
  wire NLW_mem_reg_INJECTSBITERR_UNCONNECTED;
  wire NLW_mem_reg_SBITERR_UNCONNECTED;
  wire [31:0]NLW_mem_reg_DOADO_UNCONNECTED;
  wire [31:8]NLW_mem_reg_DOBDO_UNCONNECTED;
  wire [3:0]NLW_mem_reg_DOPADOP_UNCONNECTED;
  wire [3:1]NLW_mem_reg_DOPBDOP_UNCONNECTED;
  wire [7:0]NLW_mem_reg_ECCPARITY_UNCONNECTED;
  wire [8:0]NLW_mem_reg_RDADDRECC_UNCONNECTED;

  LUT6 #(
    .INIT(64'hFFFFFFFFF4F4F4CC)) 
    \FSM_onehot_rd_state[5]_i_1 
       (.I0(rd_eof),
        .I1(Q[5]),
        .I2(Q[7]),
        .I3(mux_tready),
        .I4(gen_tx_data_IBUF),
        .I5(Q[4]),
        .O(D[0]));
  LUT5 #(
    .INIT(32'hCCCA000A)) 
    \FSM_onehot_rd_state[6]_i_1 
       (.I0(Q[6]),
        .I1(rd_eof),
        .I2(mux_tready),
        .I3(gen_tx_data_IBUF),
        .I4(Q[5]),
        .O(D[1]));
  (* IS_CLOCK_GATED *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p1_d8" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p1_d8" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* OPT_MODIFIED = "RETARGET" *) 
  (* POWER_OPTED_CE = "ENARDEN=AUG" *) 
  (* RTL_RAM_BITS = "36864" *) 
  (* RTL_RAM_NAME = "trimac_fifo_block/user_side_FIFO/rx_fifo_i/rx_ramgen_i/mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "4095" *) 
  (* bram_slice_begin = "0" *) 
  (* bram_slice_end = "8" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "4095" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "8" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(1),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_ENARDEN_INVERTED(1'b1),
    .IS_RSTRAMB_INVERTED(1'b1),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(9),
    .READ_WIDTH_B(9),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(9),
    .WRITE_WIDTH_B(9)) 
    mem_reg
       (.ADDRARDADDR({1'b1,a_addr,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,b_addr,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b1),
        .CASCADEINB(1'b1),
        .CASCADEOUTA(NLW_mem_reg_CASCADEOUTA_UNCONNECTED),
        .CASCADEOUTB(NLW_mem_reg_CASCADEOUTB_UNCONNECTED),
        .CLKARDCLK(rx_mac_aclk),
        .CLKBWRCLK(userclk2_out),
        .DBITERR(NLW_mem_reg_DBITERR_UNCONNECTED),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,a_din[7:0]}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DIPADIP({1'b0,1'b0,1'b0,a_din[8]}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b1}),
        .DOADO(NLW_mem_reg_DOADO_UNCONNECTED[31:0]),
        .DOBDO({NLW_mem_reg_DOBDO_UNCONNECTED[31:8],b_dout}),
        .DOPADOP(NLW_mem_reg_DOPADOP_UNCONNECTED[3:0]),
        .DOPBDOP({NLW_mem_reg_DOPBDOP_UNCONNECTED[3:1],rd_eof}),
        .ECCPARITY(NLW_mem_reg_ECCPARITY_UNCONNECTED[7:0]),
        .ENARDEN(mem_reg_ENARDEN_cooolgate_en_sig_1),
        .ENBWREN(mem_reg_i_2__0_n_0),
        .INJECTDBITERR(NLW_mem_reg_INJECTDBITERR_UNCONNECTED),
        .INJECTSBITERR(NLW_mem_reg_INJECTSBITERR_UNCONNECTED),
        .RDADDRECC(NLW_mem_reg_RDADDRECC_UNCONNECTED[8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(rd_en),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(rx_fifo_resetn),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(NLW_mem_reg_SBITERR_UNCONNECTED),
        .WEA({1'b0,1'b0,1'b0,wr_en}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
  (* OPT_MODIFIED = "POST_PROCESS_NETLIST" *) 
  LUT3 #(
    .INIT(8'hF7)) 
    mem_reg_ENARDEN_cooolgate_en_gate_1_LOPT_REMAP
       (.I0(mem_reg_1),
        .I1(mem_reg_2),
        .I2(reset_out),
        .O(mem_reg_ENARDEN_cooolgate_en_sig_1));
  LUT2 #(
    .INIT(4'hB)) 
    mem_reg_i_2__0
       (.I0(rd_en),
        .I1(rx_fifo_resetn),
        .O(mem_reg_i_2__0_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFF1)) 
    mem_reg_i_3__0
       (.I0(mem_reg_0),
        .I1(Q[0]),
        .I2(Q[4]),
        .I3(Q[3]),
        .I4(Q[2]),
        .I5(Q[1]),
        .O(rd_en));
  LUT2 #(
    .INIT(4'h8)) 
    mem_reg_i_4
       (.I0(mem_reg_1),
        .I1(mem_reg_2),
        .O(wr_en));
  LUT4 #(
    .INIT(16'h4000)) 
    rd_addr_reload_i_1
       (.I0(rd_addr_reload_reg),
        .I1(\FSM_onehot_rd_state_reg[5] ),
        .I2(rd_addr_reload_reg_0),
        .I3(Q[6]),
        .O(rd_addr_reload0));
  LUT6 #(
    .INIT(64'h0000000F00770077)) 
    rd_pull_frame_i_4
       (.I0(Q[5]),
        .I1(rd_eof),
        .I2(Q[6]),
        .I3(rd_addr_reload_reg_1),
        .I4(Q[7]),
        .I5(mem_reg_0),
        .O(\FSM_onehot_rd_state_reg[5] ));
endmodule

(* DowngradeIPIdentifiedWarnings = "yes" *) (* ECO_CHECKSUM = "2a5260d3" *) (* POWER_OPT_BRAM_CDC = "0" *) 
(* POWER_OPT_BRAM_SR_ADDR = "0" *) (* POWER_OPT_LOOPED_NET_PERCENTAGE = "0" *) 
(* NotValidForBitStream *)
module tri_mode_ethernet_mac_0_example_design
   (glbl_rst,
    USER_CLK_P,
    USER_CLK_N,
    gtrefclk_p,
    gtrefclk_n,
    resetdone,
    txp,
    txn,
    rxp,
    rxn,
    synchronization_done,
    linkup,
    gen_tx_data,
    chk_tx_data,
    pcie_mgt_clk_sel0,
    pcie_mgt_clk_sel1,
    SDA,
    SCL,
    clk_si5324_125_out_p,
    clk_si5324_125_out_n,
    si5324_resetn,
    i2cmux_rst);
  input glbl_rst;
  input USER_CLK_P;
  input USER_CLK_N;
  input gtrefclk_p;
  input gtrefclk_n;
  output resetdone;
  output txp;
  output txn;
  input rxp;
  input rxn;
  output synchronization_done;
  output linkup;
  input gen_tx_data;
  input chk_tx_data;
  output pcie_mgt_clk_sel0;
  output pcie_mgt_clk_sel1;
  inout SDA;
  inout SCL;
  output clk_si5324_125_out_p;
  output clk_si5324_125_out_n;
  output si5324_resetn;
  output i2cmux_rst;

  (* DIFF_TERM = 0 *) (* IBUF_LOW_PWR *) wire USER_CLK_N;
  (* DIFF_TERM = 0 *) (* IBUF_LOW_PWR *) wire USER_CLK_P;
  wire \address_swap_inst/dob_8 ;
  wire \axi_pat_gen_inst/basic_rc_counter0 ;
  wire basic_pat_gen_inst_n_6;
  wire basic_pat_gen_inst_n_7;
  wire clk_125_w;
  wire clk_si5324_125_out_n;
  wire clk_si5324_125_out_p;
  wire gen_tx_data;
  wire gen_tx_data_IBUF;
  wire glbl_rst;
  wire glbl_rst_IBUF;
  wire gmii_rx_dv_int;
  wire gmii_rx_er_int;
  wire [7:0]gmii_rxd_int;
  wire gmii_tx_en_int;
  wire gmii_tx_er_int;
  wire [7:0]gmii_txd_int;
  wire gtrefclk_n;
  wire gtrefclk_n_IBUF;
  wire gtrefclk_p;
  wire gtrefclk_p_IBUF;
  wire gtx_clk_bufg;
  wire i2cmux_rst;
  wire linkup;
  wire linkup_OBUF;
  wire locked_200_w;
  wire lopt;
  wire mux_tready;
  wire pcie_mgt_clk_sel0;
  wire pcie_mgt_clk_sel1;
  wire reset_in0;
  wire resetdone;
  wire resetdone_OBUF;
  wire [7:0]rx_axis_fifo_tdata;
  wire rx_axis_fifo_tlast;
  wire rx_axis_fifo_tvalid;
  wire rx_fifo_resetn;
  wire rx_mac_aclk;
  wire rx_reset;
  wire rx_statistics_valid;
  wire rx_statistics_valid_reg;
  wire rx_stats_toggle;
  wire rxn;
  wire rxn_IBUF;
  wire rxp;
  wire rxp_IBUF;
  wire s_axi_aclk;
  wire [10:2]s_axi_araddr;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [10:2]s_axi_awaddr;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire s_axi_reset;
  wire s_axi_resetn;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire [31:9]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire si5324_resetn;
  wire speedis100;
  wire speedis10100;
  wire synchronization_done;
  wire trimac_fifo_block_n_26;
  wire trimac_fifo_block_n_27;
  wire trimac_fifo_block_n_28;
  wire trimac_fifo_block_n_29;
  wire trimac_fifo_block_n_30;
  wire [7:0]tx_axis_fifo_tdata;
  wire tx_axis_fifo_tlast;
  wire tx_axis_fifo_tvalid;
  wire tx_mac_aclk;
  wire tx_reset;
  wire tx_statistics_valid;
  wire tx_statistics_valid_reg;
  wire tx_stats_toggle;
  wire txn;
  wire txn_OBUF;
  wire txp;
  wire txp_OBUF;
  wire \user_side_FIFO/tx_fifo_i/p_16_out ;
  wire \user_side_FIFO/tx_fifo_i/p_23_out ;
  wire \user_side_FIFO/tx_fifo_i/tx_fifo_reset ;
  wire \user_side_FIFO/tx_fifo_i/wr_eof_reg ;
  wire NLW_pcs_pma_gmii_isolate_UNCONNECTED;
  wire NLW_pcs_pma_gt0_pll0lock_out_UNCONNECTED;
  wire NLW_pcs_pma_gt0_pll0outclk_out_UNCONNECTED;
  wire NLW_pcs_pma_gt0_pll0outrefclk_out_UNCONNECTED;
  wire NLW_pcs_pma_gt0_pll0refclklost_out_UNCONNECTED;
  wire NLW_pcs_pma_gt0_pll1outclk_out_UNCONNECTED;
  wire NLW_pcs_pma_gt0_pll1outrefclk_out_UNCONNECTED;
  wire NLW_pcs_pma_gtrefclk_bufg_out_UNCONNECTED;
  wire NLW_pcs_pma_gtrefclk_out_UNCONNECTED;
  wire NLW_pcs_pma_mmcm_locked_out_UNCONNECTED;
  wire NLW_pcs_pma_pma_reset_out_UNCONNECTED;
  wire NLW_pcs_pma_rxuserclk2_out_UNCONNECTED;
  wire NLW_pcs_pma_rxuserclk_out_UNCONNECTED;
  wire NLW_pcs_pma_sgmii_clk_en_UNCONNECTED;
  wire NLW_pcs_pma_sgmii_clk_f_UNCONNECTED;
  wire NLW_pcs_pma_sgmii_clk_r_UNCONNECTED;
  wire NLW_pcs_pma_userclk_out_UNCONNECTED;
  wire [4:0]NLW_pcs_pma_configuration_vector_UNCONNECTED;
  wire [15:1]NLW_pcs_pma_status_vector_UNCONNECTED;
  wire NLW_rx_stats_sync_data_out_UNCONNECTED;
  wire NLW_tx_stats_sync_data_out_UNCONNECTED;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  (* XILINX_LEGACY_PRIM = "OBUFDS" *) 
  OBUFDS #(
    .IOSTANDARD("DEFAULT")) 
    OBUFDS
       (.I(clk_125_w),
        .O(clk_si5324_125_out_p),
        .OB(clk_si5324_125_out_n));
  tri_mode_ethernet_mac_0_axi_lite_sm axi_lite_controller
       (.Q({s_axi_awaddr[10:9],s_axi_awaddr[4:2]}),
        .SR(s_axi_reset),
        .clk_200(s_axi_aclk),
        .\s_axi_araddr_reg[10]_0 ({s_axi_araddr[10:9],s_axi_araddr[4:2]}),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_resetn(s_axi_resetn),
        .s_axi_rready(s_axi_rready),
        .s_axi_rvalid(s_axi_rvalid),
        .\s_axi_wdata_reg[31]_0 ({s_axi_wdata[31],s_axi_wdata[28],s_axi_wdata[26],s_axi_wdata[10:9]}),
        .s_axi_wready(s_axi_wready),
        .s_axi_wvalid(s_axi_wvalid));
  tri_mode_ethernet_mac_0_basic_pat_gen basic_pat_gen_inst
       (.CLK(gtx_clk_bufg),
        .E(trimac_fifo_block_n_29),
        .Q(rx_axis_fifo_tdata),
        .SR(\user_side_FIFO/tx_fifo_i/tx_fifo_reset ),
        .SS(\axi_pat_gen_inst/basic_rc_counter0 ),
        .dob_8(\address_swap_inst/dob_8 ),
        .gen_tx_data_IBUF(gen_tx_data_IBUF),
        .mux_tready(mux_tready),
        .p_16_out(\user_side_FIFO/tx_fifo_i/p_16_out ),
        .p_23_out(\user_side_FIFO/tx_fifo_i/p_23_out ),
        .\rd_slot_reg[0] (basic_pat_gen_inst_n_7),
        .rx_axis_fifo_tlast(rx_axis_fifo_tlast),
        .rx_axis_fifo_tready_int_reg(basic_pat_gen_inst_n_6),
        .rx_axis_fifo_tvalid(rx_axis_fifo_tvalid),
        .rx_fifo_resetn(rx_fifo_resetn),
        .\tx_axis_fifo_tdata_reg[7] (tx_axis_fifo_tdata),
        .tx_axis_fifo_tlast(tx_axis_fifo_tlast),
        .tx_axis_fifo_tlast_int_reg(trimac_fifo_block_n_30),
        .tx_axis_fifo_tvalid(tx_axis_fifo_tvalid),
        .tx_axis_fifo_tvalid_reg(trimac_fifo_block_n_28),
        .wr_eof_reg(\user_side_FIFO/tx_fifo_i/wr_eof_reg ));
  (* IMPORTED_FROM = "/home/daphnelme/Desktop/DAPHNE_SGMII/tri_mode_ethernet_mac_0_ex/tri_mode_ethernet_mac_0_ex.runs/impl_1/.Xil/Vivado-14133-daphne.linktest.lme/clk_wiz_0/clk_wiz_0.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  clk_wiz_0 clk_wiz_0
       (.clk_125(clk_125_w),
        .clk_200(s_axi_aclk),
        .clk_in1_n(USER_CLK_N),
        .clk_in1_p(USER_CLK_P),
        .locked(locked_200_w),
        .reset(glbl_rst_IBUF));
  tri_mode_ethernet_mac_0_example_design_resets example_resets
       (.SR(s_axi_reset),
        .SS(\axi_pat_gen_inst/basic_rc_counter0 ),
        .clk_200(s_axi_aclk),
        .gen_tx_data_IBUF(gen_tx_data_IBUF),
        .glbl_rst_IBUF(glbl_rst_IBUF),
        .gtx_resetn_reg_0(\user_side_FIFO/tx_fifo_i/tx_fifo_reset ),
        .locked(locked_200_w),
        .reset(reset_in0),
        .rx_fifo_resetn(rx_fifo_resetn),
        .rx_reset(rx_reset),
        .s_axi_resetn(s_axi_resetn),
        .tx_reset(tx_reset),
        .userclk2_out(gtx_clk_bufg));
  IBUF gen_tx_data_IBUF_inst
       (.I(gen_tx_data),
        .O(gen_tx_data_IBUF));
  IBUF glbl_rst_IBUF_inst
       (.I(glbl_rst),
        .O(glbl_rst_IBUF));
  IBUF gtrefclk_n_IBUF_inst
       (.I(gtrefclk_n),
        .O(gtrefclk_n_IBUF));
  IBUF gtrefclk_p_IBUF_inst
       (.I(gtrefclk_p),
        .O(gtrefclk_p_IBUF));
  OBUFT i2cmux_rst_OBUF_inst
       (.I(1'b0),
        .O(i2cmux_rst),
        .T(1'b1));
  OBUF linkup_OBUF_inst
       (.I(linkup_OBUF),
        .O(linkup));
  OBUF pcie_mgt_clk_sel0_OBUF_inst
       (.I(1'b1),
        .O(pcie_mgt_clk_sel0));
  OBUF pcie_mgt_clk_sel1_OBUF_inst
       (.I(1'b0),
        .O(pcie_mgt_clk_sel1));
  (* IMPORTED_FROM = "/home/daphnelme/Desktop/DAPHNE_SGMII/tri_mode_ethernet_mac_0_ex/tri_mode_ethernet_mac_0_ex.runs/impl_1/.Xil/Vivado-14133-daphne.linktest.lme/gig_ethernet_pcs_pma_0/gig_ethernet_pcs_pma_0.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  gig_ethernet_pcs_pma_0 pcs_pma
       (.configuration_vector(NLW_pcs_pma_configuration_vector_UNCONNECTED[4:0]),
        .gmii_isolate(NLW_pcs_pma_gmii_isolate_UNCONNECTED),
        .gmii_rx_dv(gmii_rx_dv_int),
        .gmii_rx_er(gmii_rx_er_int),
        .gmii_rxd(gmii_rxd_int),
        .gmii_tx_en(gmii_tx_en_int),
        .gmii_tx_er(gmii_tx_er_int),
        .gmii_txd(gmii_txd_int),
        .gt0_pll0lock_out(NLW_pcs_pma_gt0_pll0lock_out_UNCONNECTED),
        .gt0_pll0outclk_out(NLW_pcs_pma_gt0_pll0outclk_out_UNCONNECTED),
        .gt0_pll0outrefclk_out(NLW_pcs_pma_gt0_pll0outrefclk_out_UNCONNECTED),
        .gt0_pll0refclklost_out(NLW_pcs_pma_gt0_pll0refclklost_out_UNCONNECTED),
        .gt0_pll1outclk_out(NLW_pcs_pma_gt0_pll1outclk_out_UNCONNECTED),
        .gt0_pll1outrefclk_out(NLW_pcs_pma_gt0_pll1outrefclk_out_UNCONNECTED),
        .gtrefclk_bufg_out(NLW_pcs_pma_gtrefclk_bufg_out_UNCONNECTED),
        .gtrefclk_n(gtrefclk_n_IBUF),
        .gtrefclk_out(NLW_pcs_pma_gtrefclk_out_UNCONNECTED),
        .gtrefclk_p(gtrefclk_p_IBUF),
        .independent_clock_bufg(s_axi_aclk),
        .lopt(lopt),
        .mmcm_locked_out(NLW_pcs_pma_mmcm_locked_out_UNCONNECTED),
        .pma_reset_out(NLW_pcs_pma_pma_reset_out_UNCONNECTED),
        .reset(reset_in0),
        .resetdone(resetdone_OBUF),
        .rxn(rxn_IBUF),
        .rxp(rxp_IBUF),
        .rxuserclk2_out(NLW_pcs_pma_rxuserclk2_out_UNCONNECTED),
        .rxuserclk_out(NLW_pcs_pma_rxuserclk_out_UNCONNECTED),
        .sgmii_clk_en(NLW_pcs_pma_sgmii_clk_en_UNCONNECTED),
        .sgmii_clk_f(NLW_pcs_pma_sgmii_clk_f_UNCONNECTED),
        .sgmii_clk_r(NLW_pcs_pma_sgmii_clk_r_UNCONNECTED),
        .signal_detect(1'b1),
        .speed_is_100(speedis100),
        .speed_is_10_100(speedis10100),
        .status_vector({NLW_pcs_pma_status_vector_UNCONNECTED[15:1],linkup_OBUF}),
        .txn(txn_OBUF),
        .txp(txp_OBUF),
        .userclk2_out(gtx_clk_bufg),
        .userclk_out(NLW_pcs_pma_userclk_out_UNCONNECTED));
  OBUF resetdone_OBUF_inst
       (.I(resetdone_OBUF),
        .O(resetdone));
  FDRE #(
    .INIT(1'b0)) 
    rx_statistics_valid_reg_reg
       (.C(rx_mac_aclk),
        .CE(1'b1),
        .D(rx_statistics_valid),
        .Q(rx_statistics_valid_reg),
        .R(1'b0));
  (* DEPTH = "5" *) 
  (* DONT_TOUCH *) 
  (* INITIALISE = "1'b0" *) 
  tri_mode_ethernet_mac_0_sync_block__1 rx_stats_sync
       (.clk(gtx_clk_bufg),
        .data_in(rx_stats_toggle),
        .data_out(NLW_rx_stats_sync_data_out_UNCONNECTED));
  FDRE #(
    .INIT(1'b0)) 
    rx_stats_toggle_reg
       (.C(rx_mac_aclk),
        .CE(1'b1),
        .D(trimac_fifo_block_n_26),
        .Q(rx_stats_toggle),
        .R(1'b0));
  IBUF rxn_IBUF_inst
       (.I(rxn),
        .O(rxn_IBUF));
  IBUF rxp_IBUF_inst
       (.I(rxp),
        .O(rxp_IBUF));
  OBUFT si5324_resetn_OBUF_inst
       (.I(1'b0),
        .O(si5324_resetn),
        .T(1'b1));
  (* OPT_MODIFIED = "SWEEP" *) 
  OBUF synchronization_done_OBUF_inst
       (.I(lopt),
        .O(synchronization_done));
  tri_mode_ethernet_mac_0_fifo_block trimac_fifo_block
       (.D(tx_axis_fifo_tdata),
        .E(trimac_fifo_block_n_29),
        .\FSM_sequential_wr_state_reg[0] (\user_side_FIFO/tx_fifo_i/tx_fifo_reset ),
        .Q({s_axi_awaddr[10:9],s_axi_awaddr[4:2]}),
        .clk_200(s_axi_aclk),
        .data_in(rx_stats_toggle),
        .dob_8(\address_swap_inst/dob_8 ),
        .gen_tx_data_IBUF(gen_tx_data_IBUF),
        .glbl_rst_IBUF(glbl_rst_IBUF),
        .gmii_rx_dv(gmii_rx_dv_int),
        .gmii_rx_er(gmii_rx_er_int),
        .gmii_rxd(gmii_rxd_int),
        .gmii_tx_en(gmii_tx_en_int),
        .gmii_tx_er(gmii_tx_er_int),
        .gmii_txd(gmii_txd_int),
        .locked(locked_200_w),
        .mem_reg(basic_pat_gen_inst_n_6),
        .mux_tready(mux_tready),
        .p_16_out(\user_side_FIFO/tx_fifo_i/p_16_out ),
        .p_23_out(\user_side_FIFO/tx_fifo_i/p_23_out ),
        .\rx_axis_fifo_tdata_reg[7] (rx_axis_fifo_tdata),
        .rx_axis_fifo_tlast(rx_axis_fifo_tlast),
        .rx_axis_fifo_tvalid(rx_axis_fifo_tvalid),
        .rx_fifo_resetn(rx_fifo_resetn),
        .rx_mac_aclk(rx_mac_aclk),
        .rx_reset(rx_reset),
        .rx_statistics_valid(rx_statistics_valid),
        .rx_statistics_valid_reg(rx_statistics_valid_reg),
        .rx_statistics_valid_reg_reg(trimac_fifo_block_n_26),
        .rx_statistics_valid_reg_reg_0({s_axi_wdata[31],s_axi_wdata[28],s_axi_wdata[26],s_axi_wdata[10:9]}),
        .rx_statistics_valid_reg_reg_1({s_axi_araddr[10:9],s_axi_araddr[4:2]}),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_resetn(s_axi_resetn),
        .s_axi_rready(s_axi_rready),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wready(s_axi_wready),
        .s_axi_wvalid(s_axi_wvalid),
        .speedis100(speedis100),
        .speedis10100(speedis10100),
        .\tx_axis_fifo_tdata_reg[7] (basic_pat_gen_inst_n_7),
        .tx_axis_fifo_tlast(tx_axis_fifo_tlast),
        .tx_axis_fifo_tvalid(tx_axis_fifo_tvalid),
        .tx_mac_aclk(tx_mac_aclk),
        .tx_reset(tx_reset),
        .tx_statistics_valid(tx_statistics_valid),
        .tx_statistics_valid_reg(tx_statistics_valid_reg),
        .tx_statistics_valid_reg_reg(trimac_fifo_block_n_27),
        .tx_stats_toggle_reg(tx_stats_toggle),
        .userclk2_out(gtx_clk_bufg),
        .wr_eof_reg(\user_side_FIFO/tx_fifo_i/wr_eof_reg ),
        .wr_fifo_full_reg(trimac_fifo_block_n_28),
        .wr_ovflow_dst_rdy_reg(trimac_fifo_block_n_30));
  FDRE #(
    .INIT(1'b0)) 
    tx_statistics_valid_reg_reg
       (.C(tx_mac_aclk),
        .CE(1'b1),
        .D(tx_statistics_valid),
        .Q(tx_statistics_valid_reg),
        .R(1'b0));
  (* DEPTH = "5" *) 
  (* DONT_TOUCH *) 
  (* INITIALISE = "1'b0" *) 
  tri_mode_ethernet_mac_0_sync_block__2 tx_stats_sync
       (.clk(gtx_clk_bufg),
        .data_in(tx_stats_toggle),
        .data_out(NLW_tx_stats_sync_data_out_UNCONNECTED));
  FDRE #(
    .INIT(1'b0)) 
    tx_stats_toggle_reg
       (.C(tx_mac_aclk),
        .CE(1'b1),
        .D(trimac_fifo_block_n_27),
        .Q(tx_stats_toggle),
        .R(1'b0));
  OBUF txn_OBUF_inst
       (.I(txn_OBUF),
        .O(txn));
  OBUF txp_OBUF_inst
       (.I(txp_OBUF),
        .O(txp));
endmodule

module tri_mode_ethernet_mac_0_example_design_resets
   (reset,
    rx_fifo_resetn,
    s_axi_resetn,
    SR,
    gtx_resetn_reg_0,
    SS,
    clk_200,
    userclk2_out,
    locked,
    glbl_rst_IBUF,
    rx_reset,
    tx_reset,
    gen_tx_data_IBUF);
  output reset;
  output rx_fifo_resetn;
  output s_axi_resetn;
  output [0:0]SR;
  output [0:0]gtx_resetn_reg_0;
  output [0:0]SS;
  input clk_200;
  input userclk2_out;
  input locked;
  input glbl_rst_IBUF;
  input rx_reset;
  input tx_reset;
  input gen_tx_data_IBUF;

  wire [0:0]SR;
  wire [0:0]SS;
  wire clk_200;
  wire gen_tx_data_IBUF;
  wire glbl_rst_IBUF;
  wire gtx_clk_reset_int;
  wire gtx_pre_resetn;
  wire gtx_pre_resetn_i_1_n_0;
  wire gtx_resetn_i_1_n_0;
  wire [0:0]gtx_resetn_reg_0;
  wire locked;
  wire reset;
  wire reset_in00_out;
  wire rx_fifo_resetn;
  wire rx_reset;
  wire s_axi_pre_resetn;
  wire s_axi_pre_resetn_i_1_n_0;
  wire s_axi_reset_int;
  wire s_axi_resetn;
  wire s_axi_resetn_i_1_n_0;
  wire tx_reset;
  wire userclk2_out;
  wire NLW_chk_reset_gen_reset_out_UNCONNECTED;

  LUT1 #(
    .INIT(2'h1)) 
    \FSM_sequential_axi_state[3]_i_1 
       (.I0(s_axi_resetn),
        .O(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_sequential_wr_state[1]_i_1__0 
       (.I0(rx_fifo_resetn),
        .O(gtx_resetn_reg_0));
  (* DEPTH = "5" *) 
  (* DONT_TOUCH *) 
  (* INITIALISE = "1'b1" *) 
  tri_mode_ethernet_mac_0_reset_sync__1 axi_lite_reset_gen
       (.clk(clk_200),
        .enable(1'b1),
        .reset_in(reset),
        .reset_out(s_axi_reset_int));
  LUT2 #(
    .INIT(4'hB)) 
    axi_lite_reset_gen_i_1
       (.I0(glbl_rst_IBUF),
        .I1(locked),
        .O(reset));
  LUT2 #(
    .INIT(4'h7)) 
    \basic_rc_counter[7]_i_1 
       (.I0(rx_fifo_resetn),
        .I1(gen_tx_data_IBUF),
        .O(SS));
  (* DEPTH = "5" *) 
  (* DONT_TOUCH *) 
  (* INITIALISE = "1'b1" *) 
  tri_mode_ethernet_mac_0_reset_sync__3 chk_reset_gen
       (.clk(userclk2_out),
        .enable(1'b1),
        .reset_in(reset),
        .reset_out(NLW_chk_reset_gen_reset_out_UNCONNECTED));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT1 #(
    .INIT(2'h1)) 
    gtx_pre_resetn_i_1
       (.I0(gtx_clk_reset_int),
        .O(gtx_pre_resetn_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gtx_pre_resetn_reg
       (.C(userclk2_out),
        .CE(1'b1),
        .D(gtx_pre_resetn_i_1_n_0),
        .Q(gtx_pre_resetn),
        .R(1'b0));
  (* DEPTH = "5" *) 
  (* DONT_TOUCH *) 
  (* INITIALISE = "1'b1" *) 
  tri_mode_ethernet_mac_0_reset_sync__2 gtx_reset_gen
       (.clk(userclk2_out),
        .enable(1'b1),
        .reset_in(reset_in00_out),
        .reset_out(gtx_clk_reset_int));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT2 #(
    .INIT(4'h2)) 
    gtx_resetn_i_1
       (.I0(gtx_pre_resetn),
        .I1(gtx_clk_reset_int),
        .O(gtx_resetn_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gtx_resetn_reg
       (.C(userclk2_out),
        .CE(1'b1),
        .D(gtx_resetn_i_1_n_0),
        .Q(rx_fifo_resetn),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hFFFD)) 
    reset_in0
       (.I0(locked),
        .I1(glbl_rst_IBUF),
        .I2(rx_reset),
        .I3(tx_reset),
        .O(reset_in00_out));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT1 #(
    .INIT(2'h1)) 
    s_axi_pre_resetn_i_1
       (.I0(s_axi_reset_int),
        .O(s_axi_pre_resetn_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    s_axi_pre_resetn_reg
       (.C(clk_200),
        .CE(1'b1),
        .D(s_axi_pre_resetn_i_1_n_0),
        .Q(s_axi_pre_resetn),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT2 #(
    .INIT(4'h2)) 
    s_axi_resetn_i_1
       (.I0(s_axi_pre_resetn),
        .I1(s_axi_reset_int),
        .O(s_axi_resetn_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    s_axi_resetn_reg
       (.C(clk_200),
        .CE(1'b1),
        .D(s_axi_resetn_i_1_n_0),
        .Q(s_axi_resetn),
        .R(1'b0));
endmodule

module tri_mode_ethernet_mac_0_fifo_block
   (rx_statistics_valid,
    rx_mac_aclk,
    rx_reset,
    tx_statistics_valid,
    tx_mac_aclk,
    tx_reset,
    speedis100,
    speedis10100,
    gmii_txd,
    gmii_tx_en,
    gmii_tx_er,
    s_axi_awready,
    s_axi_wready,
    s_axi_bvalid,
    s_axi_arready,
    s_axi_rvalid,
    wr_eof_reg,
    rx_axis_fifo_tlast,
    rx_axis_fifo_tvalid,
    rx_statistics_valid_reg_reg,
    tx_statistics_valid_reg_reg,
    wr_fifo_full_reg,
    E,
    wr_ovflow_dst_rdy_reg,
    \rx_axis_fifo_tdata_reg[7] ,
    userclk2_out,
    gmii_rxd,
    gmii_rx_dv,
    gmii_rx_er,
    clk_200,
    s_axi_resetn,
    Q,
    s_axi_awvalid,
    rx_statistics_valid_reg_reg_0,
    s_axi_wvalid,
    s_axi_bready,
    rx_statistics_valid_reg_reg_1,
    s_axi_arvalid,
    s_axi_rready,
    \FSM_sequential_wr_state_reg[0] ,
    p_16_out,
    p_23_out,
    rx_statistics_valid_reg,
    data_in,
    tx_statistics_valid_reg,
    tx_stats_toggle_reg,
    locked,
    glbl_rst_IBUF,
    tx_axis_fifo_tvalid,
    tx_axis_fifo_tlast,
    rx_fifo_resetn,
    mem_reg,
    mux_tready,
    gen_tx_data_IBUF,
    \tx_axis_fifo_tdata_reg[7] ,
    dob_8,
    D);
  output rx_statistics_valid;
  output rx_mac_aclk;
  output rx_reset;
  output tx_statistics_valid;
  output tx_mac_aclk;
  output tx_reset;
  output speedis100;
  output speedis10100;
  output [7:0]gmii_txd;
  output gmii_tx_en;
  output gmii_tx_er;
  output s_axi_awready;
  output s_axi_wready;
  output s_axi_bvalid;
  output s_axi_arready;
  output s_axi_rvalid;
  output wr_eof_reg;
  output rx_axis_fifo_tlast;
  output rx_axis_fifo_tvalid;
  output rx_statistics_valid_reg_reg;
  output tx_statistics_valid_reg_reg;
  output wr_fifo_full_reg;
  output [0:0]E;
  output wr_ovflow_dst_rdy_reg;
  output [7:0]\rx_axis_fifo_tdata_reg[7] ;
  input userclk2_out;
  input [7:0]gmii_rxd;
  input gmii_rx_dv;
  input gmii_rx_er;
  input clk_200;
  input s_axi_resetn;
  input [4:0]Q;
  input s_axi_awvalid;
  input [4:0]rx_statistics_valid_reg_reg_0;
  input s_axi_wvalid;
  input s_axi_bready;
  input [4:0]rx_statistics_valid_reg_reg_1;
  input s_axi_arvalid;
  input s_axi_rready;
  input [0:0]\FSM_sequential_wr_state_reg[0] ;
  input p_16_out;
  input p_23_out;
  input rx_statistics_valid_reg;
  input data_in;
  input tx_statistics_valid_reg;
  input tx_stats_toggle_reg;
  input locked;
  input glbl_rst_IBUF;
  input tx_axis_fifo_tvalid;
  input tx_axis_fifo_tlast;
  input rx_fifo_resetn;
  input mem_reg;
  input mux_tready;
  input gen_tx_data_IBUF;
  input \tx_axis_fifo_tdata_reg[7] ;
  input dob_8;
  input [7:0]D;

  wire [7:0]D;
  wire [0:0]E;
  wire [0:0]\FSM_sequential_wr_state_reg[0] ;
  wire [4:0]Q;
  wire clk_200;
  wire data_in;
  wire dob_8;
  wire gen_tx_data_IBUF;
  wire glbl_rst_IBUF;
  wire gmii_rx_dv;
  wire gmii_rx_er;
  wire [7:0]gmii_rxd;
  wire gmii_tx_en;
  wire gmii_tx_er;
  wire [7:0]gmii_txd;
  wire locked;
  wire mem_reg;
  wire mux_tready;
  wire p_0_out__21_carry__0_n_4;
  wire p_0_out__21_carry__0_n_5;
  wire p_0_out__21_carry__0_n_6;
  wire p_0_out__21_carry__0_n_7;
  wire p_0_out__21_carry_n_0;
  wire p_0_out__21_carry_n_4;
  wire p_0_out__21_carry_n_5;
  wire p_0_out__21_carry_n_6;
  wire p_0_out__21_carry_n_7;
  wire p_0_out_carry__0_n_4;
  wire p_0_out_carry__0_n_5;
  wire p_0_out_carry__0_n_6;
  wire p_0_out_carry__0_n_7;
  wire p_0_out_carry_n_0;
  wire p_0_out_carry_n_4;
  wire p_0_out_carry_n_5;
  wire p_0_out_carry_n_6;
  wire p_0_out_carry_n_7;
  wire p_16_out;
  wire p_23_out;
  wire [7:0]\rx_axis_fifo_tdata_reg[7] ;
  wire rx_axis_fifo_tlast;
  wire rx_axis_fifo_tvalid;
  wire [7:0]rx_axis_mac_tdata;
  wire rx_axis_mac_tlast;
  wire rx_axis_mac_tuser;
  wire rx_axis_mac_tvalid;
  wire [6:0]\rx_fifo_i/rd_frames_reg ;
  wire rx_fifo_resetn;
  wire rx_mac_aclk;
  wire rx_mac_reset;
  wire rx_reset;
  wire rx_statistics_valid;
  wire rx_statistics_valid_reg;
  wire rx_statistics_valid_reg_reg;
  wire [4:0]rx_statistics_valid_reg_reg_0;
  wire [4:0]rx_statistics_valid_reg_reg_1;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire s_axi_resetn;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire speedis100;
  wire speedis10100;
  wire \tx_axis_fifo_tdata_reg[7] ;
  wire tx_axis_fifo_tlast;
  wire tx_axis_fifo_tvalid;
  wire [7:0]tx_axis_mac_tdata;
  wire tx_axis_mac_tlast;
  wire tx_axis_mac_tready;
  wire tx_axis_mac_tvalid;
  wire [6:0]\tx_fifo_i/gen_fd_count.wr_frames_reg ;
  wire tx_mac_aclk;
  wire tx_mac_reset;
  wire tx_reset;
  wire tx_statistics_valid;
  wire tx_statistics_valid_reg;
  wire tx_statistics_valid_reg_reg;
  wire tx_stats_toggle_reg;
  wire user_side_FIFO_n_17;
  wire user_side_FIFO_n_24;
  wire user_side_FIFO_n_25;
  wire user_side_FIFO_n_26;
  wire user_side_FIFO_n_27;
  wire user_side_FIFO_n_28;
  wire user_side_FIFO_n_29;
  wire user_side_FIFO_n_30;
  wire user_side_FIFO_n_31;
  wire user_side_FIFO_n_32;
  wire user_side_FIFO_n_33;
  wire user_side_FIFO_n_34;
  wire user_side_FIFO_n_35;
  wire user_side_FIFO_n_36;
  wire user_side_FIFO_n_37;
  wire user_side_FIFO_n_38;
  wire user_side_FIFO_n_39;
  wire user_side_FIFO_n_9;
  wire userclk2_out;
  wire wr_eof_reg;
  wire wr_fifo_full_reg;
  wire wr_ovflow_dst_rdy_reg;
  wire [2:0]NLW_p_0_out__21_carry_CO_UNCONNECTED;
  wire [3:0]NLW_p_0_out__21_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_p_0_out_carry_CO_UNCONNECTED;
  wire [3:0]NLW_p_0_out_carry__0_CO_UNCONNECTED;

  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 p_0_out__21_carry
       (.CI(1'b0),
        .CO({p_0_out__21_carry_n_0,NLW_p_0_out__21_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(\rx_fifo_i/rd_frames_reg [0]),
        .DI({\rx_fifo_i/rd_frames_reg [3:1],user_side_FIFO_n_17}),
        .O({p_0_out__21_carry_n_4,p_0_out__21_carry_n_5,p_0_out__21_carry_n_6,p_0_out__21_carry_n_7}),
        .S({user_side_FIFO_n_28,user_side_FIFO_n_29,user_side_FIFO_n_30,user_side_FIFO_n_31}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 p_0_out__21_carry__0
       (.CI(p_0_out__21_carry_n_0),
        .CO(NLW_p_0_out__21_carry__0_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,\rx_fifo_i/rd_frames_reg [6:4]}),
        .O({p_0_out__21_carry__0_n_4,p_0_out__21_carry__0_n_5,p_0_out__21_carry__0_n_6,p_0_out__21_carry__0_n_7}),
        .S({user_side_FIFO_n_36,user_side_FIFO_n_37,user_side_FIFO_n_38,user_side_FIFO_n_39}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 p_0_out_carry
       (.CI(1'b0),
        .CO({p_0_out_carry_n_0,NLW_p_0_out_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(\tx_fifo_i/gen_fd_count.wr_frames_reg [0]),
        .DI({\tx_fifo_i/gen_fd_count.wr_frames_reg [3:1],user_side_FIFO_n_9}),
        .O({p_0_out_carry_n_4,p_0_out_carry_n_5,p_0_out_carry_n_6,p_0_out_carry_n_7}),
        .S({user_side_FIFO_n_24,user_side_FIFO_n_25,user_side_FIFO_n_26,user_side_FIFO_n_27}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 p_0_out_carry__0
       (.CI(p_0_out_carry_n_0),
        .CO(NLW_p_0_out_carry__0_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,\tx_fifo_i/gen_fd_count.wr_frames_reg [6:4]}),
        .O({p_0_out_carry__0_n_4,p_0_out_carry__0_n_5,p_0_out_carry__0_n_6,p_0_out_carry__0_n_7}),
        .S({user_side_FIFO_n_32,user_side_FIFO_n_33,user_side_FIFO_n_34,user_side_FIFO_n_35}));
  (* DEPTH = "5" *) 
  (* DONT_TOUCH *) 
  (* INITIALISE = "1'b1" *) 
  tri_mode_ethernet_mac_0_reset_sync__4 rx_mac_reset_gen
       (.clk(rx_mac_aclk),
        .enable(1'b1),
        .reset_in(rx_reset),
        .reset_out(rx_mac_reset));
  tri_mode_ethernet_mac_0_support trimac_sup_block
       (.Q(tx_axis_mac_tdata),
        .clk_200(clk_200),
        .data_in(data_in),
        .glbl_rst_IBUF(glbl_rst_IBUF),
        .gmii_rx_dv(gmii_rx_dv),
        .gmii_rx_er(gmii_rx_er),
        .gmii_rxd(gmii_rxd),
        .gmii_tx_en(gmii_tx_en),
        .gmii_tx_er(gmii_tx_er),
        .gmii_txd(gmii_txd),
        .locked(locked),
        .rx_axis_mac_tdata(rx_axis_mac_tdata),
        .rx_axis_mac_tlast(rx_axis_mac_tlast),
        .rx_axis_mac_tuser(rx_axis_mac_tuser),
        .rx_axis_mac_tvalid(rx_axis_mac_tvalid),
        .rx_mac_aclk(rx_mac_aclk),
        .rx_reset(rx_reset),
        .rx_statistics_valid(rx_statistics_valid),
        .rx_statistics_valid_reg(rx_statistics_valid_reg),
        .rx_statistics_valid_reg_reg(rx_statistics_valid_reg_reg),
        .rx_statistics_valid_reg_reg_0(Q),
        .rx_statistics_valid_reg_reg_1(rx_statistics_valid_reg_reg_0),
        .rx_statistics_valid_reg_reg_2(rx_statistics_valid_reg_reg_1),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_resetn(s_axi_resetn),
        .s_axi_rready(s_axi_rready),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wready(s_axi_wready),
        .s_axi_wvalid(s_axi_wvalid),
        .speedis100(speedis100),
        .speedis10100(speedis10100),
        .tx_axis_mac_tlast(tx_axis_mac_tlast),
        .tx_axis_mac_tready(tx_axis_mac_tready),
        .tx_axis_mac_tvalid(tx_axis_mac_tvalid),
        .tx_mac_aclk(tx_mac_aclk),
        .tx_reset(tx_reset),
        .tx_statistics_valid(tx_statistics_valid),
        .tx_statistics_valid_reg(tx_statistics_valid_reg),
        .tx_statistics_valid_reg_reg(tx_statistics_valid_reg_reg),
        .tx_stats_toggle_reg(tx_stats_toggle_reg),
        .userclk2_out(userclk2_out));
  (* DEPTH = "5" *) 
  (* DONT_TOUCH *) 
  (* INITIALISE = "1'b1" *) 
  tri_mode_ethernet_mac_0_reset_sync tx_mac_reset_gen
       (.clk(tx_mac_aclk),
        .enable(1'b1),
        .reset_in(tx_reset),
        .reset_out(tx_mac_reset));
  tri_mode_ethernet_mac_0_ten_100_1g_eth_fifo user_side_FIFO
       (.D(D),
        .DI({\tx_fifo_i/gen_fd_count.wr_frames_reg [3:1],user_side_FIFO_n_9}),
        .E(E),
        .\FSM_sequential_wr_state_reg[0] (\FSM_sequential_wr_state_reg[0] ),
        .Q({\tx_fifo_i/gen_fd_count.wr_frames_reg [6:4],\tx_fifo_i/gen_fd_count.wr_frames_reg [0]}),
        .S({user_side_FIFO_n_24,user_side_FIFO_n_25,user_side_FIFO_n_26,user_side_FIFO_n_27}),
        .SR(tx_mac_reset),
        .dob_8(dob_8),
        .\gen_fd_count.wr_frames_reg[7] ({user_side_FIFO_n_32,user_side_FIFO_n_33,user_side_FIFO_n_34,user_side_FIFO_n_35}),
        .\gen_fd_count.wr_frames_reg[8] ({p_0_out_carry__0_n_4,p_0_out_carry__0_n_5,p_0_out_carry__0_n_6,p_0_out_carry__0_n_7,p_0_out_carry_n_4,p_0_out_carry_n_5,p_0_out_carry_n_6,p_0_out_carry_n_7}),
        .gen_tx_data_IBUF(gen_tx_data_IBUF),
        .mem_reg(mem_reg),
        .mux_tready(mux_tready),
        .p_16_out(p_16_out),
        .p_23_out(p_23_out),
        .\rd_frames_reg[3] ({\rx_fifo_i/rd_frames_reg [3:1],user_side_FIFO_n_17}),
        .\rd_frames_reg[3]_0 ({user_side_FIFO_n_28,user_side_FIFO_n_29,user_side_FIFO_n_30,user_side_FIFO_n_31}),
        .\rd_frames_reg[6] ({\rx_fifo_i/rd_frames_reg [6:4],\rx_fifo_i/rd_frames_reg [0]}),
        .\rd_frames_reg[7] ({user_side_FIFO_n_36,user_side_FIFO_n_37,user_side_FIFO_n_38,user_side_FIFO_n_39}),
        .\rd_frames_reg[8] ({p_0_out__21_carry__0_n_4,p_0_out__21_carry__0_n_5,p_0_out__21_carry__0_n_6,p_0_out__21_carry__0_n_7,p_0_out__21_carry_n_4,p_0_out__21_carry_n_5,p_0_out__21_carry_n_6,p_0_out__21_carry_n_7}),
        .reset_out(rx_mac_reset),
        .\rx_axis_fifo_tdata_reg[7] (\rx_axis_fifo_tdata_reg[7] ),
        .rx_axis_fifo_tlast_int_reg(rx_axis_fifo_tlast),
        .rx_axis_fifo_tvalid(rx_axis_fifo_tvalid),
        .rx_axis_mac_tdata(rx_axis_mac_tdata),
        .rx_axis_mac_tlast(rx_axis_mac_tlast),
        .rx_axis_mac_tuser(rx_axis_mac_tuser),
        .rx_axis_mac_tvalid(rx_axis_mac_tvalid),
        .rx_fifo_resetn(rx_fifo_resetn),
        .rx_mac_aclk(rx_mac_aclk),
        .\tx_axis_fifo_tdata_reg[7] (\tx_axis_fifo_tdata_reg[7] ),
        .tx_axis_fifo_tlast(tx_axis_fifo_tlast),
        .tx_axis_fifo_tvalid(tx_axis_fifo_tvalid),
        .\tx_axis_mac_tdata_int_reg[7] (tx_axis_mac_tdata),
        .tx_axis_mac_tlast(tx_axis_mac_tlast),
        .tx_axis_mac_tready(tx_axis_mac_tready),
        .tx_axis_mac_tvalid(tx_axis_mac_tvalid),
        .tx_mac_aclk(tx_mac_aclk),
        .userclk2_out(userclk2_out),
        .wr_eof_reg(wr_eof_reg),
        .wr_fifo_full_reg(wr_fifo_full_reg),
        .wr_ovflow_dst_rdy_reg(wr_ovflow_dst_rdy_reg));
endmodule

(* DEPTH = "5" *) (* INITIALISE = "1'b1" *) (* dont_touch = "yes" *) 
module tri_mode_ethernet_mac_0_reset_sync
   (reset_in,
    clk,
    enable,
    reset_out);
  input reset_in;
  input clk;
  input enable;
  output reset_out;

  wire clk;
  wire enable;
  wire reset_in;
  wire reset_out;
  wire reset_sync_reg0;
  wire reset_sync_reg1;
  wire reset_sync_reg2;
  wire reset_sync_reg3;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    reset_sync0
       (.C(clk),
        .CE(enable),
        .D(1'b0),
        .PRE(reset_in),
        .Q(reset_sync_reg0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    reset_sync1
       (.C(clk),
        .CE(enable),
        .D(reset_sync_reg0),
        .PRE(reset_in),
        .Q(reset_sync_reg1));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    reset_sync2
       (.C(clk),
        .CE(enable),
        .D(reset_sync_reg1),
        .PRE(reset_in),
        .Q(reset_sync_reg2));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    reset_sync3
       (.C(clk),
        .CE(enable),
        .D(reset_sync_reg2),
        .PRE(reset_in),
        .Q(reset_sync_reg3));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    reset_sync4
       (.C(clk),
        .CE(enable),
        .D(reset_sync_reg3),
        .PRE(reset_in),
        .Q(reset_out));
endmodule

(* DEPTH = "5" *) (* INITIALISE = "1'b1" *) (* ORIG_REF_NAME = "tri_mode_ethernet_mac_0_reset_sync" *) 
(* dont_touch = "yes" *) 
module tri_mode_ethernet_mac_0_reset_sync__1
   (reset_in,
    clk,
    enable,
    reset_out);
  input reset_in;
  input clk;
  input enable;
  output reset_out;

  wire clk;
  wire enable;
  wire reset_in;
  wire reset_out;
  wire reset_sync_reg0;
  wire reset_sync_reg1;
  wire reset_sync_reg2;
  wire reset_sync_reg3;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    reset_sync0
       (.C(clk),
        .CE(enable),
        .D(1'b0),
        .PRE(reset_in),
        .Q(reset_sync_reg0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    reset_sync1
       (.C(clk),
        .CE(enable),
        .D(reset_sync_reg0),
        .PRE(reset_in),
        .Q(reset_sync_reg1));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    reset_sync2
       (.C(clk),
        .CE(enable),
        .D(reset_sync_reg1),
        .PRE(reset_in),
        .Q(reset_sync_reg2));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    reset_sync3
       (.C(clk),
        .CE(enable),
        .D(reset_sync_reg2),
        .PRE(reset_in),
        .Q(reset_sync_reg3));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    reset_sync4
       (.C(clk),
        .CE(enable),
        .D(reset_sync_reg3),
        .PRE(reset_in),
        .Q(reset_out));
endmodule

(* DEPTH = "5" *) (* INITIALISE = "1'b1" *) (* ORIG_REF_NAME = "tri_mode_ethernet_mac_0_reset_sync" *) 
(* dont_touch = "yes" *) 
module tri_mode_ethernet_mac_0_reset_sync__2
   (reset_in,
    clk,
    enable,
    reset_out);
  input reset_in;
  input clk;
  input enable;
  output reset_out;

  wire clk;
  wire enable;
  wire reset_in;
  wire reset_out;
  wire reset_sync_reg0;
  wire reset_sync_reg1;
  wire reset_sync_reg2;
  wire reset_sync_reg3;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    reset_sync0
       (.C(clk),
        .CE(enable),
        .D(1'b0),
        .PRE(reset_in),
        .Q(reset_sync_reg0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    reset_sync1
       (.C(clk),
        .CE(enable),
        .D(reset_sync_reg0),
        .PRE(reset_in),
        .Q(reset_sync_reg1));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    reset_sync2
       (.C(clk),
        .CE(enable),
        .D(reset_sync_reg1),
        .PRE(reset_in),
        .Q(reset_sync_reg2));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    reset_sync3
       (.C(clk),
        .CE(enable),
        .D(reset_sync_reg2),
        .PRE(reset_in),
        .Q(reset_sync_reg3));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    reset_sync4
       (.C(clk),
        .CE(enable),
        .D(reset_sync_reg3),
        .PRE(reset_in),
        .Q(reset_out));
endmodule

(* DEPTH = "5" *) (* INITIALISE = "1'b1" *) (* ORIG_REF_NAME = "tri_mode_ethernet_mac_0_reset_sync" *) 
(* dont_touch = "yes" *) 
module tri_mode_ethernet_mac_0_reset_sync__3
   (reset_in,
    clk,
    enable,
    reset_out);
  input reset_in;
  input clk;
  input enable;
  output reset_out;

  wire clk;
  wire enable;
  wire reset_in;
  wire reset_out;
  wire reset_sync_reg0;
  wire reset_sync_reg1;
  wire reset_sync_reg2;
  wire reset_sync_reg3;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    reset_sync0
       (.C(clk),
        .CE(enable),
        .D(1'b0),
        .PRE(reset_in),
        .Q(reset_sync_reg0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    reset_sync1
       (.C(clk),
        .CE(enable),
        .D(reset_sync_reg0),
        .PRE(reset_in),
        .Q(reset_sync_reg1));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    reset_sync2
       (.C(clk),
        .CE(enable),
        .D(reset_sync_reg1),
        .PRE(reset_in),
        .Q(reset_sync_reg2));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    reset_sync3
       (.C(clk),
        .CE(enable),
        .D(reset_sync_reg2),
        .PRE(reset_in),
        .Q(reset_sync_reg3));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    reset_sync4
       (.C(clk),
        .CE(enable),
        .D(reset_sync_reg3),
        .PRE(reset_in),
        .Q(reset_out));
endmodule

(* DEPTH = "5" *) (* INITIALISE = "1'b1" *) (* ORIG_REF_NAME = "tri_mode_ethernet_mac_0_reset_sync" *) 
(* dont_touch = "yes" *) 
module tri_mode_ethernet_mac_0_reset_sync__4
   (reset_in,
    clk,
    enable,
    reset_out);
  input reset_in;
  input clk;
  input enable;
  output reset_out;

  wire clk;
  wire enable;
  wire reset_in;
  wire reset_out;
  wire reset_sync_reg0;
  wire reset_sync_reg1;
  wire reset_sync_reg2;
  wire reset_sync_reg3;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    reset_sync0
       (.C(clk),
        .CE(enable),
        .D(1'b0),
        .PRE(reset_in),
        .Q(reset_sync_reg0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    reset_sync1
       (.C(clk),
        .CE(enable),
        .D(reset_sync_reg0),
        .PRE(reset_in),
        .Q(reset_sync_reg1));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    reset_sync2
       (.C(clk),
        .CE(enable),
        .D(reset_sync_reg1),
        .PRE(reset_in),
        .Q(reset_sync_reg2));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    reset_sync3
       (.C(clk),
        .CE(enable),
        .D(reset_sync_reg2),
        .PRE(reset_in),
        .Q(reset_sync_reg3));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_PRE_INVERTED(1'b0)) 
    reset_sync4
       (.C(clk),
        .CE(enable),
        .D(reset_sync_reg3),
        .PRE(reset_in),
        .Q(reset_out));
endmodule

module tri_mode_ethernet_mac_0_rx_client_fifo
   (rx_axis_fifo_tlast_int_reg_0,
    rx_axis_fifo_tvalid,
    \rd_frames_reg[3]_0 ,
    \rd_frames_reg[6]_0 ,
    \rd_frames_reg[3]_1 ,
    \rd_frames_reg[7]_0 ,
    \rx_axis_fifo_tdata_reg[7]_0 ,
    userclk2_out,
    rx_mac_aclk,
    mem_reg,
    rx_axis_mac_tvalid,
    reset_out,
    rx_axis_mac_tuser,
    rx_axis_mac_tlast,
    rx_axis_mac_tdata,
    mem_reg_0,
    mux_tready,
    gen_tx_data_IBUF,
    rx_fifo_resetn,
    \rd_frames_reg[8]_0 );
  output rx_axis_fifo_tlast_int_reg_0;
  output rx_axis_fifo_tvalid;
  output [3:0]\rd_frames_reg[3]_0 ;
  output [3:0]\rd_frames_reg[6]_0 ;
  output [3:0]\rd_frames_reg[3]_1 ;
  output [3:0]\rd_frames_reg[7]_0 ;
  output [7:0]\rx_axis_fifo_tdata_reg[7]_0 ;
  input userclk2_out;
  input rx_mac_aclk;
  input [0:0]mem_reg;
  input rx_axis_mac_tvalid;
  input reset_out;
  input rx_axis_mac_tuser;
  input rx_axis_mac_tlast;
  input [7:0]rx_axis_mac_tdata;
  input mem_reg_0;
  input mux_tready;
  input gen_tx_data_IBUF;
  input rx_fifo_resetn;
  input [7:0]\rd_frames_reg[8]_0 ;

  wire \FSM_onehot_rd_state[0]_i_1_n_0 ;
  wire \FSM_onehot_rd_state[1]_i_1_n_0 ;
  wire \FSM_onehot_rd_state[7]_i_1_n_0 ;
  wire \FSM_onehot_rd_state_reg_n_0_[0] ;
  wire \FSM_onehot_rd_state_reg_n_0_[1] ;
  wire \FSM_onehot_rd_state_reg_n_0_[2] ;
  wire \FSM_onehot_rd_state_reg_n_0_[3] ;
  wire \FSM_onehot_rd_state_reg_n_0_[5] ;
  wire \FSM_onehot_rd_state_reg_n_0_[7] ;
  wire \FSM_onehot_wr_state[0]_i_1_n_0 ;
  wire \FSM_onehot_wr_state[0]_i_2_n_0 ;
  wire \FSM_onehot_wr_state[1]_i_1_n_0 ;
  wire \FSM_onehot_wr_state[2]_i_1_n_0 ;
  wire \FSM_onehot_wr_state[3]_i_1_n_0 ;
  wire \FSM_onehot_wr_state[4]_i_1_n_0 ;
  wire \FSM_onehot_wr_state_reg_n_0_[1] ;
  wire \FSM_onehot_wr_state_reg_n_0_[2] ;
  wire \FSM_onehot_wr_state_reg_n_0_[4] ;
  wire frame_in_fifo;
  wire frame_in_fifo_i_1_n_0;
  wire frame_in_fifo_i_2_n_0;
  wire gen_tx_data_IBUF;
  wire [0:0]mem_reg;
  wire mem_reg_0;
  wire mux_tready;
  wire [1:0]old_rd_addr;
  wire [1:0]p_0_in;
  wire [11:6]p_0_in1_in;
  wire p_1_in;
  wire p_2_in;
  wire \rd_addr[0]_i_1_n_0 ;
  wire \rd_addr[0]_i_3_n_0 ;
  wire \rd_addr[0]_i_4_n_0 ;
  wire \rd_addr[0]_i_5_n_0 ;
  wire \rd_addr[4]_i_2_n_0 ;
  wire \rd_addr[4]_i_3_n_0 ;
  wire \rd_addr[4]_i_4_n_0 ;
  wire \rd_addr[4]_i_5_n_0 ;
  wire \rd_addr[8]_i_2_n_0 ;
  wire \rd_addr[8]_i_3_n_0 ;
  wire \rd_addr[8]_i_4_n_0 ;
  wire \rd_addr[8]_i_5_n_0 ;
  wire \rd_addr_reg[0]_i_2_n_0 ;
  wire \rd_addr_reg[0]_i_2_n_4 ;
  wire \rd_addr_reg[0]_i_2_n_5 ;
  wire \rd_addr_reg[0]_i_2_n_6 ;
  wire \rd_addr_reg[0]_i_2_n_7 ;
  wire \rd_addr_reg[4]_i_1_n_0 ;
  wire \rd_addr_reg[4]_i_1_n_4 ;
  wire \rd_addr_reg[4]_i_1_n_5 ;
  wire \rd_addr_reg[4]_i_1_n_6 ;
  wire \rd_addr_reg[4]_i_1_n_7 ;
  wire \rd_addr_reg[8]_i_1_n_4 ;
  wire \rd_addr_reg[8]_i_1_n_5 ;
  wire \rd_addr_reg[8]_i_1_n_6 ;
  wire \rd_addr_reg[8]_i_1_n_7 ;
  wire \rd_addr_reg_n_0_[0] ;
  wire \rd_addr_reg_n_0_[10] ;
  wire \rd_addr_reg_n_0_[11] ;
  wire \rd_addr_reg_n_0_[1] ;
  wire \rd_addr_reg_n_0_[2] ;
  wire \rd_addr_reg_n_0_[3] ;
  wire \rd_addr_reg_n_0_[6] ;
  wire \rd_addr_reg_n_0_[7] ;
  wire \rd_addr_reg_n_0_[8] ;
  wire \rd_addr_reg_n_0_[9] ;
  wire rd_addr_reload;
  wire rd_addr_reload0;
  wire \rd_data_pipe_reg_n_0_[0] ;
  wire \rd_data_pipe_reg_n_0_[1] ;
  wire \rd_data_pipe_reg_n_0_[2] ;
  wire \rd_data_pipe_reg_n_0_[3] ;
  wire \rd_data_pipe_reg_n_0_[4] ;
  wire \rd_data_pipe_reg_n_0_[5] ;
  wire \rd_data_pipe_reg_n_0_[6] ;
  wire \rd_data_pipe_reg_n_0_[7] ;
  wire rd_en;
  wire [7:0]rd_eof_data_bram;
  wire \rd_frames[0]_i_1_n_0 ;
  wire \rd_frames[8]_i_1_n_0 ;
  wire [8:7]rd_frames_reg;
  wire [3:0]\rd_frames_reg[3]_0 ;
  wire [3:0]\rd_frames_reg[3]_1 ;
  wire [3:0]\rd_frames_reg[6]_0 ;
  wire [3:0]\rd_frames_reg[7]_0 ;
  wire [7:0]\rd_frames_reg[8]_0 ;
  wire rd_pull_frame;
  wire rd_pull_frame06_out;
  wire rd_pull_frame_i_1_n_0;
  wire rd_pull_frame_i_2_n_0;
  wire rd_pull_frame_i_3_n_0;
  wire rd_pull_frame_i_5_n_0;
  wire rd_pull_frame_i_6_n_0;
  wire rd_pull_frame_i_7_n_0;
  wire rd_store_frame;
  wire rd_store_frame0;
  wire rd_store_frame_delay;
  wire rd_store_frame_sync;
  wire [1:1]rd_valid_pipe;
  wire \rd_valid_pipe[0]_i_1_n_0 ;
  wire \rd_valid_pipe[1]_i_1_n_0 ;
  wire \rd_valid_pipe_reg_n_0_[0] ;
  wire reset_out;
  wire [7:0]\rx_axis_fifo_tdata_reg[7]_0 ;
  wire rx_axis_fifo_tlast_int;
  wire rx_axis_fifo_tlast_int_i_1_n_0;
  wire rx_axis_fifo_tlast_int_reg_0;
  wire rx_axis_fifo_tvalid;
  wire rx_axis_fifo_tvalid_i_1_n_0;
  wire [7:0]rx_axis_mac_tdata;
  wire rx_axis_mac_tlast;
  wire rx_axis_mac_tuser;
  wire rx_axis_mac_tvalid;
  wire rx_fifo_resetn;
  wire rx_mac_aclk;
  wire rx_ramgen_i_n_1;
  wire rx_ramgen_i_n_2;
  wire rx_ramgen_i_n_3;
  wire update_addr_tog;
  wire update_addr_tog_i_1_n_0;
  wire update_addr_tog_sync;
  wire update_addr_tog_sync_reg;
  wire userclk2_out;
  wire \wr_addr[0]_i_1__1_n_0 ;
  wire \wr_addr[0]_i_3__0_n_0 ;
  wire \wr_addr[0]_i_4__0_n_0 ;
  wire \wr_addr[0]_i_5__0_n_0 ;
  wire \wr_addr[0]_i_6__0_n_0 ;
  wire \wr_addr[0]_i_7__0_n_0 ;
  wire \wr_addr[4]_i_2__0_n_0 ;
  wire \wr_addr[4]_i_3__0_n_0 ;
  wire \wr_addr[4]_i_4__0_n_0 ;
  wire \wr_addr[4]_i_5__0_n_0 ;
  wire \wr_addr[8]_i_2__0_n_0 ;
  wire \wr_addr[8]_i_3__0_n_0 ;
  wire \wr_addr[8]_i_4__0_n_0 ;
  wire \wr_addr[8]_i_5__0_n_0 ;
  wire [11:2]wr_addr_diff_in;
  wire wr_addr_diff_in_carry__0_i_1_n_0;
  wire wr_addr_diff_in_carry__0_i_2_n_0;
  wire wr_addr_diff_in_carry__0_i_3_n_0;
  wire wr_addr_diff_in_carry__0_i_4_n_0;
  wire wr_addr_diff_in_carry__0_n_0;
  wire wr_addr_diff_in_carry__1_i_1_n_0;
  wire wr_addr_diff_in_carry__1_i_2_n_0;
  wire wr_addr_diff_in_carry__1_i_3_n_0;
  wire wr_addr_diff_in_carry_i_1_n_0;
  wire wr_addr_diff_in_carry_i_2_n_0;
  wire wr_addr_diff_in_carry_i_3_n_0;
  wire wr_addr_diff_in_carry_i_4_n_0;
  wire wr_addr_diff_in_carry_i_5_n_0;
  wire wr_addr_diff_in_carry_n_0;
  wire \wr_addr_diff_reg_n_0_[11] ;
  wire \wr_addr_diff_reg_n_0_[2] ;
  wire \wr_addr_diff_reg_n_0_[3] ;
  wire \wr_addr_diff_reg_n_0_[4] ;
  wire \wr_addr_diff_reg_n_0_[5] ;
  wire \wr_addr_diff_reg_n_0_[6] ;
  wire \wr_addr_diff_reg_n_0_[7] ;
  wire \wr_addr_diff_reg_n_0_[8] ;
  wire [11:0]wr_addr_reg;
  wire \wr_addr_reg[0]_i_2__0_n_0 ;
  wire \wr_addr_reg[0]_i_2__0_n_4 ;
  wire \wr_addr_reg[0]_i_2__0_n_5 ;
  wire \wr_addr_reg[0]_i_2__0_n_6 ;
  wire \wr_addr_reg[0]_i_2__0_n_7 ;
  wire \wr_addr_reg[4]_i_1__0_n_0 ;
  wire \wr_addr_reg[4]_i_1__0_n_4 ;
  wire \wr_addr_reg[4]_i_1__0_n_5 ;
  wire \wr_addr_reg[4]_i_1__0_n_6 ;
  wire \wr_addr_reg[4]_i_1__0_n_7 ;
  wire \wr_addr_reg[8]_i_1__0_n_4 ;
  wire \wr_addr_reg[8]_i_1__0_n_5 ;
  wire \wr_addr_reg[8]_i_1__0_n_6 ;
  wire \wr_addr_reg[8]_i_1__0_n_7 ;
  wire wr_bf;
  wire wr_bf0;
  wire \wr_data_pipe_reg[1][0]_srl2_n_0 ;
  wire \wr_data_pipe_reg[1][1]_srl2_n_0 ;
  wire \wr_data_pipe_reg[1][2]_srl2_n_0 ;
  wire \wr_data_pipe_reg[1][3]_srl2_n_0 ;
  wire \wr_data_pipe_reg[1][4]_srl2_n_0 ;
  wire \wr_data_pipe_reg[1][5]_srl2_n_0 ;
  wire \wr_data_pipe_reg[1][6]_srl2_n_0 ;
  wire \wr_data_pipe_reg[1][7]_srl2_n_0 ;
  wire \wr_dv_pipe_reg[0]_5 ;
  wire \wr_dv_pipe_reg[1]__0 ;
  wire \wr_dv_pipe_reg_n_0_[2] ;
  wire wr_eof_bram0;
  wire \wr_eof_bram_pipe_reg[0]_7 ;
  wire \wr_eof_bram_pipe_reg[1]__0 ;
  wire [8:0]wr_eof_data_bram;
  wire wr_fifo_full;
  wire wr_fifo_full0;
  wire wr_fifo_full_i_2_n_0;
  wire wr_gf;
  wire wr_gf0;
  wire \wr_gfbf_pipe_reg[0]_6 ;
  wire \wr_gfbf_pipe_reg[1]__0 ;
  wire wr_rd_addr0;
  wire wr_start_addr_load;
  wire \wr_start_addr_reg_n_0_[0] ;
  wire \wr_start_addr_reg_n_0_[10] ;
  wire \wr_start_addr_reg_n_0_[11] ;
  wire \wr_start_addr_reg_n_0_[1] ;
  wire \wr_start_addr_reg_n_0_[2] ;
  wire \wr_start_addr_reg_n_0_[3] ;
  wire \wr_start_addr_reg_n_0_[4] ;
  wire \wr_start_addr_reg_n_0_[5] ;
  wire \wr_start_addr_reg_n_0_[6] ;
  wire \wr_start_addr_reg_n_0_[7] ;
  wire \wr_start_addr_reg_n_0_[8] ;
  wire \wr_start_addr_reg_n_0_[9] ;
  wire wr_store_frame_tog;
  wire wr_store_frame_tog_i_1_n_0;
  wire wr_store_frame_tog_reg_n_0;
  wire [2:0]\NLW_rd_addr_reg[0]_i_2_CO_UNCONNECTED ;
  wire [2:0]\NLW_rd_addr_reg[4]_i_1_CO_UNCONNECTED ;
  wire [3:0]\NLW_rd_addr_reg[8]_i_1_CO_UNCONNECTED ;
  wire [0:0]NLW_rx_ramgen_i_mem_reg_3_UNCONNECTED;
  wire [2:0]NLW_wr_addr_diff_in_carry_CO_UNCONNECTED;
  wire [0:0]NLW_wr_addr_diff_in_carry_O_UNCONNECTED;
  wire [2:0]NLW_wr_addr_diff_in_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_wr_addr_diff_in_carry__1_CO_UNCONNECTED;
  wire [3:3]NLW_wr_addr_diff_in_carry__1_O_UNCONNECTED;
  wire [2:0]\NLW_wr_addr_reg[0]_i_2__0_CO_UNCONNECTED ;
  wire [2:0]\NLW_wr_addr_reg[4]_i_1__0_CO_UNCONNECTED ;
  wire [3:0]\NLW_wr_addr_reg[8]_i_1__0_CO_UNCONNECTED ;

  LUT6 #(
    .INIT(64'hD0D0D0D0D0FFD0D0)) 
    \FSM_onehot_rd_state[0]_i_1 
       (.I0(frame_in_fifo),
        .I1(rx_axis_fifo_tlast_int_reg_0),
        .I2(\FSM_onehot_rd_state_reg_n_0_[0] ),
        .I3(mem_reg_0),
        .I4(rx_axis_fifo_tlast_int),
        .I5(rd_valid_pipe),
        .O(\FSM_onehot_rd_state[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h20)) 
    \FSM_onehot_rd_state[1]_i_1 
       (.I0(\FSM_onehot_rd_state_reg_n_0_[0] ),
        .I1(rx_axis_fifo_tlast_int_reg_0),
        .I2(frame_in_fifo),
        .O(\FSM_onehot_rd_state[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFE020202)) 
    \FSM_onehot_rd_state[7]_i_1 
       (.I0(\FSM_onehot_rd_state_reg_n_0_[7] ),
        .I1(gen_tx_data_IBUF),
        .I2(mux_tready),
        .I3(rx_axis_fifo_tlast_int),
        .I4(rd_valid_pipe),
        .O(\FSM_onehot_rd_state[7]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "QUEUE2_s:00000100,QUEUE3_s:00001000,QUEUE_SOF_s:00010000,QUEUE1_s:00000010,DATA_s:00100000,EOF_s:01000000,WAIT_s:00000001,SOF_s:10000000" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_rd_state_reg[0] 
       (.C(userclk2_out),
        .CE(1'b1),
        .D(\FSM_onehot_rd_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_rd_state_reg_n_0_[0] ),
        .S(mem_reg));
  (* FSM_ENCODED_STATES = "QUEUE2_s:00000100,QUEUE3_s:00001000,QUEUE_SOF_s:00010000,QUEUE1_s:00000010,DATA_s:00100000,EOF_s:01000000,WAIT_s:00000001,SOF_s:10000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_rd_state_reg[1] 
       (.C(userclk2_out),
        .CE(1'b1),
        .D(\FSM_onehot_rd_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_rd_state_reg_n_0_[1] ),
        .R(mem_reg));
  (* FSM_ENCODED_STATES = "QUEUE2_s:00000100,QUEUE3_s:00001000,QUEUE_SOF_s:00010000,QUEUE1_s:00000010,DATA_s:00100000,EOF_s:01000000,WAIT_s:00000001,SOF_s:10000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_rd_state_reg[2] 
       (.C(userclk2_out),
        .CE(1'b1),
        .D(\FSM_onehot_rd_state_reg_n_0_[1] ),
        .Q(\FSM_onehot_rd_state_reg_n_0_[2] ),
        .R(mem_reg));
  (* FSM_ENCODED_STATES = "QUEUE2_s:00000100,QUEUE3_s:00001000,QUEUE_SOF_s:00010000,QUEUE1_s:00000010,DATA_s:00100000,EOF_s:01000000,WAIT_s:00000001,SOF_s:10000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_rd_state_reg[3] 
       (.C(userclk2_out),
        .CE(1'b1),
        .D(\FSM_onehot_rd_state_reg_n_0_[2] ),
        .Q(\FSM_onehot_rd_state_reg_n_0_[3] ),
        .R(mem_reg));
  (* FSM_ENCODED_STATES = "QUEUE2_s:00000100,QUEUE3_s:00001000,QUEUE_SOF_s:00010000,QUEUE1_s:00000010,DATA_s:00100000,EOF_s:01000000,WAIT_s:00000001,SOF_s:10000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_rd_state_reg[4] 
       (.C(userclk2_out),
        .CE(1'b1),
        .D(\FSM_onehot_rd_state_reg_n_0_[3] ),
        .Q(rd_pull_frame06_out),
        .R(mem_reg));
  (* FSM_ENCODED_STATES = "QUEUE2_s:00000100,QUEUE3_s:00001000,QUEUE_SOF_s:00010000,QUEUE1_s:00000010,DATA_s:00100000,EOF_s:01000000,WAIT_s:00000001,SOF_s:10000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_rd_state_reg[5] 
       (.C(userclk2_out),
        .CE(1'b1),
        .D(rx_ramgen_i_n_3),
        .Q(\FSM_onehot_rd_state_reg_n_0_[5] ),
        .R(mem_reg));
  (* FSM_ENCODED_STATES = "QUEUE2_s:00000100,QUEUE3_s:00001000,QUEUE_SOF_s:00010000,QUEUE1_s:00000010,DATA_s:00100000,EOF_s:01000000,WAIT_s:00000001,SOF_s:10000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_rd_state_reg[6] 
       (.C(userclk2_out),
        .CE(1'b1),
        .D(rx_ramgen_i_n_2),
        .Q(rx_axis_fifo_tlast_int),
        .R(mem_reg));
  (* FSM_ENCODED_STATES = "QUEUE2_s:00000100,QUEUE3_s:00001000,QUEUE_SOF_s:00010000,QUEUE1_s:00000010,DATA_s:00100000,EOF_s:01000000,WAIT_s:00000001,SOF_s:10000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_rd_state_reg[7] 
       (.C(userclk2_out),
        .CE(1'b1),
        .D(\FSM_onehot_rd_state[7]_i_1_n_0 ),
        .Q(\FSM_onehot_rd_state_reg_n_0_[7] ),
        .R(mem_reg));
  LUT6 #(
    .INIT(64'hEEFEEEFEFFFFEEFE)) 
    \FSM_onehot_wr_state[0]_i_1 
       (.I0(\FSM_onehot_wr_state_reg_n_0_[4] ),
        .I1(wr_store_frame_tog),
        .I2(wr_start_addr_load),
        .I3(\wr_dv_pipe_reg[1]__0 ),
        .I4(\FSM_onehot_wr_state_reg_n_0_[2] ),
        .I5(\FSM_onehot_wr_state[0]_i_2_n_0 ),
        .O(\FSM_onehot_wr_state[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \FSM_onehot_wr_state[0]_i_2 
       (.I0(wr_gf),
        .I1(wr_bf),
        .O(\FSM_onehot_wr_state[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8888888F88888888)) 
    \FSM_onehot_wr_state[1]_i_1 
       (.I0(\wr_dv_pipe_reg[1]__0 ),
        .I1(wr_start_addr_load),
        .I2(wr_bf),
        .I3(wr_gf),
        .I4(wr_fifo_full),
        .I5(\FSM_onehot_wr_state_reg_n_0_[1] ),
        .O(\FSM_onehot_wr_state[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT5 #(
    .INIT(32'h888F8888)) 
    \FSM_onehot_wr_state[2]_i_1 
       (.I0(wr_fifo_full),
        .I1(\FSM_onehot_wr_state_reg_n_0_[1] ),
        .I2(wr_gf),
        .I3(wr_bf),
        .I4(\FSM_onehot_wr_state_reg_n_0_[2] ),
        .O(\FSM_onehot_wr_state[2]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h20)) 
    \FSM_onehot_wr_state[3]_i_1 
       (.I0(\FSM_onehot_wr_state_reg_n_0_[1] ),
        .I1(wr_fifo_full),
        .I2(wr_gf),
        .O(\FSM_onehot_wr_state[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \FSM_onehot_wr_state[4]_i_1 
       (.I0(\FSM_onehot_wr_state_reg_n_0_[1] ),
        .I1(wr_fifo_full),
        .I2(wr_bf),
        .I3(wr_gf),
        .O(\FSM_onehot_wr_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "GF_s:01000,FRAME_s:00010,BF_s:10000,OVFLOW_s:00100,IDLE_s:00001" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_wr_state_reg[0] 
       (.C(rx_mac_aclk),
        .CE(1'b1),
        .D(\FSM_onehot_wr_state[0]_i_1_n_0 ),
        .Q(wr_start_addr_load),
        .S(reset_out));
  (* FSM_ENCODED_STATES = "GF_s:01000,FRAME_s:00010,BF_s:10000,OVFLOW_s:00100,IDLE_s:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_wr_state_reg[1] 
       (.C(rx_mac_aclk),
        .CE(1'b1),
        .D(\FSM_onehot_wr_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_wr_state_reg_n_0_[1] ),
        .R(reset_out));
  (* FSM_ENCODED_STATES = "GF_s:01000,FRAME_s:00010,BF_s:10000,OVFLOW_s:00100,IDLE_s:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_wr_state_reg[2] 
       (.C(rx_mac_aclk),
        .CE(1'b1),
        .D(\FSM_onehot_wr_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_wr_state_reg_n_0_[2] ),
        .R(reset_out));
  (* FSM_ENCODED_STATES = "GF_s:01000,FRAME_s:00010,BF_s:10000,OVFLOW_s:00100,IDLE_s:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_wr_state_reg[3] 
       (.C(rx_mac_aclk),
        .CE(1'b1),
        .D(\FSM_onehot_wr_state[3]_i_1_n_0 ),
        .Q(wr_store_frame_tog),
        .R(reset_out));
  (* FSM_ENCODED_STATES = "GF_s:01000,FRAME_s:00010,BF_s:10000,OVFLOW_s:00100,IDLE_s:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_wr_state_reg[4] 
       (.C(rx_mac_aclk),
        .CE(1'b1),
        .D(\FSM_onehot_wr_state[4]_i_1_n_0 ),
        .Q(\FSM_onehot_wr_state_reg_n_0_[4] ),
        .R(reset_out));
  LUT4 #(
    .INIT(16'hFFFE)) 
    frame_in_fifo_i_1
       (.I0(\rd_frames_reg[6]_0 [3]),
        .I1(\rd_frames_reg[6]_0 [0]),
        .I2(\rd_frames_reg[6]_0 [1]),
        .I3(frame_in_fifo_i_2_n_0),
        .O(frame_in_fifo_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    frame_in_fifo_i_2
       (.I0(rd_frames_reg[8]),
        .I1(rd_frames_reg[7]),
        .I2(\rd_frames_reg[3]_0 [3]),
        .I3(\rd_frames_reg[6]_0 [2]),
        .I4(\rd_frames_reg[3]_0 [1]),
        .I5(\rd_frames_reg[3]_0 [2]),
        .O(frame_in_fifo_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    frame_in_fifo_reg
       (.C(userclk2_out),
        .CE(1'b1),
        .D(frame_in_fifo_i_1_n_0),
        .Q(frame_in_fifo),
        .R(mem_reg));
  FDRE #(
    .INIT(1'b0)) 
    \old_rd_addr_reg[0] 
       (.C(userclk2_out),
        .CE(1'b1),
        .D(p_0_in[0]),
        .Q(old_rd_addr[0]),
        .R(mem_reg));
  FDRE #(
    .INIT(1'b0)) 
    \old_rd_addr_reg[1] 
       (.C(userclk2_out),
        .CE(1'b1),
        .D(p_0_in[1]),
        .Q(old_rd_addr[1]),
        .R(mem_reg));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out__21_carry__0_i_1
       (.I0(rd_frames_reg[7]),
        .I1(rd_frames_reg[8]),
        .O(\rd_frames_reg[7]_0 [3]));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out__21_carry__0_i_2
       (.I0(\rd_frames_reg[6]_0 [3]),
        .I1(rd_frames_reg[7]),
        .O(\rd_frames_reg[7]_0 [2]));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out__21_carry__0_i_3
       (.I0(\rd_frames_reg[6]_0 [2]),
        .I1(\rd_frames_reg[6]_0 [3]),
        .O(\rd_frames_reg[7]_0 [1]));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out__21_carry__0_i_4
       (.I0(\rd_frames_reg[6]_0 [1]),
        .I1(\rd_frames_reg[6]_0 [2]),
        .O(\rd_frames_reg[7]_0 [0]));
  LUT1 #(
    .INIT(2'h1)) 
    p_0_out__21_carry_i_1
       (.I0(\rd_frames_reg[3]_0 [1]),
        .O(\rd_frames_reg[3]_0 [0]));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out__21_carry_i_2
       (.I0(\rd_frames_reg[3]_0 [3]),
        .I1(\rd_frames_reg[6]_0 [1]),
        .O(\rd_frames_reg[3]_1 [3]));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out__21_carry_i_3
       (.I0(\rd_frames_reg[3]_0 [2]),
        .I1(\rd_frames_reg[3]_0 [3]),
        .O(\rd_frames_reg[3]_1 [2]));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out__21_carry_i_4
       (.I0(\rd_frames_reg[3]_0 [1]),
        .I1(\rd_frames_reg[3]_0 [2]),
        .O(\rd_frames_reg[3]_1 [1]));
  LUT3 #(
    .INIT(8'h65)) 
    p_0_out__21_carry_i_5
       (.I0(\rd_frames_reg[3]_0 [1]),
        .I1(rd_pull_frame),
        .I2(rd_store_frame),
        .O(\rd_frames_reg[3]_1 [0]));
  LUT2 #(
    .INIT(4'hE)) 
    \rd_addr[0]_i_1 
       (.I0(rd_addr_reload),
        .I1(rd_en),
        .O(\rd_addr[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \rd_addr[0]_i_3 
       (.I0(rd_addr_reload),
        .I1(\rd_addr_reg_n_0_[3] ),
        .O(\rd_addr[0]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \rd_addr[0]_i_4 
       (.I0(rd_addr_reload),
        .I1(\rd_addr_reg_n_0_[2] ),
        .O(\rd_addr[0]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \rd_addr[0]_i_5 
       (.I0(\rd_addr_reg_n_0_[0] ),
        .O(\rd_addr[0]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \rd_addr[4]_i_2 
       (.I0(rd_addr_reload),
        .I1(\rd_addr_reg_n_0_[7] ),
        .O(\rd_addr[4]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \rd_addr[4]_i_3 
       (.I0(rd_addr_reload),
        .I1(\rd_addr_reg_n_0_[6] ),
        .O(\rd_addr[4]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \rd_addr[4]_i_4 
       (.I0(rd_addr_reload),
        .I1(p_0_in[1]),
        .O(\rd_addr[4]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \rd_addr[4]_i_5 
       (.I0(rd_addr_reload),
        .I1(p_0_in[0]),
        .O(\rd_addr[4]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \rd_addr[8]_i_2 
       (.I0(rd_addr_reload),
        .I1(\rd_addr_reg_n_0_[11] ),
        .O(\rd_addr[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \rd_addr[8]_i_3 
       (.I0(rd_addr_reload),
        .I1(\rd_addr_reg_n_0_[10] ),
        .O(\rd_addr[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \rd_addr[8]_i_4 
       (.I0(rd_addr_reload),
        .I1(\rd_addr_reg_n_0_[9] ),
        .O(\rd_addr[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \rd_addr[8]_i_5 
       (.I0(rd_addr_reload),
        .I1(\rd_addr_reg_n_0_[8] ),
        .O(\rd_addr[8]_i_5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_reg[0] 
       (.C(userclk2_out),
        .CE(\rd_addr[0]_i_1_n_0 ),
        .D(\rd_addr_reg[0]_i_2_n_7 ),
        .Q(\rd_addr_reg_n_0_[0] ),
        .R(mem_reg));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \rd_addr_reg[0]_i_2 
       (.CI(1'b0),
        .CO({\rd_addr_reg[0]_i_2_n_0 ,\NLW_rd_addr_reg[0]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({rd_addr_reload,rd_addr_reload,1'b0,1'b1}),
        .O({\rd_addr_reg[0]_i_2_n_4 ,\rd_addr_reg[0]_i_2_n_5 ,\rd_addr_reg[0]_i_2_n_6 ,\rd_addr_reg[0]_i_2_n_7 }),
        .S({\rd_addr[0]_i_3_n_0 ,\rd_addr[0]_i_4_n_0 ,\rd_addr_reg_n_0_[1] ,\rd_addr[0]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_reg[10] 
       (.C(userclk2_out),
        .CE(\rd_addr[0]_i_1_n_0 ),
        .D(\rd_addr_reg[8]_i_1_n_5 ),
        .Q(\rd_addr_reg_n_0_[10] ),
        .R(mem_reg));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_reg[11] 
       (.C(userclk2_out),
        .CE(\rd_addr[0]_i_1_n_0 ),
        .D(\rd_addr_reg[8]_i_1_n_4 ),
        .Q(\rd_addr_reg_n_0_[11] ),
        .R(mem_reg));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_reg[1] 
       (.C(userclk2_out),
        .CE(\rd_addr[0]_i_1_n_0 ),
        .D(\rd_addr_reg[0]_i_2_n_6 ),
        .Q(\rd_addr_reg_n_0_[1] ),
        .R(mem_reg));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_reg[2] 
       (.C(userclk2_out),
        .CE(\rd_addr[0]_i_1_n_0 ),
        .D(\rd_addr_reg[0]_i_2_n_5 ),
        .Q(\rd_addr_reg_n_0_[2] ),
        .R(mem_reg));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_reg[3] 
       (.C(userclk2_out),
        .CE(\rd_addr[0]_i_1_n_0 ),
        .D(\rd_addr_reg[0]_i_2_n_4 ),
        .Q(\rd_addr_reg_n_0_[3] ),
        .R(mem_reg));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_reg[4] 
       (.C(userclk2_out),
        .CE(\rd_addr[0]_i_1_n_0 ),
        .D(\rd_addr_reg[4]_i_1_n_7 ),
        .Q(p_0_in[0]),
        .R(mem_reg));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \rd_addr_reg[4]_i_1 
       (.CI(\rd_addr_reg[0]_i_2_n_0 ),
        .CO({\rd_addr_reg[4]_i_1_n_0 ,\NLW_rd_addr_reg[4]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({rd_addr_reload,rd_addr_reload,rd_addr_reload,rd_addr_reload}),
        .O({\rd_addr_reg[4]_i_1_n_4 ,\rd_addr_reg[4]_i_1_n_5 ,\rd_addr_reg[4]_i_1_n_6 ,\rd_addr_reg[4]_i_1_n_7 }),
        .S({\rd_addr[4]_i_2_n_0 ,\rd_addr[4]_i_3_n_0 ,\rd_addr[4]_i_4_n_0 ,\rd_addr[4]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_reg[5] 
       (.C(userclk2_out),
        .CE(\rd_addr[0]_i_1_n_0 ),
        .D(\rd_addr_reg[4]_i_1_n_6 ),
        .Q(p_0_in[1]),
        .R(mem_reg));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_reg[6] 
       (.C(userclk2_out),
        .CE(\rd_addr[0]_i_1_n_0 ),
        .D(\rd_addr_reg[4]_i_1_n_5 ),
        .Q(\rd_addr_reg_n_0_[6] ),
        .R(mem_reg));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_reg[7] 
       (.C(userclk2_out),
        .CE(\rd_addr[0]_i_1_n_0 ),
        .D(\rd_addr_reg[4]_i_1_n_4 ),
        .Q(\rd_addr_reg_n_0_[7] ),
        .R(mem_reg));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_reg[8] 
       (.C(userclk2_out),
        .CE(\rd_addr[0]_i_1_n_0 ),
        .D(\rd_addr_reg[8]_i_1_n_7 ),
        .Q(\rd_addr_reg_n_0_[8] ),
        .R(mem_reg));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \rd_addr_reg[8]_i_1 
       (.CI(\rd_addr_reg[4]_i_1_n_0 ),
        .CO(\NLW_rd_addr_reg[8]_i_1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,rd_addr_reload,rd_addr_reload,rd_addr_reload}),
        .O({\rd_addr_reg[8]_i_1_n_4 ,\rd_addr_reg[8]_i_1_n_5 ,\rd_addr_reg[8]_i_1_n_6 ,\rd_addr_reg[8]_i_1_n_7 }),
        .S({\rd_addr[8]_i_2_n_0 ,\rd_addr[8]_i_3_n_0 ,\rd_addr[8]_i_4_n_0 ,\rd_addr[8]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_reg[9] 
       (.C(userclk2_out),
        .CE(\rd_addr[0]_i_1_n_0 ),
        .D(\rd_addr_reg[8]_i_1_n_6 ),
        .Q(\rd_addr_reg_n_0_[9] ),
        .R(mem_reg));
  FDRE #(
    .INIT(1'b0)) 
    rd_addr_reload_reg
       (.C(userclk2_out),
        .CE(1'b1),
        .D(rd_addr_reload0),
        .Q(rd_addr_reload),
        .R(mem_reg));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_pipe_reg[0] 
       (.C(userclk2_out),
        .CE(rd_en),
        .D(rd_eof_data_bram[0]),
        .Q(\rd_data_pipe_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_pipe_reg[1] 
       (.C(userclk2_out),
        .CE(rd_en),
        .D(rd_eof_data_bram[1]),
        .Q(\rd_data_pipe_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_pipe_reg[2] 
       (.C(userclk2_out),
        .CE(rd_en),
        .D(rd_eof_data_bram[2]),
        .Q(\rd_data_pipe_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_pipe_reg[3] 
       (.C(userclk2_out),
        .CE(rd_en),
        .D(rd_eof_data_bram[3]),
        .Q(\rd_data_pipe_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_pipe_reg[4] 
       (.C(userclk2_out),
        .CE(rd_en),
        .D(rd_eof_data_bram[4]),
        .Q(\rd_data_pipe_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_pipe_reg[5] 
       (.C(userclk2_out),
        .CE(rd_en),
        .D(rd_eof_data_bram[5]),
        .Q(\rd_data_pipe_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_pipe_reg[6] 
       (.C(userclk2_out),
        .CE(rd_en),
        .D(rd_eof_data_bram[6]),
        .Q(\rd_data_pipe_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_pipe_reg[7] 
       (.C(userclk2_out),
        .CE(rd_en),
        .D(rd_eof_data_bram[7]),
        .Q(\rd_data_pipe_reg_n_0_[7] ),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \rd_frames[0]_i_1 
       (.I0(\rd_frames_reg[6]_0 [0]),
        .O(\rd_frames[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \rd_frames[8]_i_1 
       (.I0(rd_pull_frame),
        .I1(rd_store_frame),
        .O(\rd_frames[8]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rd_frames_reg[0] 
       (.C(userclk2_out),
        .CE(\rd_frames[8]_i_1_n_0 ),
        .D(\rd_frames[0]_i_1_n_0 ),
        .Q(\rd_frames_reg[6]_0 [0]),
        .R(mem_reg));
  FDRE #(
    .INIT(1'b0)) 
    \rd_frames_reg[1] 
       (.C(userclk2_out),
        .CE(\rd_frames[8]_i_1_n_0 ),
        .D(\rd_frames_reg[8]_0 [0]),
        .Q(\rd_frames_reg[3]_0 [1]),
        .R(mem_reg));
  FDRE #(
    .INIT(1'b0)) 
    \rd_frames_reg[2] 
       (.C(userclk2_out),
        .CE(\rd_frames[8]_i_1_n_0 ),
        .D(\rd_frames_reg[8]_0 [1]),
        .Q(\rd_frames_reg[3]_0 [2]),
        .R(mem_reg));
  FDRE #(
    .INIT(1'b0)) 
    \rd_frames_reg[3] 
       (.C(userclk2_out),
        .CE(\rd_frames[8]_i_1_n_0 ),
        .D(\rd_frames_reg[8]_0 [2]),
        .Q(\rd_frames_reg[3]_0 [3]),
        .R(mem_reg));
  FDRE #(
    .INIT(1'b0)) 
    \rd_frames_reg[4] 
       (.C(userclk2_out),
        .CE(\rd_frames[8]_i_1_n_0 ),
        .D(\rd_frames_reg[8]_0 [3]),
        .Q(\rd_frames_reg[6]_0 [1]),
        .R(mem_reg));
  FDRE #(
    .INIT(1'b0)) 
    \rd_frames_reg[5] 
       (.C(userclk2_out),
        .CE(\rd_frames[8]_i_1_n_0 ),
        .D(\rd_frames_reg[8]_0 [4]),
        .Q(\rd_frames_reg[6]_0 [2]),
        .R(mem_reg));
  FDRE #(
    .INIT(1'b0)) 
    \rd_frames_reg[6] 
       (.C(userclk2_out),
        .CE(\rd_frames[8]_i_1_n_0 ),
        .D(\rd_frames_reg[8]_0 [5]),
        .Q(\rd_frames_reg[6]_0 [3]),
        .R(mem_reg));
  FDRE #(
    .INIT(1'b0)) 
    \rd_frames_reg[7] 
       (.C(userclk2_out),
        .CE(\rd_frames[8]_i_1_n_0 ),
        .D(\rd_frames_reg[8]_0 [6]),
        .Q(rd_frames_reg[7]),
        .R(mem_reg));
  FDRE #(
    .INIT(1'b0)) 
    \rd_frames_reg[8] 
       (.C(userclk2_out),
        .CE(\rd_frames[8]_i_1_n_0 ),
        .D(\rd_frames_reg[8]_0 [7]),
        .Q(rd_frames_reg[8]),
        .R(mem_reg));
  LUT5 #(
    .INIT(32'hFFFEAAAA)) 
    rd_pull_frame_i_1
       (.I0(rd_pull_frame06_out),
        .I1(rd_pull_frame_i_2_n_0),
        .I2(rd_pull_frame_i_3_n_0),
        .I3(rx_ramgen_i_n_1),
        .I4(\FSM_onehot_rd_state_reg_n_0_[7] ),
        .O(rd_pull_frame_i_1_n_0));
  LUT6 #(
    .INIT(64'h00000000000E0F0F)) 
    rd_pull_frame_i_2
       (.I0(gen_tx_data_IBUF),
        .I1(mux_tready),
        .I2(\FSM_onehot_rd_state_reg_n_0_[3] ),
        .I3(rd_valid_pipe),
        .I4(rx_axis_fifo_tlast_int),
        .I5(rd_pull_frame_i_5_n_0),
        .O(rd_pull_frame_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFFEFFFEFFFFFFFC)) 
    rd_pull_frame_i_3
       (.I0(rx_axis_fifo_tlast_int),
        .I1(\FSM_onehot_rd_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_rd_state_reg_n_0_[2] ),
        .I3(rd_pull_frame_i_6_n_0),
        .I4(\FSM_onehot_rd_state_reg_n_0_[7] ),
        .I5(mem_reg_0),
        .O(rd_pull_frame_i_3_n_0));
  LUT3 #(
    .INIT(8'hFE)) 
    rd_pull_frame_i_5
       (.I0(\FSM_onehot_rd_state_reg_n_0_[7] ),
        .I1(\FSM_onehot_rd_state_reg_n_0_[5] ),
        .I2(rd_pull_frame06_out),
        .O(rd_pull_frame_i_5_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    rd_pull_frame_i_6
       (.I0(rd_pull_frame06_out),
        .I1(\FSM_onehot_rd_state_reg_n_0_[5] ),
        .O(rd_pull_frame_i_6_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFF202020)) 
    rd_pull_frame_i_7
       (.I0(frame_in_fifo),
        .I1(rx_axis_fifo_tlast_int_reg_0),
        .I2(\FSM_onehot_rd_state_reg_n_0_[0] ),
        .I3(rx_axis_fifo_tlast_int),
        .I4(rd_valid_pipe),
        .I5(\FSM_onehot_rd_state_reg_n_0_[2] ),
        .O(rd_pull_frame_i_7_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rd_pull_frame_reg
       (.C(userclk2_out),
        .CE(1'b1),
        .D(rd_pull_frame_i_1_n_0),
        .Q(rd_pull_frame),
        .R(mem_reg));
  FDRE #(
    .INIT(1'b0)) 
    rd_store_frame_delay_reg
       (.C(userclk2_out),
        .CE(1'b1),
        .D(rd_store_frame_sync),
        .Q(rd_store_frame_delay),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    rd_store_frame_i_1
       (.I0(rd_store_frame_sync),
        .I1(rd_store_frame_delay),
        .O(rd_store_frame0));
  FDRE #(
    .INIT(1'b0)) 
    rd_store_frame_reg
       (.C(userclk2_out),
        .CE(1'b1),
        .D(rd_store_frame0),
        .Q(rd_store_frame),
        .R(mem_reg));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \rd_valid_pipe[0]_i_1 
       (.I0(frame_in_fifo),
        .I1(mux_tready),
        .I2(gen_tx_data_IBUF),
        .I3(\rd_valid_pipe_reg_n_0_[0] ),
        .O(\rd_valid_pipe[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \rd_valid_pipe[1]_i_1 
       (.I0(\rd_valid_pipe_reg_n_0_[0] ),
        .I1(mux_tready),
        .I2(gen_tx_data_IBUF),
        .I3(rd_valid_pipe),
        .O(\rd_valid_pipe[1]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rd_valid_pipe_reg[0] 
       (.C(userclk2_out),
        .CE(1'b1),
        .D(\rd_valid_pipe[0]_i_1_n_0 ),
        .Q(\rd_valid_pipe_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_valid_pipe_reg[1] 
       (.C(userclk2_out),
        .CE(1'b1),
        .D(\rd_valid_pipe[1]_i_1_n_0 ),
        .Q(rd_valid_pipe),
        .R(1'b0));
  (* DEPTH = "5" *) 
  (* DONT_TOUCH *) 
  (* INITIALISE = "1'b0" *) 
  tri_mode_ethernet_mac_0_sync_block__9 resync_wr_store_frame_tog
       (.clk(userclk2_out),
        .data_in(wr_store_frame_tog_reg_n_0),
        .data_out(rd_store_frame_sync));
  FDRE #(
    .INIT(1'b0)) 
    \rx_axis_fifo_tdata_reg[0] 
       (.C(userclk2_out),
        .CE(rd_en),
        .D(\rd_data_pipe_reg_n_0_[0] ),
        .Q(\rx_axis_fifo_tdata_reg[7]_0 [0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_axis_fifo_tdata_reg[1] 
       (.C(userclk2_out),
        .CE(rd_en),
        .D(\rd_data_pipe_reg_n_0_[1] ),
        .Q(\rx_axis_fifo_tdata_reg[7]_0 [1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_axis_fifo_tdata_reg[2] 
       (.C(userclk2_out),
        .CE(rd_en),
        .D(\rd_data_pipe_reg_n_0_[2] ),
        .Q(\rx_axis_fifo_tdata_reg[7]_0 [2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_axis_fifo_tdata_reg[3] 
       (.C(userclk2_out),
        .CE(rd_en),
        .D(\rd_data_pipe_reg_n_0_[3] ),
        .Q(\rx_axis_fifo_tdata_reg[7]_0 [3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_axis_fifo_tdata_reg[4] 
       (.C(userclk2_out),
        .CE(rd_en),
        .D(\rd_data_pipe_reg_n_0_[4] ),
        .Q(\rx_axis_fifo_tdata_reg[7]_0 [4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_axis_fifo_tdata_reg[5] 
       (.C(userclk2_out),
        .CE(rd_en),
        .D(\rd_data_pipe_reg_n_0_[5] ),
        .Q(\rx_axis_fifo_tdata_reg[7]_0 [5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_axis_fifo_tdata_reg[6] 
       (.C(userclk2_out),
        .CE(rd_en),
        .D(\rd_data_pipe_reg_n_0_[6] ),
        .Q(\rx_axis_fifo_tdata_reg[7]_0 [6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_axis_fifo_tdata_reg[7] 
       (.C(userclk2_out),
        .CE(rd_en),
        .D(\rd_data_pipe_reg_n_0_[7] ),
        .Q(\rx_axis_fifo_tdata_reg[7]_0 [7]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hABA8)) 
    rx_axis_fifo_tlast_int_i_1
       (.I0(rx_axis_fifo_tlast_int),
        .I1(mux_tready),
        .I2(gen_tx_data_IBUF),
        .I3(rx_axis_fifo_tlast_int_reg_0),
        .O(rx_axis_fifo_tlast_int_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rx_axis_fifo_tlast_int_reg
       (.C(userclk2_out),
        .CE(1'b1),
        .D(rx_axis_fifo_tlast_int_i_1_n_0),
        .Q(rx_axis_fifo_tlast_int_reg_0),
        .R(mem_reg));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFEFFFE)) 
    rx_axis_fifo_tvalid_i_1
       (.I0(\FSM_onehot_rd_state_reg_n_0_[7] ),
        .I1(\FSM_onehot_rd_state_reg_n_0_[5] ),
        .I2(rd_pull_frame06_out),
        .I3(rx_axis_fifo_tlast_int),
        .I4(mem_reg_0),
        .I5(rx_axis_fifo_tvalid),
        .O(rx_axis_fifo_tvalid_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rx_axis_fifo_tvalid_reg
       (.C(userclk2_out),
        .CE(1'b1),
        .D(rx_axis_fifo_tvalid_i_1_n_0),
        .Q(rx_axis_fifo_tvalid),
        .R(mem_reg));
  tri_mode_ethernet_mac_0_bram_tdp_0 rx_ramgen_i
       (.D({rx_ramgen_i_n_2,rx_ramgen_i_n_3}),
        .\FSM_onehot_rd_state_reg[5] (rx_ramgen_i_n_1),
        .Q({\FSM_onehot_rd_state_reg_n_0_[7] ,rx_axis_fifo_tlast_int,\FSM_onehot_rd_state_reg_n_0_[5] ,rd_pull_frame06_out,\FSM_onehot_rd_state_reg_n_0_[3] ,\FSM_onehot_rd_state_reg_n_0_[2] ,\FSM_onehot_rd_state_reg_n_0_[1] ,\FSM_onehot_rd_state_reg_n_0_[0] }),
        .a_addr(wr_addr_reg),
        .a_din(wr_eof_data_bram),
        .b_addr({\rd_addr_reg_n_0_[11] ,\rd_addr_reg_n_0_[10] ,\rd_addr_reg_n_0_[9] ,\rd_addr_reg_n_0_[8] ,\rd_addr_reg_n_0_[7] ,\rd_addr_reg_n_0_[6] ,p_0_in,\rd_addr_reg_n_0_[3] ,\rd_addr_reg_n_0_[2] ,\rd_addr_reg_n_0_[1] ,\rd_addr_reg_n_0_[0] }),
        .b_dout(rd_eof_data_bram),
        .gen_tx_data_IBUF(gen_tx_data_IBUF),
        .mem_reg_0(mem_reg_0),
        .mem_reg_1(\FSM_onehot_wr_state_reg_n_0_[1] ),
        .mem_reg_2(\wr_dv_pipe_reg_n_0_[2] ),
        .mem_reg_3(NLW_rx_ramgen_i_mem_reg_3_UNCONNECTED[0]),
        .mux_tready(mux_tready),
        .rd_addr_reload0(rd_addr_reload0),
        .rd_addr_reload_reg(rd_pull_frame_i_3_n_0),
        .rd_addr_reload_reg_0(rd_pull_frame_i_2_n_0),
        .rd_addr_reload_reg_1(rd_pull_frame_i_7_n_0),
        .rd_en(rd_en),
        .reset_out(reset_out),
        .rx_fifo_resetn(rx_fifo_resetn),
        .rx_mac_aclk(rx_mac_aclk),
        .userclk2_out(userclk2_out));
  (* DEPTH = "5" *) 
  (* DONT_TOUCH *) 
  (* INITIALISE = "1'b0" *) 
  tri_mode_ethernet_mac_0_sync_block sync_rd_addr_tog
       (.clk(rx_mac_aclk),
        .data_in(update_addr_tog),
        .data_out(update_addr_tog_sync));
  LUT5 #(
    .INIT(32'hEFFF1000)) 
    update_addr_tog_i_1
       (.I0(p_0_in[0]),
        .I1(old_rd_addr[1]),
        .I2(p_0_in[1]),
        .I3(old_rd_addr[0]),
        .I4(update_addr_tog),
        .O(update_addr_tog_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    update_addr_tog_reg
       (.C(userclk2_out),
        .CE(1'b1),
        .D(update_addr_tog_i_1_n_0),
        .Q(update_addr_tog),
        .R(mem_reg));
  FDRE #(
    .INIT(1'b0)) 
    update_addr_tog_sync_reg_reg
       (.C(rx_mac_aclk),
        .CE(1'b1),
        .D(update_addr_tog_sync),
        .Q(update_addr_tog_sync_reg),
        .R(reset_out));
  LUT4 #(
    .INIT(16'hFEEE)) 
    \wr_addr[0]_i_1__1 
       (.I0(\FSM_onehot_wr_state_reg_n_0_[2] ),
        .I1(\FSM_onehot_wr_state_reg_n_0_[4] ),
        .I2(\wr_dv_pipe_reg_n_0_[2] ),
        .I3(\FSM_onehot_wr_state_reg_n_0_[1] ),
        .O(\wr_addr[0]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hABA8)) 
    \wr_addr[0]_i_3__0 
       (.I0(\wr_start_addr_reg_n_0_[0] ),
        .I1(\FSM_onehot_wr_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_wr_state_reg_n_0_[2] ),
        .I3(wr_addr_reg[0]),
        .O(\wr_addr[0]_i_3__0_n_0 ));
  LUT4 #(
    .INIT(16'hABA8)) 
    \wr_addr[0]_i_4__0 
       (.I0(\wr_start_addr_reg_n_0_[3] ),
        .I1(\FSM_onehot_wr_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_wr_state_reg_n_0_[2] ),
        .I3(wr_addr_reg[3]),
        .O(\wr_addr[0]_i_4__0_n_0 ));
  LUT4 #(
    .INIT(16'hABA8)) 
    \wr_addr[0]_i_5__0 
       (.I0(\wr_start_addr_reg_n_0_[2] ),
        .I1(\FSM_onehot_wr_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_wr_state_reg_n_0_[2] ),
        .I3(wr_addr_reg[2]),
        .O(\wr_addr[0]_i_5__0_n_0 ));
  LUT4 #(
    .INIT(16'hABA8)) 
    \wr_addr[0]_i_6__0 
       (.I0(\wr_start_addr_reg_n_0_[1] ),
        .I1(\FSM_onehot_wr_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_wr_state_reg_n_0_[2] ),
        .I3(wr_addr_reg[1]),
        .O(\wr_addr[0]_i_6__0_n_0 ));
  LUT4 #(
    .INIT(16'hCCC5)) 
    \wr_addr[0]_i_7__0 
       (.I0(wr_addr_reg[0]),
        .I1(\wr_start_addr_reg_n_0_[0] ),
        .I2(\FSM_onehot_wr_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_wr_state_reg_n_0_[4] ),
        .O(\wr_addr[0]_i_7__0_n_0 ));
  LUT4 #(
    .INIT(16'hABA8)) 
    \wr_addr[4]_i_2__0 
       (.I0(\wr_start_addr_reg_n_0_[7] ),
        .I1(\FSM_onehot_wr_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_wr_state_reg_n_0_[2] ),
        .I3(wr_addr_reg[7]),
        .O(\wr_addr[4]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'hABA8)) 
    \wr_addr[4]_i_3__0 
       (.I0(\wr_start_addr_reg_n_0_[6] ),
        .I1(\FSM_onehot_wr_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_wr_state_reg_n_0_[2] ),
        .I3(wr_addr_reg[6]),
        .O(\wr_addr[4]_i_3__0_n_0 ));
  LUT4 #(
    .INIT(16'hABA8)) 
    \wr_addr[4]_i_4__0 
       (.I0(\wr_start_addr_reg_n_0_[5] ),
        .I1(\FSM_onehot_wr_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_wr_state_reg_n_0_[2] ),
        .I3(wr_addr_reg[5]),
        .O(\wr_addr[4]_i_4__0_n_0 ));
  LUT4 #(
    .INIT(16'hABA8)) 
    \wr_addr[4]_i_5__0 
       (.I0(\wr_start_addr_reg_n_0_[4] ),
        .I1(\FSM_onehot_wr_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_wr_state_reg_n_0_[2] ),
        .I3(wr_addr_reg[4]),
        .O(\wr_addr[4]_i_5__0_n_0 ));
  LUT4 #(
    .INIT(16'hABA8)) 
    \wr_addr[8]_i_2__0 
       (.I0(\wr_start_addr_reg_n_0_[11] ),
        .I1(\FSM_onehot_wr_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_wr_state_reg_n_0_[2] ),
        .I3(wr_addr_reg[11]),
        .O(\wr_addr[8]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'hABA8)) 
    \wr_addr[8]_i_3__0 
       (.I0(\wr_start_addr_reg_n_0_[10] ),
        .I1(\FSM_onehot_wr_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_wr_state_reg_n_0_[2] ),
        .I3(wr_addr_reg[10]),
        .O(\wr_addr[8]_i_3__0_n_0 ));
  LUT4 #(
    .INIT(16'hABA8)) 
    \wr_addr[8]_i_4__0 
       (.I0(\wr_start_addr_reg_n_0_[9] ),
        .I1(\FSM_onehot_wr_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_wr_state_reg_n_0_[2] ),
        .I3(wr_addr_reg[9]),
        .O(\wr_addr[8]_i_4__0_n_0 ));
  LUT4 #(
    .INIT(16'hABA8)) 
    \wr_addr[8]_i_5__0 
       (.I0(\wr_start_addr_reg_n_0_[8] ),
        .I1(\FSM_onehot_wr_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_wr_state_reg_n_0_[2] ),
        .I3(wr_addr_reg[8]),
        .O(\wr_addr[8]_i_5__0_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 wr_addr_diff_in_carry
       (.CI(1'b0),
        .CO({wr_addr_diff_in_carry_n_0,NLW_wr_addr_diff_in_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(wr_addr_diff_in_carry_i_1_n_0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({wr_addr_diff_in[4:2],NLW_wr_addr_diff_in_carry_O_UNCONNECTED[0]}),
        .S({wr_addr_diff_in_carry_i_2_n_0,wr_addr_diff_in_carry_i_3_n_0,wr_addr_diff_in_carry_i_4_n_0,wr_addr_diff_in_carry_i_5_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 wr_addr_diff_in_carry__0
       (.CI(wr_addr_diff_in_carry_n_0),
        .CO({wr_addr_diff_in_carry__0_n_0,NLW_wr_addr_diff_in_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({p_0_in1_in[8:6],1'b0}),
        .O(wr_addr_diff_in[8:5]),
        .S({wr_addr_diff_in_carry__0_i_1_n_0,wr_addr_diff_in_carry__0_i_2_n_0,wr_addr_diff_in_carry__0_i_3_n_0,wr_addr_diff_in_carry__0_i_4_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    wr_addr_diff_in_carry__0_i_1
       (.I0(p_0_in1_in[8]),
        .I1(wr_addr_reg[8]),
        .O(wr_addr_diff_in_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    wr_addr_diff_in_carry__0_i_2
       (.I0(p_0_in1_in[7]),
        .I1(wr_addr_reg[7]),
        .O(wr_addr_diff_in_carry__0_i_2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    wr_addr_diff_in_carry__0_i_3
       (.I0(p_0_in1_in[6]),
        .I1(wr_addr_reg[6]),
        .O(wr_addr_diff_in_carry__0_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    wr_addr_diff_in_carry__0_i_4
       (.I0(wr_addr_reg[5]),
        .O(wr_addr_diff_in_carry__0_i_4_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 wr_addr_diff_in_carry__1
       (.CI(wr_addr_diff_in_carry__0_n_0),
        .CO(NLW_wr_addr_diff_in_carry__1_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,p_0_in1_in[10:9]}),
        .O({NLW_wr_addr_diff_in_carry__1_O_UNCONNECTED[3],wr_addr_diff_in[11:9]}),
        .S({1'b0,wr_addr_diff_in_carry__1_i_1_n_0,wr_addr_diff_in_carry__1_i_2_n_0,wr_addr_diff_in_carry__1_i_3_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    wr_addr_diff_in_carry__1_i_1
       (.I0(p_0_in1_in[11]),
        .I1(wr_addr_reg[11]),
        .O(wr_addr_diff_in_carry__1_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    wr_addr_diff_in_carry__1_i_2
       (.I0(p_0_in1_in[10]),
        .I1(wr_addr_reg[10]),
        .O(wr_addr_diff_in_carry__1_i_2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    wr_addr_diff_in_carry__1_i_3
       (.I0(p_0_in1_in[9]),
        .I1(wr_addr_reg[9]),
        .O(wr_addr_diff_in_carry__1_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    wr_addr_diff_in_carry_i_1
       (.I0(wr_addr_reg[0]),
        .O(wr_addr_diff_in_carry_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    wr_addr_diff_in_carry_i_2
       (.I0(wr_addr_reg[4]),
        .O(wr_addr_diff_in_carry_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    wr_addr_diff_in_carry_i_3
       (.I0(wr_addr_reg[3]),
        .O(wr_addr_diff_in_carry_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    wr_addr_diff_in_carry_i_4
       (.I0(wr_addr_reg[2]),
        .O(wr_addr_diff_in_carry_i_4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    wr_addr_diff_in_carry_i_5
       (.I0(wr_addr_reg[1]),
        .O(wr_addr_diff_in_carry_i_5_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_diff_reg[10] 
       (.C(rx_mac_aclk),
        .CE(1'b1),
        .D(wr_addr_diff_in[10]),
        .Q(p_2_in),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_diff_reg[11] 
       (.C(rx_mac_aclk),
        .CE(1'b1),
        .D(wr_addr_diff_in[11]),
        .Q(\wr_addr_diff_reg_n_0_[11] ),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_diff_reg[2] 
       (.C(rx_mac_aclk),
        .CE(1'b1),
        .D(wr_addr_diff_in[2]),
        .Q(\wr_addr_diff_reg_n_0_[2] ),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_diff_reg[3] 
       (.C(rx_mac_aclk),
        .CE(1'b1),
        .D(wr_addr_diff_in[3]),
        .Q(\wr_addr_diff_reg_n_0_[3] ),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_diff_reg[4] 
       (.C(rx_mac_aclk),
        .CE(1'b1),
        .D(wr_addr_diff_in[4]),
        .Q(\wr_addr_diff_reg_n_0_[4] ),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_diff_reg[5] 
       (.C(rx_mac_aclk),
        .CE(1'b1),
        .D(wr_addr_diff_in[5]),
        .Q(\wr_addr_diff_reg_n_0_[5] ),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_diff_reg[6] 
       (.C(rx_mac_aclk),
        .CE(1'b1),
        .D(wr_addr_diff_in[6]),
        .Q(\wr_addr_diff_reg_n_0_[6] ),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_diff_reg[7] 
       (.C(rx_mac_aclk),
        .CE(1'b1),
        .D(wr_addr_diff_in[7]),
        .Q(\wr_addr_diff_reg_n_0_[7] ),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_diff_reg[8] 
       (.C(rx_mac_aclk),
        .CE(1'b1),
        .D(wr_addr_diff_in[8]),
        .Q(\wr_addr_diff_reg_n_0_[8] ),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_diff_reg[9] 
       (.C(rx_mac_aclk),
        .CE(1'b1),
        .D(wr_addr_diff_in[9]),
        .Q(p_1_in),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_reg[0] 
       (.C(rx_mac_aclk),
        .CE(\wr_addr[0]_i_1__1_n_0 ),
        .D(\wr_addr_reg[0]_i_2__0_n_7 ),
        .Q(wr_addr_reg[0]),
        .R(reset_out));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \wr_addr_reg[0]_i_2__0 
       (.CI(1'b0),
        .CO({\wr_addr_reg[0]_i_2__0_n_0 ,\NLW_wr_addr_reg[0]_i_2__0_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,\wr_addr[0]_i_3__0_n_0 }),
        .O({\wr_addr_reg[0]_i_2__0_n_4 ,\wr_addr_reg[0]_i_2__0_n_5 ,\wr_addr_reg[0]_i_2__0_n_6 ,\wr_addr_reg[0]_i_2__0_n_7 }),
        .S({\wr_addr[0]_i_4__0_n_0 ,\wr_addr[0]_i_5__0_n_0 ,\wr_addr[0]_i_6__0_n_0 ,\wr_addr[0]_i_7__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_reg[10] 
       (.C(rx_mac_aclk),
        .CE(\wr_addr[0]_i_1__1_n_0 ),
        .D(\wr_addr_reg[8]_i_1__0_n_5 ),
        .Q(wr_addr_reg[10]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_reg[11] 
       (.C(rx_mac_aclk),
        .CE(\wr_addr[0]_i_1__1_n_0 ),
        .D(\wr_addr_reg[8]_i_1__0_n_4 ),
        .Q(wr_addr_reg[11]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_reg[1] 
       (.C(rx_mac_aclk),
        .CE(\wr_addr[0]_i_1__1_n_0 ),
        .D(\wr_addr_reg[0]_i_2__0_n_6 ),
        .Q(wr_addr_reg[1]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_reg[2] 
       (.C(rx_mac_aclk),
        .CE(\wr_addr[0]_i_1__1_n_0 ),
        .D(\wr_addr_reg[0]_i_2__0_n_5 ),
        .Q(wr_addr_reg[2]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_reg[3] 
       (.C(rx_mac_aclk),
        .CE(\wr_addr[0]_i_1__1_n_0 ),
        .D(\wr_addr_reg[0]_i_2__0_n_4 ),
        .Q(wr_addr_reg[3]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_reg[4] 
       (.C(rx_mac_aclk),
        .CE(\wr_addr[0]_i_1__1_n_0 ),
        .D(\wr_addr_reg[4]_i_1__0_n_7 ),
        .Q(wr_addr_reg[4]),
        .R(reset_out));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \wr_addr_reg[4]_i_1__0 
       (.CI(\wr_addr_reg[0]_i_2__0_n_0 ),
        .CO({\wr_addr_reg[4]_i_1__0_n_0 ,\NLW_wr_addr_reg[4]_i_1__0_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\wr_addr_reg[4]_i_1__0_n_4 ,\wr_addr_reg[4]_i_1__0_n_5 ,\wr_addr_reg[4]_i_1__0_n_6 ,\wr_addr_reg[4]_i_1__0_n_7 }),
        .S({\wr_addr[4]_i_2__0_n_0 ,\wr_addr[4]_i_3__0_n_0 ,\wr_addr[4]_i_4__0_n_0 ,\wr_addr[4]_i_5__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_reg[5] 
       (.C(rx_mac_aclk),
        .CE(\wr_addr[0]_i_1__1_n_0 ),
        .D(\wr_addr_reg[4]_i_1__0_n_6 ),
        .Q(wr_addr_reg[5]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_reg[6] 
       (.C(rx_mac_aclk),
        .CE(\wr_addr[0]_i_1__1_n_0 ),
        .D(\wr_addr_reg[4]_i_1__0_n_5 ),
        .Q(wr_addr_reg[6]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_reg[7] 
       (.C(rx_mac_aclk),
        .CE(\wr_addr[0]_i_1__1_n_0 ),
        .D(\wr_addr_reg[4]_i_1__0_n_4 ),
        .Q(wr_addr_reg[7]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_reg[8] 
       (.C(rx_mac_aclk),
        .CE(\wr_addr[0]_i_1__1_n_0 ),
        .D(\wr_addr_reg[8]_i_1__0_n_7 ),
        .Q(wr_addr_reg[8]),
        .R(reset_out));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \wr_addr_reg[8]_i_1__0 
       (.CI(\wr_addr_reg[4]_i_1__0_n_0 ),
        .CO(\NLW_wr_addr_reg[8]_i_1__0_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\wr_addr_reg[8]_i_1__0_n_4 ,\wr_addr_reg[8]_i_1__0_n_5 ,\wr_addr_reg[8]_i_1__0_n_6 ,\wr_addr_reg[8]_i_1__0_n_7 }),
        .S({\wr_addr[8]_i_2__0_n_0 ,\wr_addr[8]_i_3__0_n_0 ,\wr_addr[8]_i_4__0_n_0 ,\wr_addr[8]_i_5__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_reg[9] 
       (.C(rx_mac_aclk),
        .CE(\wr_addr[0]_i_1__1_n_0 ),
        .D(\wr_addr_reg[8]_i_1__0_n_6 ),
        .Q(wr_addr_reg[9]),
        .R(reset_out));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT3 #(
    .INIT(8'h80)) 
    wr_bf_i_1
       (.I0(\wr_eof_bram_pipe_reg[1]__0 ),
        .I1(\wr_dv_pipe_reg[1]__0 ),
        .I2(\wr_gfbf_pipe_reg[1]__0 ),
        .O(wr_bf0));
  FDRE #(
    .INIT(1'b0)) 
    wr_bf_reg
       (.C(rx_mac_aclk),
        .CE(1'b1),
        .D(wr_bf0),
        .Q(wr_bf),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_bram_reg[0] 
       (.C(rx_mac_aclk),
        .CE(1'b1),
        .D(\wr_data_pipe_reg[1][0]_srl2_n_0 ),
        .Q(wr_eof_data_bram[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_bram_reg[1] 
       (.C(rx_mac_aclk),
        .CE(1'b1),
        .D(\wr_data_pipe_reg[1][1]_srl2_n_0 ),
        .Q(wr_eof_data_bram[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_bram_reg[2] 
       (.C(rx_mac_aclk),
        .CE(1'b1),
        .D(\wr_data_pipe_reg[1][2]_srl2_n_0 ),
        .Q(wr_eof_data_bram[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_bram_reg[3] 
       (.C(rx_mac_aclk),
        .CE(1'b1),
        .D(\wr_data_pipe_reg[1][3]_srl2_n_0 ),
        .Q(wr_eof_data_bram[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_bram_reg[4] 
       (.C(rx_mac_aclk),
        .CE(1'b1),
        .D(\wr_data_pipe_reg[1][4]_srl2_n_0 ),
        .Q(wr_eof_data_bram[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_bram_reg[5] 
       (.C(rx_mac_aclk),
        .CE(1'b1),
        .D(\wr_data_pipe_reg[1][5]_srl2_n_0 ),
        .Q(wr_eof_data_bram[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_bram_reg[6] 
       (.C(rx_mac_aclk),
        .CE(1'b1),
        .D(\wr_data_pipe_reg[1][6]_srl2_n_0 ),
        .Q(wr_eof_data_bram[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_bram_reg[7] 
       (.C(rx_mac_aclk),
        .CE(1'b1),
        .D(\wr_data_pipe_reg[1][7]_srl2_n_0 ),
        .Q(wr_eof_data_bram[7]),
        .R(1'b0));
  (* srl_bus_name = "\trimac_fifo_block/user_side_FIFO/rx_fifo_i/wr_data_pipe_reg[1] " *) 
  (* srl_name = "\trimac_fifo_block/user_side_FIFO/rx_fifo_i/wr_data_pipe_reg[1][0]_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wr_data_pipe_reg[1][0]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(rx_mac_aclk),
        .D(rx_axis_mac_tdata[0]),
        .Q(\wr_data_pipe_reg[1][0]_srl2_n_0 ));
  (* srl_bus_name = "\trimac_fifo_block/user_side_FIFO/rx_fifo_i/wr_data_pipe_reg[1] " *) 
  (* srl_name = "\trimac_fifo_block/user_side_FIFO/rx_fifo_i/wr_data_pipe_reg[1][1]_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wr_data_pipe_reg[1][1]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(rx_mac_aclk),
        .D(rx_axis_mac_tdata[1]),
        .Q(\wr_data_pipe_reg[1][1]_srl2_n_0 ));
  (* srl_bus_name = "\trimac_fifo_block/user_side_FIFO/rx_fifo_i/wr_data_pipe_reg[1] " *) 
  (* srl_name = "\trimac_fifo_block/user_side_FIFO/rx_fifo_i/wr_data_pipe_reg[1][2]_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wr_data_pipe_reg[1][2]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(rx_mac_aclk),
        .D(rx_axis_mac_tdata[2]),
        .Q(\wr_data_pipe_reg[1][2]_srl2_n_0 ));
  (* srl_bus_name = "\trimac_fifo_block/user_side_FIFO/rx_fifo_i/wr_data_pipe_reg[1] " *) 
  (* srl_name = "\trimac_fifo_block/user_side_FIFO/rx_fifo_i/wr_data_pipe_reg[1][3]_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wr_data_pipe_reg[1][3]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(rx_mac_aclk),
        .D(rx_axis_mac_tdata[3]),
        .Q(\wr_data_pipe_reg[1][3]_srl2_n_0 ));
  (* srl_bus_name = "\trimac_fifo_block/user_side_FIFO/rx_fifo_i/wr_data_pipe_reg[1] " *) 
  (* srl_name = "\trimac_fifo_block/user_side_FIFO/rx_fifo_i/wr_data_pipe_reg[1][4]_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wr_data_pipe_reg[1][4]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(rx_mac_aclk),
        .D(rx_axis_mac_tdata[4]),
        .Q(\wr_data_pipe_reg[1][4]_srl2_n_0 ));
  (* srl_bus_name = "\trimac_fifo_block/user_side_FIFO/rx_fifo_i/wr_data_pipe_reg[1] " *) 
  (* srl_name = "\trimac_fifo_block/user_side_FIFO/rx_fifo_i/wr_data_pipe_reg[1][5]_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wr_data_pipe_reg[1][5]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(rx_mac_aclk),
        .D(rx_axis_mac_tdata[5]),
        .Q(\wr_data_pipe_reg[1][5]_srl2_n_0 ));
  (* srl_bus_name = "\trimac_fifo_block/user_side_FIFO/rx_fifo_i/wr_data_pipe_reg[1] " *) 
  (* srl_name = "\trimac_fifo_block/user_side_FIFO/rx_fifo_i/wr_data_pipe_reg[1][6]_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wr_data_pipe_reg[1][6]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(rx_mac_aclk),
        .D(rx_axis_mac_tdata[6]),
        .Q(\wr_data_pipe_reg[1][6]_srl2_n_0 ));
  (* srl_bus_name = "\trimac_fifo_block/user_side_FIFO/rx_fifo_i/wr_data_pipe_reg[1] " *) 
  (* srl_name = "\trimac_fifo_block/user_side_FIFO/rx_fifo_i/wr_data_pipe_reg[1][7]_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wr_data_pipe_reg[1][7]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(rx_mac_aclk),
        .D(rx_axis_mac_tdata[7]),
        .Q(\wr_data_pipe_reg[1][7]_srl2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_dv_pipe_reg[0] 
       (.C(rx_mac_aclk),
        .CE(1'b1),
        .D(rx_axis_mac_tvalid),
        .Q(\wr_dv_pipe_reg[0]_5 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_dv_pipe_reg[1] 
       (.C(rx_mac_aclk),
        .CE(1'b1),
        .D(\wr_dv_pipe_reg[0]_5 ),
        .Q(\wr_dv_pipe_reg[1]__0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_dv_pipe_reg[2] 
       (.C(rx_mac_aclk),
        .CE(1'b1),
        .D(\wr_dv_pipe_reg[1]__0 ),
        .Q(\wr_dv_pipe_reg_n_0_[2] ),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    wr_eof_bram_i_1
       (.I0(\wr_dv_pipe_reg[1]__0 ),
        .I1(\wr_eof_bram_pipe_reg[1]__0 ),
        .O(wr_eof_bram0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_eof_bram_pipe_reg[0] 
       (.C(rx_mac_aclk),
        .CE(1'b1),
        .D(rx_axis_mac_tlast),
        .Q(\wr_eof_bram_pipe_reg[0]_7 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_eof_bram_pipe_reg[1] 
       (.C(rx_mac_aclk),
        .CE(1'b1),
        .D(\wr_eof_bram_pipe_reg[0]_7 ),
        .Q(\wr_eof_bram_pipe_reg[1]__0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    wr_eof_bram_reg
       (.C(rx_mac_aclk),
        .CE(1'b1),
        .D(wr_eof_bram0),
        .Q(wr_eof_data_bram[8]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h00000010)) 
    wr_fifo_full_i_1
       (.I0(p_2_in),
        .I1(\wr_addr_diff_reg_n_0_[8] ),
        .I2(wr_fifo_full_i_2_n_0),
        .I3(p_1_in),
        .I4(\wr_addr_diff_reg_n_0_[11] ),
        .O(wr_fifo_full0));
  LUT6 #(
    .INIT(64'h0000000000001110)) 
    wr_fifo_full_i_2
       (.I0(\wr_addr_diff_reg_n_0_[6] ),
        .I1(\wr_addr_diff_reg_n_0_[5] ),
        .I2(\wr_addr_diff_reg_n_0_[3] ),
        .I3(\wr_addr_diff_reg_n_0_[2] ),
        .I4(\wr_addr_diff_reg_n_0_[4] ),
        .I5(\wr_addr_diff_reg_n_0_[7] ),
        .O(wr_fifo_full_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    wr_fifo_full_reg
       (.C(rx_mac_aclk),
        .CE(1'b1),
        .D(wr_fifo_full0),
        .Q(wr_fifo_full),
        .R(reset_out));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT3 #(
    .INIT(8'h08)) 
    wr_gf_i_1
       (.I0(\wr_eof_bram_pipe_reg[1]__0 ),
        .I1(\wr_dv_pipe_reg[1]__0 ),
        .I2(\wr_gfbf_pipe_reg[1]__0 ),
        .O(wr_gf0));
  FDRE #(
    .INIT(1'b0)) 
    wr_gf_reg
       (.C(rx_mac_aclk),
        .CE(1'b1),
        .D(wr_gf0),
        .Q(wr_gf),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_gfbf_pipe_reg[0] 
       (.C(rx_mac_aclk),
        .CE(1'b1),
        .D(rx_axis_mac_tuser),
        .Q(\wr_gfbf_pipe_reg[0]_6 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_gfbf_pipe_reg[1] 
       (.C(rx_mac_aclk),
        .CE(1'b1),
        .D(\wr_gfbf_pipe_reg[0]_6 ),
        .Q(\wr_gfbf_pipe_reg[1]__0 ),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    \wr_rd_addr[11]_i_1__0 
       (.I0(update_addr_tog_sync),
        .I1(update_addr_tog_sync_reg),
        .O(wr_rd_addr0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_rd_addr_reg[10] 
       (.C(rx_mac_aclk),
        .CE(wr_rd_addr0),
        .D(\rd_addr_reg_n_0_[10] ),
        .Q(p_0_in1_in[10]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \wr_rd_addr_reg[11] 
       (.C(rx_mac_aclk),
        .CE(wr_rd_addr0),
        .D(\rd_addr_reg_n_0_[11] ),
        .Q(p_0_in1_in[11]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \wr_rd_addr_reg[6] 
       (.C(rx_mac_aclk),
        .CE(wr_rd_addr0),
        .D(\rd_addr_reg_n_0_[6] ),
        .Q(p_0_in1_in[6]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \wr_rd_addr_reg[7] 
       (.C(rx_mac_aclk),
        .CE(wr_rd_addr0),
        .D(\rd_addr_reg_n_0_[7] ),
        .Q(p_0_in1_in[7]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \wr_rd_addr_reg[8] 
       (.C(rx_mac_aclk),
        .CE(wr_rd_addr0),
        .D(\rd_addr_reg_n_0_[8] ),
        .Q(p_0_in1_in[8]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \wr_rd_addr_reg[9] 
       (.C(rx_mac_aclk),
        .CE(wr_rd_addr0),
        .D(\rd_addr_reg_n_0_[9] ),
        .Q(p_0_in1_in[9]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \wr_start_addr_reg[0] 
       (.C(rx_mac_aclk),
        .CE(wr_start_addr_load),
        .D(wr_addr_reg[0]),
        .Q(\wr_start_addr_reg_n_0_[0] ),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \wr_start_addr_reg[10] 
       (.C(rx_mac_aclk),
        .CE(wr_start_addr_load),
        .D(wr_addr_reg[10]),
        .Q(\wr_start_addr_reg_n_0_[10] ),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \wr_start_addr_reg[11] 
       (.C(rx_mac_aclk),
        .CE(wr_start_addr_load),
        .D(wr_addr_reg[11]),
        .Q(\wr_start_addr_reg_n_0_[11] ),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \wr_start_addr_reg[1] 
       (.C(rx_mac_aclk),
        .CE(wr_start_addr_load),
        .D(wr_addr_reg[1]),
        .Q(\wr_start_addr_reg_n_0_[1] ),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \wr_start_addr_reg[2] 
       (.C(rx_mac_aclk),
        .CE(wr_start_addr_load),
        .D(wr_addr_reg[2]),
        .Q(\wr_start_addr_reg_n_0_[2] ),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \wr_start_addr_reg[3] 
       (.C(rx_mac_aclk),
        .CE(wr_start_addr_load),
        .D(wr_addr_reg[3]),
        .Q(\wr_start_addr_reg_n_0_[3] ),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \wr_start_addr_reg[4] 
       (.C(rx_mac_aclk),
        .CE(wr_start_addr_load),
        .D(wr_addr_reg[4]),
        .Q(\wr_start_addr_reg_n_0_[4] ),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \wr_start_addr_reg[5] 
       (.C(rx_mac_aclk),
        .CE(wr_start_addr_load),
        .D(wr_addr_reg[5]),
        .Q(\wr_start_addr_reg_n_0_[5] ),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \wr_start_addr_reg[6] 
       (.C(rx_mac_aclk),
        .CE(wr_start_addr_load),
        .D(wr_addr_reg[6]),
        .Q(\wr_start_addr_reg_n_0_[6] ),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \wr_start_addr_reg[7] 
       (.C(rx_mac_aclk),
        .CE(wr_start_addr_load),
        .D(wr_addr_reg[7]),
        .Q(\wr_start_addr_reg_n_0_[7] ),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \wr_start_addr_reg[8] 
       (.C(rx_mac_aclk),
        .CE(wr_start_addr_load),
        .D(wr_addr_reg[8]),
        .Q(\wr_start_addr_reg_n_0_[8] ),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \wr_start_addr_reg[9] 
       (.C(rx_mac_aclk),
        .CE(wr_start_addr_load),
        .D(wr_addr_reg[9]),
        .Q(\wr_start_addr_reg_n_0_[9] ),
        .R(reset_out));
  LUT2 #(
    .INIT(4'h6)) 
    wr_store_frame_tog_i_1
       (.I0(wr_store_frame_tog),
        .I1(wr_store_frame_tog_reg_n_0),
        .O(wr_store_frame_tog_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    wr_store_frame_tog_reg
       (.C(rx_mac_aclk),
        .CE(1'b1),
        .D(wr_store_frame_tog_i_1_n_0),
        .Q(wr_store_frame_tog_reg_n_0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "slave_attachment" *) 
module tri_mode_ethernet_mac_0_slave_attachment
   (bus2ip_reset,
    s_axi_rresp,
    \MEM_DECODE_GEN[0].cs_out_i_reg[0] ,
    s_axi_rvalid_i_reg_0,
    s_axi_bvalid_i_reg_0,
    s_axi_bresp,
    ip2bus_rdack_reg,
    ip2bus_wrack_reg,
    local_wrack_reg,
    local_rdack_reg,
    \MEM_DECODE_GEN[0].cs_out_i_reg[0]_0 ,
    bus2ip_rdce,
    bus2ip_wrce,
    s_axi_rdata,
    Q,
    s_axi_aclk,
    ip2bus_error,
    s_axi_arvalid,
    s_axi_rready,
    s_axi_bready,
    local_wrack_reg_0,
    local_wrack1,
    s_axi_resetn,
    local_rdack_reg_0,
    s_axi_awvalid,
    s_axi_wvalid,
    D,
    ip2bus_wrack,
    ip2bus_rdack,
    s_axi_araddr,
    s_axi_awaddr);
  output bus2ip_reset;
  output [0:0]s_axi_rresp;
  output \MEM_DECODE_GEN[0].cs_out_i_reg[0] ;
  output s_axi_rvalid_i_reg_0;
  output s_axi_bvalid_i_reg_0;
  output [0:0]s_axi_bresp;
  output ip2bus_rdack_reg;
  output ip2bus_wrack_reg;
  output local_wrack_reg;
  output local_rdack_reg;
  output \MEM_DECODE_GEN[0].cs_out_i_reg[0]_0 ;
  output bus2ip_rdce;
  output bus2ip_wrce;
  output [31:0]s_axi_rdata;
  output [10:0]Q;
  input s_axi_aclk;
  input ip2bus_error;
  input s_axi_arvalid;
  input s_axi_rready;
  input s_axi_bready;
  input local_wrack_reg_0;
  input local_wrack1;
  input s_axi_resetn;
  input local_rdack_reg_0;
  input s_axi_awvalid;
  input s_axi_wvalid;
  input [31:0]D;
  input ip2bus_wrack;
  input ip2bus_rdack;
  input [10:0]s_axi_araddr;
  input [10:0]s_axi_awaddr;

  wire \FSM_onehot_state[0]_i_1_n_0 ;
  wire \FSM_onehot_state[1]_i_1_n_0 ;
  wire \FSM_onehot_state[2]_i_1_n_0 ;
  wire \FSM_onehot_state[3]_i_1_n_0 ;
  wire \FSM_onehot_state_reg_n_0_[0] ;
  wire \FSM_onehot_state_reg_n_0_[3] ;
  wire \INCLUDE_DPHASE_TIMER.dpto_cnt[6]_i_3_n_0 ;
  wire [6:0]\INCLUDE_DPHASE_TIMER.dpto_cnt_reg ;
  wire \MEM_DECODE_GEN[0].cs_out_i_reg[0] ;
  wire \MEM_DECODE_GEN[0].cs_out_i_reg[0]_0 ;
  wire [10:0]Q;
  wire \bus2ip_addr_i[10]_i_1_n_0 ;
  wire \bus2ip_addr_i[10]_i_2_n_0 ;
  wire \bus2ip_addr_i[2]_i_1_n_0 ;
  wire \bus2ip_addr_i[3]_i_1_n_0 ;
  wire \bus2ip_addr_i[4]_i_1_n_0 ;
  wire \bus2ip_addr_i[8]_i_1_n_0 ;
  wire \bus2ip_addr_i[9]_i_1_n_0 ;
  wire bus2ip_rdce;
  wire bus2ip_reset;
  wire bus2ip_rnw_i;
  wire bus2ip_wrce;
  wire clear;
  wire ip2bus_rdack;
  wire ip2bus_rdack_reg;
  wire ip2bus_wrack;
  wire ip2bus_wrack_reg;
  wire is_read_i_1_n_0;
  wire is_read_reg_n_0;
  wire is_write_i_1_n_0;
  wire is_write_i_2_n_0;
  wire is_write_reg_n_0;
  wire local_rdack_reg;
  wire local_rdack_reg_0;
  wire local_wrack1;
  wire local_wrack_reg;
  wire local_wrack_reg_0;
  wire [1:0]p_0_out;
  wire p_5_in;
  wire [6:0]plusOp;
  wire rst;
  wire s_axi_aclk;
  wire [10:0]s_axi_araddr;
  wire s_axi_arvalid;
  wire [10:0]s_axi_awaddr;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bresp_i;
  wire s_axi_bvalid_i_i_1_n_0;
  wire s_axi_bvalid_i_reg_0;
  wire s_axi_resetn;
  wire s_axi_rready;
  wire s_axi_rresp_i;
  wire s_axi_rvalid_i_i_1_n_0;
  wire s_axi_rvalid_i_reg_0;
  wire s_axi_wvalid;
  wire start2;
  wire start2_i_1_n_0;
  wire [1:0]state;
  wire state1__2;

  LUT6 #(
    .INIT(64'hFFFF150015001500)) 
    \FSM_onehot_state[0]_i_1 
       (.I0(s_axi_arvalid),
        .I1(s_axi_wvalid),
        .I2(s_axi_awvalid),
        .I3(\FSM_onehot_state_reg_n_0_[0] ),
        .I4(state1__2),
        .I5(\FSM_onehot_state_reg_n_0_[3] ),
        .O(\FSM_onehot_state[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8F88)) 
    \FSM_onehot_state[1]_i_1 
       (.I0(s_axi_arvalid),
        .I1(\FSM_onehot_state_reg_n_0_[0] ),
        .I2(ip2bus_rdack_reg),
        .I3(s_axi_rresp_i),
        .O(\FSM_onehot_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0800FFFF08000800)) 
    \FSM_onehot_state[2]_i_1 
       (.I0(s_axi_wvalid),
        .I1(s_axi_awvalid),
        .I2(s_axi_arvalid),
        .I3(\FSM_onehot_state_reg_n_0_[0] ),
        .I4(ip2bus_wrack_reg),
        .I5(s_axi_bresp_i),
        .O(\FSM_onehot_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF888F888FFFFF888)) 
    \FSM_onehot_state[3]_i_1 
       (.I0(ip2bus_wrack_reg),
        .I1(s_axi_bresp_i),
        .I2(s_axi_rresp_i),
        .I3(ip2bus_rdack_reg),
        .I4(\FSM_onehot_state_reg_n_0_[3] ),
        .I5(state1__2),
        .O(\FSM_onehot_state[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \FSM_onehot_state[3]_i_2 
       (.I0(s_axi_bready),
        .I1(s_axi_bvalid_i_reg_0),
        .I2(s_axi_rready),
        .I3(s_axi_rvalid_i_reg_0),
        .O(state1__2));
  (* FSM_ENCODED_STATES = "iSTATE:0010,iSTATE0:0100,iSTATE1:1000,iSTATE2:0001" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_state_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FSM_onehot_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[0] ),
        .S(rst));
  (* FSM_ENCODED_STATES = "iSTATE:0010,iSTATE0:0100,iSTATE1:1000,iSTATE2:0001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FSM_onehot_state[1]_i_1_n_0 ),
        .Q(s_axi_rresp_i),
        .R(rst));
  (* FSM_ENCODED_STATES = "iSTATE:0010,iSTATE0:0100,iSTATE1:1000,iSTATE2:0001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FSM_onehot_state[2]_i_1_n_0 ),
        .Q(s_axi_bresp_i),
        .R(rst));
  (* FSM_ENCODED_STATES = "iSTATE:0010,iSTATE0:0100,iSTATE1:1000,iSTATE2:0001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FSM_onehot_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[3] ),
        .R(rst));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt[0]_i_1 
       (.I0(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [0]),
        .O(plusOp[0]));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt[1]_i_1 
       (.I0(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [0]),
        .I1(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [1]),
        .O(plusOp[1]));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt[2]_i_1 
       (.I0(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [0]),
        .I1(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [1]),
        .I2(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [2]),
        .O(plusOp[2]));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt[3]_i_1 
       (.I0(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [1]),
        .I1(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [0]),
        .I2(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [2]),
        .I3(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [3]),
        .O(plusOp[3]));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt[4]_i_1 
       (.I0(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [2]),
        .I1(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [0]),
        .I2(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [1]),
        .I3(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [3]),
        .I4(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [4]),
        .O(plusOp[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt[5]_i_1 
       (.I0(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [3]),
        .I1(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [1]),
        .I2(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [0]),
        .I3(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [2]),
        .I4(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [4]),
        .I5(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [5]),
        .O(plusOp[5]));
  LUT2 #(
    .INIT(4'h9)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt[6]_i_1 
       (.I0(state[0]),
        .I1(state[1]),
        .O(clear));
  LUT3 #(
    .INIT(8'h78)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt[6]_i_2 
       (.I0(\INCLUDE_DPHASE_TIMER.dpto_cnt[6]_i_3_n_0 ),
        .I1(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [5]),
        .I2(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [6]),
        .O(plusOp[6]));
  LUT5 #(
    .INIT(32'h80000000)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt[6]_i_3 
       (.I0(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [4]),
        .I1(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [2]),
        .I2(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [0]),
        .I3(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [1]),
        .I4(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [3]),
        .O(\INCLUDE_DPHASE_TIMER.dpto_cnt[6]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(plusOp[0]),
        .Q(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [0]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(plusOp[1]),
        .Q(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [1]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(plusOp[2]),
        .Q(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [2]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(plusOp[3]),
        .Q(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [3]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(plusOp[4]),
        .Q(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [4]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(plusOp[5]),
        .Q(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [5]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(plusOp[6]),
        .Q(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [6]),
        .R(clear));
  tri_mode_ethernet_mac_0_address_decoder I_DECODER
       (.\MEM_DECODE_GEN[0].cs_out_i_reg[0]_0 (\MEM_DECODE_GEN[0].cs_out_i_reg[0] ),
        .\MEM_DECODE_GEN[0].cs_out_i_reg[0]_1 (\MEM_DECODE_GEN[0].cs_out_i_reg[0]_0 ),
        .Q(start2),
        .bus2ip_rdce(bus2ip_rdce),
        .bus2ip_rnw_i(bus2ip_rnw_i),
        .bus2ip_wrce(bus2ip_wrce),
        .ip2bus_rdack(ip2bus_rdack),
        .ip2bus_rdack_reg(ip2bus_rdack_reg),
        .ip2bus_wrack(ip2bus_wrack),
        .ip2bus_wrack_reg(ip2bus_wrack_reg),
        .local_rdack_reg(local_rdack_reg),
        .local_rdack_reg_0(local_rdack_reg_0),
        .local_wrack1(local_wrack1),
        .local_wrack_reg(local_wrack_reg),
        .local_wrack_reg_0(local_wrack_reg_0),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_arready(is_read_reg_n_0),
        .s_axi_arready_0(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg ),
        .s_axi_resetn(s_axi_resetn),
        .s_axi_wready(is_write_reg_n_0));
  LUT5 #(
    .INIT(32'h000000EA)) 
    \bus2ip_addr_i[10]_i_1 
       (.I0(s_axi_arvalid),
        .I1(s_axi_awvalid),
        .I2(s_axi_wvalid),
        .I3(state[1]),
        .I4(state[0]),
        .O(\bus2ip_addr_i[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \bus2ip_addr_i[10]_i_2 
       (.I0(s_axi_araddr[10]),
        .I1(s_axi_awaddr[10]),
        .I2(s_axi_arvalid),
        .O(\bus2ip_addr_i[10]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \bus2ip_addr_i[2]_i_1 
       (.I0(s_axi_araddr[2]),
        .I1(s_axi_awaddr[2]),
        .I2(s_axi_arvalid),
        .O(\bus2ip_addr_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \bus2ip_addr_i[3]_i_1 
       (.I0(s_axi_araddr[3]),
        .I1(s_axi_awaddr[3]),
        .I2(s_axi_arvalid),
        .O(\bus2ip_addr_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \bus2ip_addr_i[4]_i_1 
       (.I0(s_axi_araddr[4]),
        .I1(s_axi_awaddr[4]),
        .I2(s_axi_arvalid),
        .O(\bus2ip_addr_i[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \bus2ip_addr_i[8]_i_1 
       (.I0(s_axi_araddr[8]),
        .I1(s_axi_awaddr[8]),
        .I2(s_axi_arvalid),
        .O(\bus2ip_addr_i[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \bus2ip_addr_i[9]_i_1 
       (.I0(s_axi_araddr[9]),
        .I1(s_axi_awaddr[9]),
        .I2(s_axi_arvalid),
        .O(\bus2ip_addr_i[9]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \bus2ip_addr_i_reg[10] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[10]_i_1_n_0 ),
        .D(\bus2ip_addr_i[10]_i_2_n_0 ),
        .Q(Q[10]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \bus2ip_addr_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[10]_i_1_n_0 ),
        .D(\bus2ip_addr_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \bus2ip_addr_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[10]_i_1_n_0 ),
        .D(\bus2ip_addr_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \bus2ip_addr_i_reg[4] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[10]_i_1_n_0 ),
        .D(\bus2ip_addr_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(rst));
  (* OPT_MODIFIED = "PROPCONST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \bus2ip_addr_i_reg[5] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[10]_i_1_n_0 ),
        .D(1'b0),
        .Q(Q[5]),
        .R(rst));
  (* OPT_MODIFIED = "PROPCONST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \bus2ip_addr_i_reg[6] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[10]_i_1_n_0 ),
        .D(1'b0),
        .Q(Q[6]),
        .R(rst));
  (* OPT_MODIFIED = "PROPCONST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \bus2ip_addr_i_reg[7] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[10]_i_1_n_0 ),
        .D(1'b0),
        .Q(Q[7]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \bus2ip_addr_i_reg[8] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[10]_i_1_n_0 ),
        .D(\bus2ip_addr_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \bus2ip_addr_i_reg[9] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[10]_i_1_n_0 ),
        .D(\bus2ip_addr_i[9]_i_1_n_0 ),
        .Q(Q[9]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    bus2ip_rnw_i_reg
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[10]_i_1_n_0 ),
        .D(s_axi_arvalid),
        .Q(bus2ip_rnw_i),
        .R(rst));
  LUT5 #(
    .INIT(32'h8BBB8888)) 
    is_read_i_1
       (.I0(s_axi_arvalid),
        .I1(\FSM_onehot_state_reg_n_0_[0] ),
        .I2(state1__2),
        .I3(\FSM_onehot_state_reg_n_0_[3] ),
        .I4(is_read_reg_n_0),
        .O(is_read_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    is_read_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(is_read_i_1_n_0),
        .Q(is_read_reg_n_0),
        .R(rst));
  LUT6 #(
    .INIT(64'h2000FFFF20000000)) 
    is_write_i_1
       (.I0(\FSM_onehot_state_reg_n_0_[0] ),
        .I1(s_axi_arvalid),
        .I2(s_axi_awvalid),
        .I3(s_axi_wvalid),
        .I4(is_write_i_2_n_0),
        .I5(is_write_reg_n_0),
        .O(is_write_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFEAEAEAAAAAAAAA)) 
    is_write_i_2
       (.I0(\FSM_onehot_state_reg_n_0_[0] ),
        .I1(s_axi_bready),
        .I2(s_axi_bvalid_i_reg_0),
        .I3(s_axi_rready),
        .I4(s_axi_rvalid_i_reg_0),
        .I5(\FSM_onehot_state_reg_n_0_[3] ),
        .O(is_write_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    is_write_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(is_write_i_1_n_0),
        .Q(is_write_reg_n_0),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    rst_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(bus2ip_reset),
        .Q(rst),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h08FF0808)) 
    s_axi_bvalid_i_i_1
       (.I0(ip2bus_wrack_reg),
        .I1(state[1]),
        .I2(state[0]),
        .I3(s_axi_bready),
        .I4(s_axi_bvalid_i_reg_0),
        .O(s_axi_bvalid_i_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    s_axi_bvalid_i_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_axi_bvalid_i_i_1_n_0),
        .Q(s_axi_bvalid_i_reg_0),
        .R(rst));
  LUT5 #(
    .INIT(32'h08FF0808)) 
    s_axi_rvalid_i_i_1
       (.I0(ip2bus_rdack_reg),
        .I1(state[0]),
        .I2(state[1]),
        .I3(s_axi_rready),
        .I4(s_axi_rvalid_i_reg_0),
        .O(s_axi_rvalid_i_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    s_axi_rvalid_i_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_axi_rvalid_i_i_1_n_0),
        .Q(s_axi_rvalid_i_reg_0),
        .R(rst));
  LUT5 #(
    .INIT(32'h000000F8)) 
    start2_i_1
       (.I0(s_axi_awvalid),
        .I1(s_axi_wvalid),
        .I2(s_axi_arvalid),
        .I3(state[1]),
        .I4(state[0]),
        .O(start2_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    start2_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(start2_i_1_n_0),
        .Q(start2),
        .R(rst));
  LUT5 #(
    .INIT(32'h77FC44FC)) 
    \state[0]_i_1 
       (.I0(state1__2),
        .I1(state[0]),
        .I2(s_axi_arvalid),
        .I3(state[1]),
        .I4(ip2bus_wrack_reg),
        .O(p_0_out[0]));
  LUT6 #(
    .INIT(64'h55FFFF0C5500FF0C)) 
    \state[1]_i_1 
       (.I0(state1__2),
        .I1(p_5_in),
        .I2(s_axi_arvalid),
        .I3(state[1]),
        .I4(state[0]),
        .I5(ip2bus_rdack_reg),
        .O(p_0_out[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \state[1]_i_2 
       (.I0(s_axi_awvalid),
        .I1(s_axi_wvalid),
        .O(p_5_in));
  FDRE #(
    .INIT(1'b0)) 
    \state_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_0_out[0]),
        .Q(state[0]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \state_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_0_out[1]),
        .Q(state[1]),
        .R(rst));
  LUT1 #(
    .INIT(2'h1)) 
    tri_mode_ethernet_mac_0_core_i_1
       (.I0(s_axi_resetn),
        .O(bus2ip_reset));
endmodule

module tri_mode_ethernet_mac_0_support
   (rx_statistics_valid,
    rx_mac_aclk,
    rx_reset,
    rx_axis_mac_tdata,
    rx_axis_mac_tvalid,
    rx_axis_mac_tlast,
    rx_axis_mac_tuser,
    tx_statistics_valid,
    tx_mac_aclk,
    tx_reset,
    tx_axis_mac_tready,
    speedis100,
    speedis10100,
    gmii_txd,
    gmii_tx_en,
    gmii_tx_er,
    s_axi_awready,
    s_axi_wready,
    s_axi_bvalid,
    s_axi_arready,
    s_axi_rvalid,
    rx_statistics_valid_reg_reg,
    tx_statistics_valid_reg_reg,
    userclk2_out,
    Q,
    tx_axis_mac_tvalid,
    tx_axis_mac_tlast,
    gmii_rxd,
    gmii_rx_dv,
    gmii_rx_er,
    clk_200,
    s_axi_resetn,
    rx_statistics_valid_reg_reg_0,
    s_axi_awvalid,
    rx_statistics_valid_reg_reg_1,
    s_axi_wvalid,
    s_axi_bready,
    rx_statistics_valid_reg_reg_2,
    s_axi_arvalid,
    s_axi_rready,
    rx_statistics_valid_reg,
    data_in,
    tx_statistics_valid_reg,
    tx_stats_toggle_reg,
    locked,
    glbl_rst_IBUF);
  output rx_statistics_valid;
  output rx_mac_aclk;
  output rx_reset;
  output [7:0]rx_axis_mac_tdata;
  output rx_axis_mac_tvalid;
  output rx_axis_mac_tlast;
  output rx_axis_mac_tuser;
  output tx_statistics_valid;
  output tx_mac_aclk;
  output tx_reset;
  output tx_axis_mac_tready;
  output speedis100;
  output speedis10100;
  output [7:0]gmii_txd;
  output gmii_tx_en;
  output gmii_tx_er;
  output s_axi_awready;
  output s_axi_wready;
  output s_axi_bvalid;
  output s_axi_arready;
  output s_axi_rvalid;
  output rx_statistics_valid_reg_reg;
  output tx_statistics_valid_reg_reg;
  input userclk2_out;
  input [7:0]Q;
  input tx_axis_mac_tvalid;
  input tx_axis_mac_tlast;
  input [7:0]gmii_rxd;
  input gmii_rx_dv;
  input gmii_rx_er;
  input clk_200;
  input s_axi_resetn;
  input [4:0]rx_statistics_valid_reg_reg_0;
  input s_axi_awvalid;
  input [4:0]rx_statistics_valid_reg_reg_1;
  input s_axi_wvalid;
  input s_axi_bready;
  input [4:0]rx_statistics_valid_reg_reg_2;
  input s_axi_arvalid;
  input s_axi_rready;
  input rx_statistics_valid_reg;
  input data_in;
  input tx_statistics_valid_reg;
  input tx_stats_toggle_reg;
  input locked;
  input glbl_rst_IBUF;

  wire [7:0]Q;
  wire clk_200;
  wire data_in;
  wire glbl_rst_IBUF;
  wire gmii_rx_dv;
  wire gmii_rx_er;
  wire [7:0]gmii_rxd;
  wire gmii_tx_en;
  wire gmii_tx_er;
  wire [7:0]gmii_txd;
  wire locked;
  wire nReset_w;
  wire [7:0]rx_axis_mac_tdata;
  wire rx_axis_mac_tlast;
  wire rx_axis_mac_tuser;
  wire rx_axis_mac_tvalid;
  wire rx_mac_aclk;
  wire rx_reset;
  wire rx_statistics_valid;
  wire rx_statistics_valid_reg;
  wire rx_statistics_valid_reg_reg;
  wire [4:0]rx_statistics_valid_reg_reg_0;
  wire [4:0]rx_statistics_valid_reg_reg_1;
  wire [4:0]rx_statistics_valid_reg_reg_2;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire s_axi_resetn;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire speedis100;
  wire speedis10100;
  wire tx_axis_mac_tlast;
  wire tx_axis_mac_tready;
  wire tx_axis_mac_tvalid;
  wire tx_mac_aclk;
  wire tx_reset;
  wire tx_statistics_valid;
  wire tx_statistics_valid_reg;
  wire tx_statistics_valid_reg_reg;
  wire tx_stats_toggle_reg;
  wire userclk2_out;
  wire NLW_tri_mode_ethernet_mac_i_mac_irq_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_i_pause_req_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_i_rx_axi_rstn_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_i_tx_axi_rstn_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_i_tx_axis_mac_tuser_UNCONNECTED;
  wire [15:0]NLW_tri_mode_ethernet_mac_i_pause_val_UNCONNECTED;
  wire [27:0]NLW_tri_mode_ethernet_mac_i_rx_statistics_vector_UNCONNECTED;
  wire [11:0]NLW_tri_mode_ethernet_mac_i_s_axi_araddr_UNCONNECTED;
  wire [11:0]NLW_tri_mode_ethernet_mac_i_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_tri_mode_ethernet_mac_i_s_axi_bresp_UNCONNECTED;
  wire [31:0]NLW_tri_mode_ethernet_mac_i_s_axi_rdata_UNCONNECTED;
  wire [1:0]NLW_tri_mode_ethernet_mac_i_s_axi_rresp_UNCONNECTED;
  wire [30:5]NLW_tri_mode_ethernet_mac_i_s_axi_wdata_UNCONNECTED;
  wire [7:0]NLW_tri_mode_ethernet_mac_i_tx_ifg_delay_UNCONNECTED;
  wire [31:0]NLW_tri_mode_ethernet_mac_i_tx_statistics_vector_UNCONNECTED;

  LUT3 #(
    .INIT(8'hD2)) 
    rx_stats_toggle_i_1
       (.I0(rx_statistics_valid),
        .I1(rx_statistics_valid_reg),
        .I2(data_in),
        .O(rx_statistics_valid_reg_reg));
  (* IMPORTED_FROM = "/home/daphnelme/Desktop/DAPHNE_SGMII/tri_mode_ethernet_mac_0_ex/tri_mode_ethernet_mac_0_ex.runs/impl_1/.Xil/Vivado-14133-daphne.linktest.lme/tri_mode_ethernet_mac_0/tri_mode_ethernet_mac_0.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* X_CORE_INFO = "tri_mode_ethernet_mac_0_block,Vivado 2020.1" *) 
  tri_mode_ethernet_mac_0 tri_mode_ethernet_mac_i
       (.glbl_rstn(nReset_w),
        .gmii_rx_dv(gmii_rx_dv),
        .gmii_rx_er(gmii_rx_er),
        .gmii_rxd(gmii_rxd),
        .gmii_tx_en(gmii_tx_en),
        .gmii_tx_er(gmii_tx_er),
        .gmii_txd(gmii_txd),
        .gtx_clk(userclk2_out),
        .mac_irq(NLW_tri_mode_ethernet_mac_i_mac_irq_UNCONNECTED),
        .pause_req(NLW_tri_mode_ethernet_mac_i_pause_req_UNCONNECTED),
        .pause_val(NLW_tri_mode_ethernet_mac_i_pause_val_UNCONNECTED[15:0]),
        .rx_axi_rstn(NLW_tri_mode_ethernet_mac_i_rx_axi_rstn_UNCONNECTED),
        .rx_axis_mac_tdata(rx_axis_mac_tdata),
        .rx_axis_mac_tlast(rx_axis_mac_tlast),
        .rx_axis_mac_tuser(rx_axis_mac_tuser),
        .rx_axis_mac_tvalid(rx_axis_mac_tvalid),
        .rx_mac_aclk(rx_mac_aclk),
        .rx_reset(rx_reset),
        .rx_statistics_valid(rx_statistics_valid),
        .rx_statistics_vector(NLW_tri_mode_ethernet_mac_i_rx_statistics_vector_UNCONNECTED[27:0]),
        .s_axi_aclk(clk_200),
        .s_axi_araddr({NLW_tri_mode_ethernet_mac_i_s_axi_araddr_UNCONNECTED[11],rx_statistics_valid_reg_reg_2[4:3],rx_statistics_valid_reg_reg_2[3],NLW_tri_mode_ethernet_mac_i_s_axi_araddr_UNCONNECTED[7:5],rx_statistics_valid_reg_reg_2[2:0],NLW_tri_mode_ethernet_mac_i_s_axi_araddr_UNCONNECTED[1:0]}),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr({NLW_tri_mode_ethernet_mac_i_s_axi_awaddr_UNCONNECTED[11],rx_statistics_valid_reg_reg_0[4:3],rx_statistics_valid_reg_reg_0[3],NLW_tri_mode_ethernet_mac_i_s_axi_awaddr_UNCONNECTED[7:5],rx_statistics_valid_reg_reg_0[2:0],NLW_tri_mode_ethernet_mac_i_s_axi_awaddr_UNCONNECTED[1:0]}),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(NLW_tri_mode_ethernet_mac_i_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rdata(NLW_tri_mode_ethernet_mac_i_s_axi_rdata_UNCONNECTED[31:0]),
        .s_axi_resetn(s_axi_resetn),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(NLW_tri_mode_ethernet_mac_i_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata({rx_statistics_valid_reg_reg_1[4],NLW_tri_mode_ethernet_mac_i_s_axi_wdata_UNCONNECTED[30:29],rx_statistics_valid_reg_reg_1[3],NLW_tri_mode_ethernet_mac_i_s_axi_wdata_UNCONNECTED[27],rx_statistics_valid_reg_reg_1[2],NLW_tri_mode_ethernet_mac_i_s_axi_wdata_UNCONNECTED[25:18],rx_statistics_valid_reg_reg_1[2],rx_statistics_valid_reg_reg_1[2],NLW_tri_mode_ethernet_mac_i_s_axi_wdata_UNCONNECTED[15:11],rx_statistics_valid_reg_reg_1[1:0],NLW_tri_mode_ethernet_mac_i_s_axi_wdata_UNCONNECTED[8],rx_statistics_valid_reg_reg_1[2],rx_statistics_valid_reg_reg_1[2],NLW_tri_mode_ethernet_mac_i_s_axi_wdata_UNCONNECTED[5],rx_statistics_valid_reg_reg_1[2],rx_statistics_valid_reg_reg_1[2:1],rx_statistics_valid_reg_reg_1[2:1]}),
        .s_axi_wready(s_axi_wready),
        .s_axi_wvalid(s_axi_wvalid),
        .speedis100(speedis100),
        .speedis10100(speedis10100),
        .tx_axi_rstn(NLW_tri_mode_ethernet_mac_i_tx_axi_rstn_UNCONNECTED),
        .tx_axis_mac_tdata(Q),
        .tx_axis_mac_tlast(tx_axis_mac_tlast),
        .tx_axis_mac_tready(tx_axis_mac_tready),
        .tx_axis_mac_tuser(NLW_tri_mode_ethernet_mac_i_tx_axis_mac_tuser_UNCONNECTED),
        .tx_axis_mac_tvalid(tx_axis_mac_tvalid),
        .tx_ifg_delay(NLW_tri_mode_ethernet_mac_i_tx_ifg_delay_UNCONNECTED[7:0]),
        .tx_mac_aclk(tx_mac_aclk),
        .tx_reset(tx_reset),
        .tx_statistics_valid(tx_statistics_valid),
        .tx_statistics_vector(NLW_tri_mode_ethernet_mac_i_tx_statistics_vector_UNCONNECTED[31:0]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT2 #(
    .INIT(4'hD)) 
    tri_mode_ethernet_mac_i_i_1
       (.I0(locked),
        .I1(glbl_rst_IBUF),
        .O(nReset_w));
  LUT3 #(
    .INIT(8'hD2)) 
    tx_stats_toggle_i_1
       (.I0(tx_statistics_valid),
        .I1(tx_statistics_valid_reg),
        .I2(tx_stats_toggle_reg),
        .O(tx_statistics_valid_reg_reg));
endmodule

(* DEPTH = "5" *) (* INITIALISE = "1'b0" *) (* dont_touch = "yes" *) 
module tri_mode_ethernet_mac_0_sync_block
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync0;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg0
       (.C(clk),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync0),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg1
       (.C(clk),
        .CE(1'b1),
        .D(data_sync0),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg2
       (.C(clk),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg3
       (.C(clk),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg4
       (.C(clk),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_out),
        .R(1'b0));
endmodule

(* DEPTH = "5" *) (* INITIALISE = "1'b0" *) (* ORIG_REF_NAME = "tri_mode_ethernet_mac_0_sync_block" *) 
(* dont_touch = "yes" *) 
module tri_mode_ethernet_mac_0_sync_block__1
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync0;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg0
       (.C(clk),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync0),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg1
       (.C(clk),
        .CE(1'b1),
        .D(data_sync0),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg2
       (.C(clk),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg3
       (.C(clk),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg4
       (.C(clk),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_out),
        .R(1'b0));
endmodule

(* DEPTH = "5" *) (* INITIALISE = "1'b0" *) (* ORIG_REF_NAME = "tri_mode_ethernet_mac_0_sync_block" *) 
(* dont_touch = "yes" *) 
module tri_mode_ethernet_mac_0_sync_block__2
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync0;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg0
       (.C(clk),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync0),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg1
       (.C(clk),
        .CE(1'b1),
        .D(data_sync0),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg2
       (.C(clk),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg3
       (.C(clk),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg4
       (.C(clk),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_out),
        .R(1'b0));
endmodule

(* DEPTH = "5" *) (* INITIALISE = "1'b0" *) (* ORIG_REF_NAME = "tri_mode_ethernet_mac_0_sync_block" *) 
(* dont_touch = "yes" *) 
module tri_mode_ethernet_mac_0_sync_block__3
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync0;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg0
       (.C(clk),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync0),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg1
       (.C(clk),
        .CE(1'b1),
        .D(data_sync0),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg2
       (.C(clk),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg3
       (.C(clk),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg4
       (.C(clk),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_out),
        .R(1'b0));
endmodule

(* DEPTH = "5" *) (* INITIALISE = "1'b0" *) (* ORIG_REF_NAME = "tri_mode_ethernet_mac_0_sync_block" *) 
(* dont_touch = "yes" *) 
module tri_mode_ethernet_mac_0_sync_block__4
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync0;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg0
       (.C(clk),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync0),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg1
       (.C(clk),
        .CE(1'b1),
        .D(data_sync0),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg2
       (.C(clk),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg3
       (.C(clk),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg4
       (.C(clk),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_out),
        .R(1'b0));
endmodule

(* DEPTH = "5" *) (* INITIALISE = "1'b0" *) (* ORIG_REF_NAME = "tri_mode_ethernet_mac_0_sync_block" *) 
(* dont_touch = "yes" *) 
module tri_mode_ethernet_mac_0_sync_block__5
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync0;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg0
       (.C(clk),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync0),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg1
       (.C(clk),
        .CE(1'b1),
        .D(data_sync0),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg2
       (.C(clk),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg3
       (.C(clk),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg4
       (.C(clk),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_out),
        .R(1'b0));
endmodule

(* DEPTH = "5" *) (* INITIALISE = "1'b0" *) (* ORIG_REF_NAME = "tri_mode_ethernet_mac_0_sync_block" *) 
(* dont_touch = "yes" *) 
module tri_mode_ethernet_mac_0_sync_block__6
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync0;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg0
       (.C(clk),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync0),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg1
       (.C(clk),
        .CE(1'b1),
        .D(data_sync0),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg2
       (.C(clk),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg3
       (.C(clk),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg4
       (.C(clk),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_out),
        .R(1'b0));
endmodule

(* DEPTH = "5" *) (* INITIALISE = "1'b0" *) (* ORIG_REF_NAME = "tri_mode_ethernet_mac_0_sync_block" *) 
(* dont_touch = "yes" *) 
module tri_mode_ethernet_mac_0_sync_block__7
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync0;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg0
       (.C(clk),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync0),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg1
       (.C(clk),
        .CE(1'b1),
        .D(data_sync0),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg2
       (.C(clk),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg3
       (.C(clk),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg4
       (.C(clk),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_out),
        .R(1'b0));
endmodule

(* DEPTH = "5" *) (* INITIALISE = "1'b0" *) (* ORIG_REF_NAME = "tri_mode_ethernet_mac_0_sync_block" *) 
(* dont_touch = "yes" *) 
module tri_mode_ethernet_mac_0_sync_block__8
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync0;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg0
       (.C(clk),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync0),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg1
       (.C(clk),
        .CE(1'b1),
        .D(data_sync0),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg2
       (.C(clk),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg3
       (.C(clk),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg4
       (.C(clk),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_out),
        .R(1'b0));
endmodule

(* DEPTH = "5" *) (* INITIALISE = "1'b0" *) (* ORIG_REF_NAME = "tri_mode_ethernet_mac_0_sync_block" *) 
(* dont_touch = "yes" *) 
module tri_mode_ethernet_mac_0_sync_block__9
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync0;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg0
       (.C(clk),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync0),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg1
       (.C(clk),
        .CE(1'b1),
        .D(data_sync0),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg2
       (.C(clk),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg3
       (.C(clk),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    data_sync_reg4
       (.C(clk),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_out),
        .R(1'b0));
endmodule

module tri_mode_ethernet_mac_0_ten_100_1g_eth_fifo
   (wr_eof_reg,
    tx_axis_mac_tvalid,
    tx_axis_mac_tlast,
    rx_axis_fifo_tlast_int_reg,
    rx_axis_fifo_tvalid,
    wr_fifo_full_reg,
    DI,
    Q,
    \rd_frames_reg[3] ,
    \rd_frames_reg[6] ,
    E,
    wr_ovflow_dst_rdy_reg,
    S,
    \rd_frames_reg[3]_0 ,
    \gen_fd_count.wr_frames_reg[7] ,
    \rd_frames_reg[7] ,
    \tx_axis_mac_tdata_int_reg[7] ,
    \rx_axis_fifo_tdata_reg[7] ,
    userclk2_out,
    tx_mac_aclk,
    rx_mac_aclk,
    \FSM_sequential_wr_state_reg[0] ,
    p_16_out,
    p_23_out,
    rx_axis_mac_tvalid,
    reset_out,
    rx_axis_mac_tuser,
    rx_axis_mac_tlast,
    rx_axis_mac_tdata,
    tx_axis_fifo_tvalid,
    tx_axis_fifo_tlast,
    rx_fifo_resetn,
    mem_reg,
    mux_tready,
    gen_tx_data_IBUF,
    SR,
    \tx_axis_fifo_tdata_reg[7] ,
    dob_8,
    tx_axis_mac_tready,
    D,
    \gen_fd_count.wr_frames_reg[8] ,
    \rd_frames_reg[8] );
  output wr_eof_reg;
  output tx_axis_mac_tvalid;
  output tx_axis_mac_tlast;
  output rx_axis_fifo_tlast_int_reg;
  output rx_axis_fifo_tvalid;
  output wr_fifo_full_reg;
  output [3:0]DI;
  output [3:0]Q;
  output [3:0]\rd_frames_reg[3] ;
  output [3:0]\rd_frames_reg[6] ;
  output [0:0]E;
  output wr_ovflow_dst_rdy_reg;
  output [3:0]S;
  output [3:0]\rd_frames_reg[3]_0 ;
  output [3:0]\gen_fd_count.wr_frames_reg[7] ;
  output [3:0]\rd_frames_reg[7] ;
  output [7:0]\tx_axis_mac_tdata_int_reg[7] ;
  output [7:0]\rx_axis_fifo_tdata_reg[7] ;
  input userclk2_out;
  input tx_mac_aclk;
  input rx_mac_aclk;
  input [0:0]\FSM_sequential_wr_state_reg[0] ;
  input p_16_out;
  input p_23_out;
  input rx_axis_mac_tvalid;
  input reset_out;
  input rx_axis_mac_tuser;
  input rx_axis_mac_tlast;
  input [7:0]rx_axis_mac_tdata;
  input tx_axis_fifo_tvalid;
  input tx_axis_fifo_tlast;
  input rx_fifo_resetn;
  input mem_reg;
  input mux_tready;
  input gen_tx_data_IBUF;
  input [0:0]SR;
  input \tx_axis_fifo_tdata_reg[7] ;
  input dob_8;
  input tx_axis_mac_tready;
  input [7:0]D;
  input [7:0]\gen_fd_count.wr_frames_reg[8] ;
  input [7:0]\rd_frames_reg[8] ;

  wire [7:0]D;
  wire [3:0]DI;
  wire [0:0]E;
  wire [0:0]\FSM_sequential_wr_state_reg[0] ;
  wire [3:0]Q;
  wire [3:0]S;
  wire [0:0]SR;
  wire dob_8;
  wire [3:0]\gen_fd_count.wr_frames_reg[7] ;
  wire [7:0]\gen_fd_count.wr_frames_reg[8] ;
  wire gen_tx_data_IBUF;
  wire mem_reg;
  wire mux_tready;
  wire p_16_out;
  wire p_23_out;
  wire [3:0]\rd_frames_reg[3] ;
  wire [3:0]\rd_frames_reg[3]_0 ;
  wire [3:0]\rd_frames_reg[6] ;
  wire [3:0]\rd_frames_reg[7] ;
  wire [7:0]\rd_frames_reg[8] ;
  wire reset_out;
  wire [7:0]\rx_axis_fifo_tdata_reg[7] ;
  wire rx_axis_fifo_tlast_int_reg;
  wire rx_axis_fifo_tvalid;
  wire [7:0]rx_axis_mac_tdata;
  wire rx_axis_mac_tlast;
  wire rx_axis_mac_tuser;
  wire rx_axis_mac_tvalid;
  wire rx_fifo_resetn;
  wire rx_mac_aclk;
  wire \tx_axis_fifo_tdata_reg[7] ;
  wire tx_axis_fifo_tlast;
  wire tx_axis_fifo_tvalid;
  wire [7:0]\tx_axis_mac_tdata_int_reg[7] ;
  wire tx_axis_mac_tlast;
  wire tx_axis_mac_tready;
  wire tx_axis_mac_tvalid;
  wire tx_mac_aclk;
  wire userclk2_out;
  wire wr_eof_reg;
  wire wr_fifo_full_reg;
  wire wr_ovflow_dst_rdy_reg;

  tri_mode_ethernet_mac_0_rx_client_fifo rx_fifo_i
       (.gen_tx_data_IBUF(gen_tx_data_IBUF),
        .mem_reg(\FSM_sequential_wr_state_reg[0] ),
        .mem_reg_0(mem_reg),
        .mux_tready(mux_tready),
        .\rd_frames_reg[3]_0 (\rd_frames_reg[3] ),
        .\rd_frames_reg[3]_1 (\rd_frames_reg[3]_0 ),
        .\rd_frames_reg[6]_0 (\rd_frames_reg[6] ),
        .\rd_frames_reg[7]_0 (\rd_frames_reg[7] ),
        .\rd_frames_reg[8]_0 (\rd_frames_reg[8] ),
        .reset_out(reset_out),
        .\rx_axis_fifo_tdata_reg[7]_0 (\rx_axis_fifo_tdata_reg[7] ),
        .rx_axis_fifo_tlast_int_reg_0(rx_axis_fifo_tlast_int_reg),
        .rx_axis_fifo_tvalid(rx_axis_fifo_tvalid),
        .rx_axis_mac_tdata(rx_axis_mac_tdata),
        .rx_axis_mac_tlast(rx_axis_mac_tlast),
        .rx_axis_mac_tuser(rx_axis_mac_tuser),
        .rx_axis_mac_tvalid(rx_axis_mac_tvalid),
        .rx_fifo_resetn(rx_fifo_resetn),
        .rx_mac_aclk(rx_mac_aclk),
        .userclk2_out(userclk2_out));
  tri_mode_ethernet_mac_0_tx_client_fifo tx_fifo_i
       (.D(D),
        .DI(DI),
        .E(E),
        .\FSM_sequential_wr_state_reg[0]_0 (\FSM_sequential_wr_state_reg[0] ),
        .Q(Q),
        .S(S),
        .SR(SR),
        .dob_8(dob_8),
        .\gen_fd_count.wr_frames_reg[7]_0 (\gen_fd_count.wr_frames_reg[7] ),
        .\gen_fd_count.wr_frames_reg[8]_0 (\gen_fd_count.wr_frames_reg[8] ),
        .p_16_out(p_16_out),
        .p_23_out(p_23_out),
        .rx_fifo_resetn(rx_fifo_resetn),
        .\tx_axis_fifo_tdata_reg[7] (\tx_axis_fifo_tdata_reg[7] ),
        .tx_axis_fifo_tlast(tx_axis_fifo_tlast),
        .tx_axis_fifo_tvalid(tx_axis_fifo_tvalid),
        .\tx_axis_mac_tdata_int_reg[7]_0 (\tx_axis_mac_tdata_int_reg[7] ),
        .tx_axis_mac_tlast(tx_axis_mac_tlast),
        .tx_axis_mac_tready(tx_axis_mac_tready),
        .tx_axis_mac_tvalid(tx_axis_mac_tvalid),
        .tx_mac_aclk(tx_mac_aclk),
        .userclk2_out(userclk2_out),
        .wr_eof_reg(wr_eof_reg),
        .wr_fifo_full_reg_0(wr_fifo_full_reg),
        .wr_ovflow_dst_rdy_reg_0(wr_ovflow_dst_rdy_reg));
endmodule

(* ORIG_REF_NAME = "tri_mode_ethernet_mac_0_axi4_lite_ipif_top" *) 
module tri_mode_ethernet_mac_0_tri_mode_ethernet_mac_0_axi4_lite_ipif_top
   (bus2ip_reset,
    s_axi_rresp,
    \MEM_DECODE_GEN[0].cs_out_i_reg[0] ,
    s_axi_rvalid_i_reg,
    s_axi_bvalid_i_reg,
    s_axi_bresp,
    ip2bus_rdack_reg,
    ip2bus_wrack_reg,
    s_axi_rdata,
    Q,
    bus2ip_rdce,
    bus2ip_wrce,
    s_axi_aclk,
    ip2bus_error,
    s_axi_arvalid,
    s_axi_rready,
    s_axi_bready,
    s_axi_resetn,
    s_axi_awvalid,
    s_axi_wvalid,
    D,
    ip2bus_wrack,
    ip2bus_rdack,
    s_axi_araddr,
    s_axi_awaddr);
  output bus2ip_reset;
  output [0:0]s_axi_rresp;
  output \MEM_DECODE_GEN[0].cs_out_i_reg[0] ;
  output s_axi_rvalid_i_reg;
  output s_axi_bvalid_i_reg;
  output [0:0]s_axi_bresp;
  output ip2bus_rdack_reg;
  output ip2bus_wrack_reg;
  output [31:0]s_axi_rdata;
  output [10:0]Q;
  output bus2ip_rdce;
  output bus2ip_wrce;
  input s_axi_aclk;
  input ip2bus_error;
  input s_axi_arvalid;
  input s_axi_rready;
  input s_axi_bready;
  input s_axi_resetn;
  input s_axi_awvalid;
  input s_axi_wvalid;
  input [31:0]D;
  input ip2bus_wrack;
  input ip2bus_rdack;
  input [10:0]s_axi_araddr;
  input [10:0]s_axi_awaddr;

  wire \MEM_DECODE_GEN[0].cs_out_i_reg[0] ;
  wire [10:0]Q;
  wire axi_lite_top_n_10;
  wire axi_lite_top_n_8;
  wire axi_lite_top_n_9;
  wire bus2ip_rdce;
  wire bus2ip_reset;
  wire bus2ip_wrce;
  wire cs_edge_reg;
  wire ip2bus_rdack;
  wire ip2bus_rdack_reg;
  wire ip2bus_wrack;
  wire ip2bus_wrack_reg;
  wire local_rdack_reg_n_0;
  wire local_wrack1__0;
  wire local_wrack_reg_n_0;
  wire s_axi_aclk;
  wire [10:0]s_axi_araddr;
  wire s_axi_arvalid;
  wire [10:0]s_axi_awaddr;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid_i_reg;
  wire s_axi_resetn;
  wire s_axi_rready;
  wire s_axi_rvalid_i_reg;
  wire s_axi_wvalid;
  wire NLW_axi_lite_top_ip2bus_error_UNCONNECTED;
  wire [31:0]NLW_axi_lite_top_D_UNCONNECTED;
  wire [1:0]NLW_axi_lite_top_Q_UNCONNECTED;
  wire [7:0]NLW_axi_lite_top_s_axi_araddr_UNCONNECTED;
  wire [7:0]NLW_axi_lite_top_s_axi_awaddr_UNCONNECTED;
  wire [0:0]NLW_axi_lite_top_s_axi_bresp_UNCONNECTED;
  wire [31:0]NLW_axi_lite_top_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_axi_lite_top_s_axi_rresp_UNCONNECTED;

  tri_mode_ethernet_mac_0_axi_lite_ipif axi_lite_top
       (.D(NLW_axi_lite_top_D_UNCONNECTED[31:0]),
        .\MEM_DECODE_GEN[0].cs_out_i_reg[0] (\MEM_DECODE_GEN[0].cs_out_i_reg[0] ),
        .\MEM_DECODE_GEN[0].cs_out_i_reg[0]_0 (axi_lite_top_n_10),
        .Q({Q[10:2],NLW_axi_lite_top_Q_UNCONNECTED[1:0]}),
        .bus2ip_rdce(bus2ip_rdce),
        .bus2ip_reset(bus2ip_reset),
        .bus2ip_wrce(bus2ip_wrce),
        .ip2bus_error(NLW_axi_lite_top_ip2bus_error_UNCONNECTED),
        .ip2bus_rdack(ip2bus_rdack),
        .ip2bus_rdack_reg(ip2bus_rdack_reg),
        .ip2bus_wrack(ip2bus_wrack),
        .ip2bus_wrack_reg(ip2bus_wrack_reg),
        .local_rdack_reg(axi_lite_top_n_9),
        .local_rdack_reg_0(local_rdack_reg_n_0),
        .local_wrack1(local_wrack1__0),
        .local_wrack_reg(axi_lite_top_n_8),
        .local_wrack_reg_0(local_wrack_reg_n_0),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr({s_axi_araddr[10:8],NLW_axi_lite_top_s_axi_araddr_UNCONNECTED[7:5],s_axi_araddr[4:2],NLW_axi_lite_top_s_axi_araddr_UNCONNECTED[1:0]}),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr({s_axi_awaddr[10:8],NLW_axi_lite_top_s_axi_awaddr_UNCONNECTED[7:5],s_axi_awaddr[4:2],NLW_axi_lite_top_s_axi_awaddr_UNCONNECTED[1:0]}),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(NLW_axi_lite_top_s_axi_bresp_UNCONNECTED[0]),
        .s_axi_bvalid_i_reg(s_axi_bvalid_i_reg),
        .s_axi_rdata(NLW_axi_lite_top_s_axi_rdata_UNCONNECTED[31:0]),
        .s_axi_resetn(s_axi_resetn),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(NLW_axi_lite_top_s_axi_rresp_UNCONNECTED[0]),
        .s_axi_rvalid_i_reg(s_axi_rvalid_i_reg),
        .s_axi_wvalid(s_axi_wvalid));
  FDRE #(
    .INIT(1'b0)) 
    cs_edge_reg_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(axi_lite_top_n_10),
        .Q(cs_edge_reg),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    local_rdack_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(axi_lite_top_n_9),
        .Q(local_rdack_reg_n_0),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h0100)) 
    local_wrack1
       (.I0(Q[9]),
        .I1(Q[10]),
        .I2(cs_edge_reg),
        .I3(\MEM_DECODE_GEN[0].cs_out_i_reg[0] ),
        .O(local_wrack1__0));
  FDRE #(
    .INIT(1'b0)) 
    local_wrack_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(axi_lite_top_n_8),
        .Q(local_wrack_reg_n_0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "tri_mode_ethernet_mac_0_axi4_lite_ipif_wrapper" *) 
module tri_mode_ethernet_mac_0_tri_mode_ethernet_mac_0_axi4_lite_ipif_wrapper
   (bus2ip_reset,
    s_axi_rresp,
    bus2ip_cs,
    s_axi_rvalid_i_reg,
    s_axi_bvalid_i_reg,
    s_axi_bresp,
    ip2bus_rdack_reg,
    ip2bus_wrack_reg,
    s_axi_rdata,
    Q,
    bus2ip_rdce,
    bus2ip_wrce,
    s_axi_aclk,
    ip2bus_error,
    s_axi_arvalid,
    s_axi_rready,
    s_axi_bready,
    s_axi_resetn,
    s_axi_awvalid,
    s_axi_wvalid,
    D,
    ip2bus_wrack,
    ip2bus_rdack,
    s_axi_araddr,
    s_axi_awaddr);
  output bus2ip_reset;
  output [0:0]s_axi_rresp;
  output bus2ip_cs;
  output s_axi_rvalid_i_reg;
  output s_axi_bvalid_i_reg;
  output [0:0]s_axi_bresp;
  output ip2bus_rdack_reg;
  output ip2bus_wrack_reg;
  output [31:0]s_axi_rdata;
  output [10:0]Q;
  output bus2ip_rdce;
  output bus2ip_wrce;
  input s_axi_aclk;
  input ip2bus_error;
  input s_axi_arvalid;
  input s_axi_rready;
  input s_axi_bready;
  input s_axi_resetn;
  input s_axi_awvalid;
  input s_axi_wvalid;
  input [31:0]D;
  input ip2bus_wrack;
  input ip2bus_rdack;
  input [10:0]s_axi_araddr;
  input [10:0]s_axi_awaddr;

  wire [10:0]Q;
  wire bus2ip_cs;
  wire bus2ip_rdce;
  wire bus2ip_reset;
  wire bus2ip_wrce;
  wire ip2bus_rdack;
  wire ip2bus_rdack_reg;
  wire ip2bus_wrack;
  wire ip2bus_wrack_reg;
  wire s_axi_aclk;
  wire [10:0]s_axi_araddr;
  wire s_axi_arvalid;
  wire [10:0]s_axi_awaddr;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid_i_reg;
  wire s_axi_resetn;
  wire s_axi_rready;
  wire s_axi_rvalid_i_reg;
  wire s_axi_wvalid;
  wire NLW_axi4_lite_ipif_top_wrapper_ip2bus_error_UNCONNECTED;
  wire [31:0]NLW_axi4_lite_ipif_top_wrapper_D_UNCONNECTED;
  wire [1:0]NLW_axi4_lite_ipif_top_wrapper_Q_UNCONNECTED;
  wire [7:0]NLW_axi4_lite_ipif_top_wrapper_s_axi_araddr_UNCONNECTED;
  wire [7:0]NLW_axi4_lite_ipif_top_wrapper_s_axi_awaddr_UNCONNECTED;
  wire [0:0]NLW_axi4_lite_ipif_top_wrapper_s_axi_bresp_UNCONNECTED;
  wire [31:0]NLW_axi4_lite_ipif_top_wrapper_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_axi4_lite_ipif_top_wrapper_s_axi_rresp_UNCONNECTED;

  tri_mode_ethernet_mac_0_tri_mode_ethernet_mac_0_axi4_lite_ipif_top axi4_lite_ipif_top_wrapper
       (.D(NLW_axi4_lite_ipif_top_wrapper_D_UNCONNECTED[31:0]),
        .\MEM_DECODE_GEN[0].cs_out_i_reg[0] (bus2ip_cs),
        .Q({Q[10:2],NLW_axi4_lite_ipif_top_wrapper_Q_UNCONNECTED[1:0]}),
        .bus2ip_rdce(bus2ip_rdce),
        .bus2ip_reset(bus2ip_reset),
        .bus2ip_wrce(bus2ip_wrce),
        .ip2bus_error(NLW_axi4_lite_ipif_top_wrapper_ip2bus_error_UNCONNECTED),
        .ip2bus_rdack(ip2bus_rdack),
        .ip2bus_rdack_reg(ip2bus_rdack_reg),
        .ip2bus_wrack(ip2bus_wrack),
        .ip2bus_wrack_reg(ip2bus_wrack_reg),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr({s_axi_araddr[10:8],NLW_axi4_lite_ipif_top_wrapper_s_axi_araddr_UNCONNECTED[7:5],s_axi_araddr[4:2],NLW_axi4_lite_ipif_top_wrapper_s_axi_araddr_UNCONNECTED[1:0]}),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr({s_axi_awaddr[10:8],NLW_axi4_lite_ipif_top_wrapper_s_axi_awaddr_UNCONNECTED[7:5],s_axi_awaddr[4:2],NLW_axi4_lite_ipif_top_wrapper_s_axi_awaddr_UNCONNECTED[1:0]}),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(NLW_axi4_lite_ipif_top_wrapper_s_axi_bresp_UNCONNECTED[0]),
        .s_axi_bvalid_i_reg(s_axi_bvalid_i_reg),
        .s_axi_rdata(NLW_axi4_lite_ipif_top_wrapper_s_axi_rdata_UNCONNECTED[31:0]),
        .s_axi_resetn(s_axi_resetn),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(NLW_axi4_lite_ipif_top_wrapper_s_axi_rresp_UNCONNECTED[0]),
        .s_axi_rvalid_i_reg(s_axi_rvalid_i_reg),
        .s_axi_wvalid(s_axi_wvalid));
endmodule

(* ORIG_REF_NAME = "tri_mode_ethernet_mac_0_block" *) 
module tri_mode_ethernet_mac_0_tri_mode_ethernet_mac_0_block
   (gtx_clk,
    glbl_rstn,
    rx_axi_rstn,
    tx_axi_rstn,
    rx_statistics_vector,
    rx_statistics_valid,
    rx_mac_aclk,
    rx_reset,
    rx_axis_mac_tdata,
    rx_axis_mac_tvalid,
    rx_axis_mac_tlast,
    rx_axis_mac_tuser,
    tx_ifg_delay,
    tx_statistics_vector,
    tx_statistics_valid,
    tx_mac_aclk,
    tx_reset,
    tx_axis_mac_tdata,
    tx_axis_mac_tvalid,
    tx_axis_mac_tlast,
    tx_axis_mac_tuser,
    tx_axis_mac_tready,
    pause_req,
    pause_val,
    speedis100,
    speedis10100,
    gmii_txd,
    gmii_tx_en,
    gmii_tx_er,
    gmii_rxd,
    gmii_rx_dv,
    gmii_rx_er,
    s_axi_aclk,
    s_axi_resetn,
    s_axi_awaddr,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_araddr,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rvalid,
    s_axi_rready,
    mac_irq);
  input gtx_clk;
  input glbl_rstn;
  input rx_axi_rstn;
  input tx_axi_rstn;
  output [27:0]rx_statistics_vector;
  output rx_statistics_valid;
  output rx_mac_aclk;
  output rx_reset;
  output [7:0]rx_axis_mac_tdata;
  output rx_axis_mac_tvalid;
  output rx_axis_mac_tlast;
  output rx_axis_mac_tuser;
  input [7:0]tx_ifg_delay;
  output [31:0]tx_statistics_vector;
  output tx_statistics_valid;
  output tx_mac_aclk;
  output tx_reset;
  input [7:0]tx_axis_mac_tdata;
  input tx_axis_mac_tvalid;
  input tx_axis_mac_tlast;
  input tx_axis_mac_tuser;
  output tx_axis_mac_tready;
  input pause_req;
  input [15:0]pause_val;
  output speedis100;
  output speedis10100;
  output [7:0]gmii_txd;
  output gmii_tx_en;
  output gmii_tx_er;
  input [7:0]gmii_rxd;
  input gmii_rx_dv;
  input gmii_rx_er;
  input s_axi_aclk;
  input s_axi_resetn;
  input [11:0]s_axi_awaddr;
  input s_axi_awvalid;
  output s_axi_awready;
  input [31:0]s_axi_wdata;
  input s_axi_wvalid;
  output s_axi_wready;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [11:0]s_axi_araddr;
  input s_axi_arvalid;
  output s_axi_arready;
  output [31:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rvalid;
  input s_axi_rready;
  output mac_irq;

  wire \<const0> ;
  wire [10:0]bus2ip_addr;
  wire bus2ip_cs;
  wire bus2ip_rdce;
  wire bus2ip_reset;
  wire bus2ip_wrce;
  wire glbl_rstn;
  wire gmii_rx_dv;
  wire gmii_rx_er;
  wire [7:0]gmii_rxd;
  wire gmii_tx_en;
  wire gmii_tx_er;
  wire [7:0]gmii_txd;
  wire gtx_clk;
  wire [4:33]increment_vector;
  wire ip2bus_rdack;
  wire ip2bus_wrack;
  wire [7:0]rx_axis_mac_tdata;
  wire rx_axis_mac_tlast;
  wire rx_axis_mac_tuser;
  wire rx_axis_mac_tvalid;
  wire rx_reset;
  wire rx_statistics_valid;
  wire [27:0]\^rx_statistics_vector ;
  wire s_axi_aclk;
  wire [11:0]s_axi_araddr;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [11:0]s_axi_awaddr;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire s_axi_resetn;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire [7:0]tx_axis_mac_tdata;
  wire tx_axis_mac_tlast;
  wire tx_axis_mac_tready;
  wire tx_axis_mac_tvalid;
  wire tx_reset;
  wire tx_statistics_valid;
  wire [31:0]\^tx_statistics_vector ;
  wire NLW_axi4_lite_ipif_ip2bus_error_UNCONNECTED;
  wire [31:0]NLW_axi4_lite_ipif_D_UNCONNECTED;
  wire [1:0]NLW_axi4_lite_ipif_Q_UNCONNECTED;
  wire [7:0]NLW_axi4_lite_ipif_s_axi_araddr_UNCONNECTED;
  wire [7:0]NLW_axi4_lite_ipif_s_axi_awaddr_UNCONNECTED;
  wire [0:0]NLW_axi4_lite_ipif_s_axi_bresp_UNCONNECTED;
  wire [31:0]NLW_axi4_lite_ipif_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_axi4_lite_ipif_s_axi_rresp_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_clk8k_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_gmii_col_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_gmii_crs_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_gmii_tx_clken_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_interrupt_ptp_rx_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_interrupt_ptp_timer_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_interrupt_ptp_tx_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_ip2bus_error_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_mac_irq_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_mdc_out_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_mdio_in_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_mdio_out_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_mdio_tri_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_pause_req_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_rtc_clk_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_rx_axi_rstn_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_rx_axis_av_tlast_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_rx_axis_av_tuser_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_rx_axis_av_tvalid_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_rx_enable_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_rx_pfc_p0_tready_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_rx_pfc_p0_tvalid_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_rx_pfc_p1_tready_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_rx_pfc_p1_tvalid_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_rx_pfc_p2_tready_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_rx_pfc_p2_tvalid_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_rx_pfc_p3_tready_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_rx_pfc_p3_tvalid_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_rx_pfc_p4_tready_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_rx_pfc_p4_tvalid_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_rx_pfc_p5_tready_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_rx_pfc_p5_tvalid_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_rx_pfc_p6_tready_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_rx_pfc_p6_tvalid_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_rx_pfc_p7_tready_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_rx_pfc_p7_tvalid_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_rx_ts_axis_tvalid_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_speed_is_100_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_speed_is_10_100_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_stats_ref_clk_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_tx_axi_clk_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_tx_axi_rstn_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_tx_axis_av_tlast_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_tx_axis_av_tready_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_tx_axis_av_tuser_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_tx_axis_av_tvalid_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_tx_collision_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_tx_enable_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_tx_pfc_p0_tvalid_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_tx_pfc_p1_tvalid_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_tx_pfc_p2_tvalid_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_tx_pfc_p3_tvalid_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_tx_pfc_p4_tvalid_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_tx_pfc_p5_tvalid_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_tx_pfc_p6_tvalid_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_tx_pfc_p7_tvalid_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_tx_retransmit_UNCONNECTED;
  wire NLW_tri_mode_ethernet_mac_0_core_tx_ts_axis_tvalid_UNCONNECTED;
  wire [11:0]NLW_tri_mode_ethernet_mac_0_core_bus2ip_addr_UNCONNECTED;
  wire [30:5]NLW_tri_mode_ethernet_mac_0_core_bus2ip_data_UNCONNECTED;
  wire [63:0]NLW_tri_mode_ethernet_mac_0_core_correction_timer_UNCONNECTED;
  wire [10:33]NLW_tri_mode_ethernet_mac_0_core_increment_vector_UNCONNECTED;
  wire [31:0]NLW_tri_mode_ethernet_mac_0_core_ip2bus_data_UNCONNECTED;
  wire [15:0]NLW_tri_mode_ethernet_mac_0_core_pause_val_UNCONNECTED;
  wire [31:0]NLW_tri_mode_ethernet_mac_0_core_rtc_nanosec_field_UNCONNECTED;
  wire [31:0]NLW_tri_mode_ethernet_mac_0_core_rtc_nanosec_field_1722_UNCONNECTED;
  wire [47:0]NLW_tri_mode_ethernet_mac_0_core_rtc_sec_field_UNCONNECTED;
  wire [7:0]NLW_tri_mode_ethernet_mac_0_core_rx_axis_av_tdata_UNCONNECTED;
  wire [0:0]NLW_tri_mode_ethernet_mac_0_core_rx_axis_filter_tuser_UNCONNECTED;
  wire [79:0]NLW_tri_mode_ethernet_mac_0_core_rx_mac_config_vector_UNCONNECTED;
  wire [31:1]NLW_tri_mode_ethernet_mac_0_core_rx_statistics_vector_UNCONNECTED;
  wire [127:0]NLW_tri_mode_ethernet_mac_0_core_rx_ts_axis_tdata_UNCONNECTED;
  wire [63:0]NLW_tri_mode_ethernet_mac_0_core_rxphy_correction_timer_UNCONNECTED;
  wire [31:0]NLW_tri_mode_ethernet_mac_0_core_rxphy_ns_field_UNCONNECTED;
  wire [47:0]NLW_tri_mode_ethernet_mac_0_core_rxphy_s_field_UNCONNECTED;
  wire [31:0]NLW_tri_mode_ethernet_mac_0_core_systemtimer_ns_field_UNCONNECTED;
  wire [47:0]NLW_tri_mode_ethernet_mac_0_core_systemtimer_s_field_UNCONNECTED;
  wire [7:0]NLW_tri_mode_ethernet_mac_0_core_tx_axis_av_tdata_UNCONNECTED;
  wire [127:0]NLW_tri_mode_ethernet_mac_0_core_tx_axis_mac_tuser_UNCONNECTED;
  wire [7:0]NLW_tri_mode_ethernet_mac_0_core_tx_ifg_delay_UNCONNECTED;
  wire [79:0]NLW_tri_mode_ethernet_mac_0_core_tx_mac_config_vector_UNCONNECTED;
  wire [39:1]NLW_tri_mode_ethernet_mac_0_core_tx_statistics_vector_UNCONNECTED;
  wire [127:0]NLW_tri_mode_ethernet_mac_0_core_tx_ts_axis_tdata_UNCONNECTED;
  wire [10:33]NLW_vector_decode_inst_increment_vector_UNCONNECTED;
  wire [23:1]NLW_vector_decode_inst_rx_statistics_vector_UNCONNECTED;
  wire [20:1]NLW_vector_decode_inst_tx_statistics_vector_UNCONNECTED;

  assign rx_mac_aclk = gtx_clk;
  assign s_axi_awready = s_axi_wready;
  assign speedis100 = \<const0> ;
  assign speedis10100 = \<const0> ;
  assign tx_mac_aclk = gtx_clk;
  GND GND
       (.G(\<const0> ));
  tri_mode_ethernet_mac_0_tri_mode_ethernet_mac_0_axi4_lite_ipif_wrapper axi4_lite_ipif
       (.D(NLW_axi4_lite_ipif_D_UNCONNECTED[31:0]),
        .Q({bus2ip_addr[10:2],NLW_axi4_lite_ipif_Q_UNCONNECTED[1:0]}),
        .bus2ip_cs(bus2ip_cs),
        .bus2ip_rdce(bus2ip_rdce),
        .bus2ip_reset(bus2ip_reset),
        .bus2ip_wrce(bus2ip_wrce),
        .ip2bus_error(NLW_axi4_lite_ipif_ip2bus_error_UNCONNECTED),
        .ip2bus_rdack(ip2bus_rdack),
        .ip2bus_rdack_reg(s_axi_arready),
        .ip2bus_wrack(ip2bus_wrack),
        .ip2bus_wrack_reg(s_axi_wready),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr({s_axi_araddr[10:8],NLW_axi4_lite_ipif_s_axi_araddr_UNCONNECTED[7:5],s_axi_araddr[4:2],NLW_axi4_lite_ipif_s_axi_araddr_UNCONNECTED[1:0]}),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr({s_axi_awaddr[10:8],NLW_axi4_lite_ipif_s_axi_awaddr_UNCONNECTED[7:5],s_axi_awaddr[4:2],NLW_axi4_lite_ipif_s_axi_awaddr_UNCONNECTED[1:0]}),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(NLW_axi4_lite_ipif_s_axi_bresp_UNCONNECTED[0]),
        .s_axi_bvalid_i_reg(s_axi_bvalid),
        .s_axi_rdata(NLW_axi4_lite_ipif_s_axi_rdata_UNCONNECTED[31:0]),
        .s_axi_resetn(s_axi_resetn),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(NLW_axi4_lite_ipif_s_axi_rresp_UNCONNECTED[0]),
        .s_axi_rvalid_i_reg(s_axi_rvalid),
        .s_axi_wvalid(s_axi_wvalid));
  (* C_1588 = "0" *) 
  (* C_ADD_FILTER = "0" *) 
  (* C_AT_ENTRIES = "0" *) 
  (* C_AVB = "0" *) 
  (* C_CNTR_RST = "1" *) 
  (* C_DEVICE_FAMILY_US = "0" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_HALF_DUPLEX = "0" *) 
  (* C_HAS_2G5 = "0" *) 
  (* C_HAS_HOST = "1" *) 
  (* C_HAS_MDIO = "0" *) 
  (* C_HAS_STATS = "1" *) 
  (* C_INTERNAL_MODE_TYPE = "BASEX" *) 
  (* C_IS_EVAL = "1" *) 
  (* C_MAC_SPEED = "SPEED_1000_MBPS" *) 
  (* C_NUM_STATS = "34" *) 
  (* C_PFC = "0" *) 
  (* C_PHYSICAL_INTERFACE = "INTERNAL" *) 
  (* C_RX_INBAND_TS_ENABLE = "0" *) 
  (* C_RX_VEC_WIDTH = "79" *) 
  (* C_STATS_WIDTH = "64" *) 
  (* C_S_AXI_ADDR_WIDTH = "12" *) 
  (* C_TX_INBAND_CF_ENABLE = "0" *) 
  (* C_TX_VEC_WIDTH = "79" *) 
  (* HAS_2G5 = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAC_SPEED = "SPEED_1000_MBPS" *) 
  (* NUM_INTERRUPTS = "1" *) 
  tri_mode_ethernet_mac_0_tri_mode_ethernet_mac_v9_0_16 tri_mode_ethernet_mac_0_core
       (.bus2ip_addr({NLW_tri_mode_ethernet_mac_0_core_bus2ip_addr_UNCONNECTED[11],bus2ip_addr[10:2],NLW_tri_mode_ethernet_mac_0_core_bus2ip_addr_UNCONNECTED[1:0]}),
        .bus2ip_clk(s_axi_aclk),
        .bus2ip_cs(bus2ip_cs),
        .bus2ip_data({s_axi_wdata[31],NLW_tri_mode_ethernet_mac_0_core_bus2ip_data_UNCONNECTED[30:29],s_axi_wdata[28],NLW_tri_mode_ethernet_mac_0_core_bus2ip_data_UNCONNECTED[27],s_axi_wdata[26],NLW_tri_mode_ethernet_mac_0_core_bus2ip_data_UNCONNECTED[25:18],s_axi_wdata[17:16],NLW_tri_mode_ethernet_mac_0_core_bus2ip_data_UNCONNECTED[15:11],s_axi_wdata[10:9],NLW_tri_mode_ethernet_mac_0_core_bus2ip_data_UNCONNECTED[8],s_axi_wdata[7:6],NLW_tri_mode_ethernet_mac_0_core_bus2ip_data_UNCONNECTED[5],s_axi_wdata[4:0]}),
        .bus2ip_rdce(bus2ip_rdce),
        .bus2ip_reset(bus2ip_reset),
        .bus2ip_wrce(bus2ip_wrce),
        .clk8k(NLW_tri_mode_ethernet_mac_0_core_clk8k_UNCONNECTED),
        .correction_timer(NLW_tri_mode_ethernet_mac_0_core_correction_timer_UNCONNECTED[63:0]),
        .glbl_rstn(glbl_rstn),
        .gmii_col(NLW_tri_mode_ethernet_mac_0_core_gmii_col_UNCONNECTED),
        .gmii_crs(NLW_tri_mode_ethernet_mac_0_core_gmii_crs_UNCONNECTED),
        .gmii_rx_dv(gmii_rx_dv),
        .gmii_rx_er(gmii_rx_er),
        .gmii_rxd(gmii_rxd),
        .gmii_tx_clken(NLW_tri_mode_ethernet_mac_0_core_gmii_tx_clken_UNCONNECTED),
        .gmii_tx_en(gmii_tx_en),
        .gmii_tx_er(gmii_tx_er),
        .gmii_txd(gmii_txd),
        .increment_vector({increment_vector[4:9],NLW_tri_mode_ethernet_mac_0_core_increment_vector_UNCONNECTED[10],increment_vector[11:16],NLW_tri_mode_ethernet_mac_0_core_increment_vector_UNCONNECTED[17:33]}),
        .interrupt_ptp_rx(NLW_tri_mode_ethernet_mac_0_core_interrupt_ptp_rx_UNCONNECTED),
        .interrupt_ptp_timer(NLW_tri_mode_ethernet_mac_0_core_interrupt_ptp_timer_UNCONNECTED),
        .interrupt_ptp_tx(NLW_tri_mode_ethernet_mac_0_core_interrupt_ptp_tx_UNCONNECTED),
        .ip2bus_data(NLW_tri_mode_ethernet_mac_0_core_ip2bus_data_UNCONNECTED[31:0]),
        .ip2bus_error(NLW_tri_mode_ethernet_mac_0_core_ip2bus_error_UNCONNECTED),
        .ip2bus_rdack(ip2bus_rdack),
        .ip2bus_wrack(ip2bus_wrack),
        .mac_irq(NLW_tri_mode_ethernet_mac_0_core_mac_irq_UNCONNECTED),
        .mdc_out(NLW_tri_mode_ethernet_mac_0_core_mdc_out_UNCONNECTED),
        .mdio_in(NLW_tri_mode_ethernet_mac_0_core_mdio_in_UNCONNECTED),
        .mdio_out(NLW_tri_mode_ethernet_mac_0_core_mdio_out_UNCONNECTED),
        .mdio_tri(NLW_tri_mode_ethernet_mac_0_core_mdio_tri_UNCONNECTED),
        .pause_req(NLW_tri_mode_ethernet_mac_0_core_pause_req_UNCONNECTED),
        .pause_val(NLW_tri_mode_ethernet_mac_0_core_pause_val_UNCONNECTED[15:0]),
        .rtc_clk(NLW_tri_mode_ethernet_mac_0_core_rtc_clk_UNCONNECTED),
        .rtc_nanosec_field(NLW_tri_mode_ethernet_mac_0_core_rtc_nanosec_field_UNCONNECTED[31:0]),
        .rtc_nanosec_field_1722(NLW_tri_mode_ethernet_mac_0_core_rtc_nanosec_field_1722_UNCONNECTED[31:0]),
        .rtc_sec_field(NLW_tri_mode_ethernet_mac_0_core_rtc_sec_field_UNCONNECTED[47:0]),
        .rx_axi_clk(gtx_clk),
        .rx_axi_rstn(NLW_tri_mode_ethernet_mac_0_core_rx_axi_rstn_UNCONNECTED),
        .rx_axis_av_tdata(NLW_tri_mode_ethernet_mac_0_core_rx_axis_av_tdata_UNCONNECTED[7:0]),
        .rx_axis_av_tlast(NLW_tri_mode_ethernet_mac_0_core_rx_axis_av_tlast_UNCONNECTED),
        .rx_axis_av_tuser(NLW_tri_mode_ethernet_mac_0_core_rx_axis_av_tuser_UNCONNECTED),
        .rx_axis_av_tvalid(NLW_tri_mode_ethernet_mac_0_core_rx_axis_av_tvalid_UNCONNECTED),
        .rx_axis_filter_tuser(NLW_tri_mode_ethernet_mac_0_core_rx_axis_filter_tuser_UNCONNECTED[0]),
        .rx_axis_mac_tdata(rx_axis_mac_tdata),
        .rx_axis_mac_tlast(rx_axis_mac_tlast),
        .rx_axis_mac_tuser(rx_axis_mac_tuser),
        .rx_axis_mac_tvalid(rx_axis_mac_tvalid),
        .rx_enable(NLW_tri_mode_ethernet_mac_0_core_rx_enable_UNCONNECTED),
        .rx_mac_config_vector(NLW_tri_mode_ethernet_mac_0_core_rx_mac_config_vector_UNCONNECTED[79:0]),
        .rx_pfc_p0_tready(NLW_tri_mode_ethernet_mac_0_core_rx_pfc_p0_tready_UNCONNECTED),
        .rx_pfc_p0_tvalid(NLW_tri_mode_ethernet_mac_0_core_rx_pfc_p0_tvalid_UNCONNECTED),
        .rx_pfc_p1_tready(NLW_tri_mode_ethernet_mac_0_core_rx_pfc_p1_tready_UNCONNECTED),
        .rx_pfc_p1_tvalid(NLW_tri_mode_ethernet_mac_0_core_rx_pfc_p1_tvalid_UNCONNECTED),
        .rx_pfc_p2_tready(NLW_tri_mode_ethernet_mac_0_core_rx_pfc_p2_tready_UNCONNECTED),
        .rx_pfc_p2_tvalid(NLW_tri_mode_ethernet_mac_0_core_rx_pfc_p2_tvalid_UNCONNECTED),
        .rx_pfc_p3_tready(NLW_tri_mode_ethernet_mac_0_core_rx_pfc_p3_tready_UNCONNECTED),
        .rx_pfc_p3_tvalid(NLW_tri_mode_ethernet_mac_0_core_rx_pfc_p3_tvalid_UNCONNECTED),
        .rx_pfc_p4_tready(NLW_tri_mode_ethernet_mac_0_core_rx_pfc_p4_tready_UNCONNECTED),
        .rx_pfc_p4_tvalid(NLW_tri_mode_ethernet_mac_0_core_rx_pfc_p4_tvalid_UNCONNECTED),
        .rx_pfc_p5_tready(NLW_tri_mode_ethernet_mac_0_core_rx_pfc_p5_tready_UNCONNECTED),
        .rx_pfc_p5_tvalid(NLW_tri_mode_ethernet_mac_0_core_rx_pfc_p5_tvalid_UNCONNECTED),
        .rx_pfc_p6_tready(NLW_tri_mode_ethernet_mac_0_core_rx_pfc_p6_tready_UNCONNECTED),
        .rx_pfc_p6_tvalid(NLW_tri_mode_ethernet_mac_0_core_rx_pfc_p6_tvalid_UNCONNECTED),
        .rx_pfc_p7_tready(NLW_tri_mode_ethernet_mac_0_core_rx_pfc_p7_tready_UNCONNECTED),
        .rx_pfc_p7_tvalid(NLW_tri_mode_ethernet_mac_0_core_rx_pfc_p7_tvalid_UNCONNECTED),
        .rx_reset_out(rx_reset),
        .rx_statistics_valid(rx_statistics_valid),
        .rx_statistics_vector({NLW_tri_mode_ethernet_mac_0_core_rx_statistics_vector_UNCONNECTED[31:28],\^rx_statistics_vector [27:26],NLW_tri_mode_ethernet_mac_0_core_rx_statistics_vector_UNCONNECTED[25:22],\^rx_statistics_vector [21:20],NLW_tri_mode_ethernet_mac_0_core_rx_statistics_vector_UNCONNECTED[19],\^rx_statistics_vector [18:5],NLW_tri_mode_ethernet_mac_0_core_rx_statistics_vector_UNCONNECTED[4:1],\^rx_statistics_vector [0]}),
        .rx_ts_axis_tdata(NLW_tri_mode_ethernet_mac_0_core_rx_ts_axis_tdata_UNCONNECTED[127:0]),
        .rx_ts_axis_tvalid(NLW_tri_mode_ethernet_mac_0_core_rx_ts_axis_tvalid_UNCONNECTED),
        .rxphy_correction_timer(NLW_tri_mode_ethernet_mac_0_core_rxphy_correction_timer_UNCONNECTED[63:0]),
        .rxphy_ns_field(NLW_tri_mode_ethernet_mac_0_core_rxphy_ns_field_UNCONNECTED[31:0]),
        .rxphy_s_field(NLW_tri_mode_ethernet_mac_0_core_rxphy_s_field_UNCONNECTED[47:0]),
        .speed_is_100(NLW_tri_mode_ethernet_mac_0_core_speed_is_100_UNCONNECTED),
        .speed_is_10_100(NLW_tri_mode_ethernet_mac_0_core_speed_is_10_100_UNCONNECTED),
        .stats_ref_clk(NLW_tri_mode_ethernet_mac_0_core_stats_ref_clk_UNCONNECTED),
        .systemtimer_ns_field(NLW_tri_mode_ethernet_mac_0_core_systemtimer_ns_field_UNCONNECTED[31:0]),
        .systemtimer_s_field(NLW_tri_mode_ethernet_mac_0_core_systemtimer_s_field_UNCONNECTED[47:0]),
        .tx_axi_clk(NLW_tri_mode_ethernet_mac_0_core_tx_axi_clk_UNCONNECTED),
        .tx_axi_rstn(NLW_tri_mode_ethernet_mac_0_core_tx_axi_rstn_UNCONNECTED),
        .tx_axis_av_tdata(NLW_tri_mode_ethernet_mac_0_core_tx_axis_av_tdata_UNCONNECTED[7:0]),
        .tx_axis_av_tlast(NLW_tri_mode_ethernet_mac_0_core_tx_axis_av_tlast_UNCONNECTED),
        .tx_axis_av_tready(NLW_tri_mode_ethernet_mac_0_core_tx_axis_av_tready_UNCONNECTED),
        .tx_axis_av_tuser(NLW_tri_mode_ethernet_mac_0_core_tx_axis_av_tuser_UNCONNECTED),
        .tx_axis_av_tvalid(NLW_tri_mode_ethernet_mac_0_core_tx_axis_av_tvalid_UNCONNECTED),
        .tx_axis_mac_tdata(tx_axis_mac_tdata),
        .tx_axis_mac_tlast(tx_axis_mac_tlast),
        .tx_axis_mac_tready(tx_axis_mac_tready),
        .tx_axis_mac_tuser(NLW_tri_mode_ethernet_mac_0_core_tx_axis_mac_tuser_UNCONNECTED[127:0]),
        .tx_axis_mac_tvalid(tx_axis_mac_tvalid),
        .tx_collision(NLW_tri_mode_ethernet_mac_0_core_tx_collision_UNCONNECTED),
        .tx_enable(NLW_tri_mode_ethernet_mac_0_core_tx_enable_UNCONNECTED),
        .tx_ifg_delay(NLW_tri_mode_ethernet_mac_0_core_tx_ifg_delay_UNCONNECTED[7:0]),
        .tx_mac_config_vector(NLW_tri_mode_ethernet_mac_0_core_tx_mac_config_vector_UNCONNECTED[79:0]),
        .tx_pfc_p0_tvalid(NLW_tri_mode_ethernet_mac_0_core_tx_pfc_p0_tvalid_UNCONNECTED),
        .tx_pfc_p1_tvalid(NLW_tri_mode_ethernet_mac_0_core_tx_pfc_p1_tvalid_UNCONNECTED),
        .tx_pfc_p2_tvalid(NLW_tri_mode_ethernet_mac_0_core_tx_pfc_p2_tvalid_UNCONNECTED),
        .tx_pfc_p3_tvalid(NLW_tri_mode_ethernet_mac_0_core_tx_pfc_p3_tvalid_UNCONNECTED),
        .tx_pfc_p4_tvalid(NLW_tri_mode_ethernet_mac_0_core_tx_pfc_p4_tvalid_UNCONNECTED),
        .tx_pfc_p5_tvalid(NLW_tri_mode_ethernet_mac_0_core_tx_pfc_p5_tvalid_UNCONNECTED),
        .tx_pfc_p6_tvalid(NLW_tri_mode_ethernet_mac_0_core_tx_pfc_p6_tvalid_UNCONNECTED),
        .tx_pfc_p7_tvalid(NLW_tri_mode_ethernet_mac_0_core_tx_pfc_p7_tvalid_UNCONNECTED),
        .tx_reset_out(tx_reset),
        .tx_retransmit(NLW_tri_mode_ethernet_mac_0_core_tx_retransmit_UNCONNECTED),
        .tx_statistics_valid(tx_statistics_valid),
        .tx_statistics_vector({NLW_tri_mode_ethernet_mac_0_core_tx_statistics_vector_UNCONNECTED[39:20],\^tx_statistics_vector [19:5],NLW_tri_mode_ethernet_mac_0_core_tx_statistics_vector_UNCONNECTED[4:1],\^tx_statistics_vector [0]}),
        .tx_ts_axis_tdata(NLW_tri_mode_ethernet_mac_0_core_tx_ts_axis_tdata_UNCONNECTED[127:0]),
        .tx_ts_axis_tvalid(NLW_tri_mode_ethernet_mac_0_core_tx_ts_axis_tvalid_UNCONNECTED));
  tri_mode_ethernet_mac_0_tri_mode_ethernet_mac_0_vector_decode vector_decode_inst
       (.gtx_clk(gtx_clk),
        .increment_vector({increment_vector[4:9],NLW_vector_decode_inst_increment_vector_UNCONNECTED[10],increment_vector[11:16],NLW_vector_decode_inst_increment_vector_UNCONNECTED[17:33]}),
        .rx_reset_out(rx_reset),
        .rx_statistics_valid(rx_statistics_valid),
        .rx_statistics_vector({\^rx_statistics_vector [27:26],NLW_vector_decode_inst_rx_statistics_vector_UNCONNECTED[22:21],\^rx_statistics_vector [21:20],NLW_vector_decode_inst_rx_statistics_vector_UNCONNECTED[18],\^rx_statistics_vector [18:5],NLW_vector_decode_inst_rx_statistics_vector_UNCONNECTED[3:1],\^rx_statistics_vector [0]}),
        .tx_reset_out(tx_reset),
        .tx_statistics_valid(tx_statistics_valid),
        .tx_statistics_vector({NLW_vector_decode_inst_tx_statistics_vector_UNCONNECTED[20],\^tx_statistics_vector [19:5],NLW_vector_decode_inst_tx_statistics_vector_UNCONNECTED[4:1],\^tx_statistics_vector [0]}));
endmodule

(* ORIG_REF_NAME = "tri_mode_ethernet_mac_0_vector_decode" *) 
module tri_mode_ethernet_mac_0_tri_mode_ethernet_mac_0_vector_decode
   (increment_vector,
    rx_statistics_vector,
    rx_statistics_valid,
    tx_reset_out,
    tx_statistics_valid,
    gtx_clk,
    tx_statistics_vector,
    rx_reset_out);
  output [4:33]increment_vector;
  input [24:0]rx_statistics_vector;
  input rx_statistics_valid;
  input tx_reset_out;
  input tx_statistics_valid;
  input gtx_clk;
  input [20:0]tx_statistics_vector;
  input rx_reset_out;

  wire gtx_clk;
  wire \inc_vector[11]_i_1_n_0 ;
  wire \inc_vector[12]_i_1_n_0 ;
  wire \inc_vector[13]_i_1_n_0 ;
  wire \inc_vector[14]_i_1_n_0 ;
  wire \inc_vector[15]_i_1_n_0 ;
  wire \inc_vector[16]_i_1_n_0 ;
  wire \inc_vector[4]_i_1_n_0 ;
  wire \inc_vector[5]_i_1_n_0 ;
  wire \inc_vector[6]_i_1_n_0 ;
  wire \inc_vector[7]_i_1_n_0 ;
  wire \inc_vector[8]_i_1_n_0 ;
  wire \inc_vector[9]_i_1_n_0 ;
  wire [4:33]increment_vector;
  wire p_0_in;
  wire p_1_in;
  wire rx_0_63_i_2_n_0;
  wire rx_1024_max;
  wire rx_1024_max_i_1_n_0;
  wire rx_128_255_i_1_n_0;
  wire rx_128_255_reg_n_0;
  wire rx_256_511;
  wire rx_256_511_i_1_n_0;
  wire rx_512_1023;
  wire rx_512_1023_i_1_n_0;
  wire rx_64;
  wire rx_64_i_1_n_0;
  wire rx_65_127;
  wire rx_65_127_i_1_n_0;
  wire \rx_frame_length_reg_reg_n_0_[6] ;
  wire \rx_frame_length_reg_reg_n_0_[7] ;
  wire \rx_frame_length_reg_reg_n_0_[8] ;
  wire rx_good_frame;
  wire rx_good_frame_reg__0;
  wire rx_mult_64;
  wire rx_mult_64_i_1_n_0;
  wire rx_oversize_frame;
  wire rx_oversize_frame0;
  wire rx_oversize_frame_i_2_n_0;
  wire rx_oversize_frame_i_3_n_0;
  wire rx_oversize_frame_i_4_n_0;
  wire rx_reset_out;
  wire rx_statistics_valid;
  wire rx_statistics_valid_reg;
  wire [24:0]rx_statistics_vector;
  wire rx_stats_valid__0;
  wire rx_stats_valid_pipe;
  wire rx_stats_valid_reg;
  wire tx_0_64;
  wire tx_0_64_i_1_n_0;
  wire tx_0_64_i_2_n_0;
  wire tx_1024_max;
  wire tx_1024_max_i_1_n_0;
  wire tx_128_255_i_1_n_0;
  wire tx_128_255_reg_n_0;
  wire tx_256_511;
  wire tx_256_511_i_1_n_0;
  wire tx_512_1023;
  wire tx_512_1023_i_1_n_0;
  wire tx_65_127_i_1_n_0;
  wire tx_65_127_reg_n_0;
  wire \tx_frame_length_reg_reg_n_0_[10] ;
  wire \tx_frame_length_reg_reg_n_0_[6] ;
  wire \tx_frame_length_reg_reg_n_0_[7] ;
  wire \tx_frame_length_reg_reg_n_0_[8] ;
  wire \tx_frame_length_reg_reg_n_0_[9] ;
  wire tx_good_frame;
  wire tx_good_frame_reg__0;
  wire tx_mult_64;
  wire tx_mult_64_i_1_n_0;
  wire tx_oversize_frame;
  wire tx_oversize_frame0;
  wire tx_oversize_frame_i_2_n_0;
  wire tx_oversize_frame_i_3_n_0;
  wire tx_reset_out;
  wire tx_statistics_valid;
  wire tx_statistics_valid_reg;
  wire [20:0]tx_statistics_vector;
  wire tx_stats_valid;
  wire tx_stats_valid_pipe;
  wire tx_stats_valid_reg;

  LUT4 #(
    .INIT(16'h7F80)) 
    \inc_vector[11]_i_1 
       (.I0(tx_good_frame_reg__0),
        .I1(tx_stats_valid_reg),
        .I2(tx_0_64),
        .I3(increment_vector[11]),
        .O(\inc_vector[11]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \inc_vector[12]_i_1 
       (.I0(tx_65_127_reg_n_0),
        .I1(tx_good_frame_reg__0),
        .I2(tx_stats_valid_reg),
        .I3(increment_vector[12]),
        .O(\inc_vector[12]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \inc_vector[13]_i_1 
       (.I0(tx_128_255_reg_n_0),
        .I1(tx_good_frame_reg__0),
        .I2(tx_stats_valid_reg),
        .I3(increment_vector[13]),
        .O(\inc_vector[13]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \inc_vector[14]_i_1 
       (.I0(tx_256_511),
        .I1(tx_good_frame_reg__0),
        .I2(tx_stats_valid_reg),
        .I3(increment_vector[14]),
        .O(\inc_vector[14]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \inc_vector[15]_i_1 
       (.I0(tx_512_1023),
        .I1(tx_good_frame_reg__0),
        .I2(tx_stats_valid_reg),
        .I3(increment_vector[15]),
        .O(\inc_vector[15]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \inc_vector[16]_i_1 
       (.I0(tx_1024_max),
        .I1(tx_good_frame_reg__0),
        .I2(tx_stats_valid_reg),
        .I3(increment_vector[16]),
        .O(\inc_vector[16]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \inc_vector[4]_i_1 
       (.I0(rx_64),
        .I1(rx_stats_valid_reg),
        .I2(rx_good_frame_reg__0),
        .I3(increment_vector[4]),
        .O(\inc_vector[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \inc_vector[5]_i_1 
       (.I0(rx_65_127),
        .I1(rx_stats_valid_reg),
        .I2(rx_good_frame_reg__0),
        .I3(increment_vector[5]),
        .O(\inc_vector[5]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \inc_vector[6]_i_1 
       (.I0(rx_128_255_reg_n_0),
        .I1(rx_stats_valid_reg),
        .I2(rx_good_frame_reg__0),
        .I3(increment_vector[6]),
        .O(\inc_vector[6]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \inc_vector[7]_i_1 
       (.I0(rx_256_511),
        .I1(rx_stats_valid_reg),
        .I2(rx_good_frame_reg__0),
        .I3(increment_vector[7]),
        .O(\inc_vector[7]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \inc_vector[8]_i_1 
       (.I0(rx_512_1023),
        .I1(rx_stats_valid_reg),
        .I2(rx_good_frame_reg__0),
        .I3(increment_vector[8]),
        .O(\inc_vector[8]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \inc_vector[9]_i_1 
       (.I0(rx_1024_max),
        .I1(rx_stats_valid_reg),
        .I2(rx_good_frame_reg__0),
        .I3(increment_vector[9]),
        .O(\inc_vector[9]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \inc_vector_reg[11] 
       (.C(gtx_clk),
        .CE(1'b1),
        .D(\inc_vector[11]_i_1_n_0 ),
        .Q(increment_vector[11]),
        .R(tx_reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \inc_vector_reg[12] 
       (.C(gtx_clk),
        .CE(1'b1),
        .D(\inc_vector[12]_i_1_n_0 ),
        .Q(increment_vector[12]),
        .R(tx_reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \inc_vector_reg[13] 
       (.C(gtx_clk),
        .CE(1'b1),
        .D(\inc_vector[13]_i_1_n_0 ),
        .Q(increment_vector[13]),
        .R(tx_reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \inc_vector_reg[14] 
       (.C(gtx_clk),
        .CE(1'b1),
        .D(\inc_vector[14]_i_1_n_0 ),
        .Q(increment_vector[14]),
        .R(tx_reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \inc_vector_reg[15] 
       (.C(gtx_clk),
        .CE(1'b1),
        .D(\inc_vector[15]_i_1_n_0 ),
        .Q(increment_vector[15]),
        .R(tx_reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \inc_vector_reg[16] 
       (.C(gtx_clk),
        .CE(1'b1),
        .D(\inc_vector[16]_i_1_n_0 ),
        .Q(increment_vector[16]),
        .R(tx_reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \inc_vector_reg[4] 
       (.C(gtx_clk),
        .CE(1'b1),
        .D(\inc_vector[4]_i_1_n_0 ),
        .Q(increment_vector[4]),
        .R(rx_reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \inc_vector_reg[5] 
       (.C(gtx_clk),
        .CE(1'b1),
        .D(\inc_vector[5]_i_1_n_0 ),
        .Q(increment_vector[5]),
        .R(rx_reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \inc_vector_reg[6] 
       (.C(gtx_clk),
        .CE(1'b1),
        .D(\inc_vector[6]_i_1_n_0 ),
        .Q(increment_vector[6]),
        .R(rx_reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \inc_vector_reg[7] 
       (.C(gtx_clk),
        .CE(1'b1),
        .D(\inc_vector[7]_i_1_n_0 ),
        .Q(increment_vector[7]),
        .R(rx_reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \inc_vector_reg[8] 
       (.C(gtx_clk),
        .CE(1'b1),
        .D(\inc_vector[8]_i_1_n_0 ),
        .Q(increment_vector[8]),
        .R(rx_reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \inc_vector_reg[9] 
       (.C(gtx_clk),
        .CE(1'b1),
        .D(\inc_vector[9]_i_1_n_0 ),
        .Q(increment_vector[9]),
        .R(rx_reset_out));
  LUT4 #(
    .INIT(16'hFFFE)) 
    rx_0_63_i_2
       (.I0(p_1_in),
        .I1(p_0_in),
        .I2(\rx_frame_length_reg_reg_n_0_[7] ),
        .I3(\rx_frame_length_reg_reg_n_0_[8] ),
        .O(rx_0_63_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT3 #(
    .INIT(8'h02)) 
    rx_1024_max_i_1
       (.I0(p_0_in),
        .I1(rx_oversize_frame),
        .I2(rx_reset_out),
        .O(rx_1024_max_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rx_1024_max_reg
       (.C(gtx_clk),
        .CE(1'b1),
        .D(rx_1024_max_i_1_n_0),
        .Q(rx_1024_max),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    rx_128_255_i_1
       (.I0(\rx_frame_length_reg_reg_n_0_[7] ),
        .I1(rx_oversize_frame),
        .I2(\rx_frame_length_reg_reg_n_0_[8] ),
        .I3(p_1_in),
        .I4(p_0_in),
        .I5(rx_reset_out),
        .O(rx_128_255_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rx_128_255_reg
       (.C(gtx_clk),
        .CE(1'b1),
        .D(rx_128_255_i_1_n_0),
        .Q(rx_128_255_reg_n_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT5 #(
    .INIT(32'h00000002)) 
    rx_256_511_i_1
       (.I0(\rx_frame_length_reg_reg_n_0_[8] ),
        .I1(rx_oversize_frame),
        .I2(p_1_in),
        .I3(p_0_in),
        .I4(rx_reset_out),
        .O(rx_256_511_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rx_256_511_reg
       (.C(gtx_clk),
        .CE(1'b1),
        .D(rx_256_511_i_1_n_0),
        .Q(rx_256_511),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT4 #(
    .INIT(16'h0002)) 
    rx_512_1023_i_1
       (.I0(p_1_in),
        .I1(rx_oversize_frame),
        .I2(p_0_in),
        .I3(rx_reset_out),
        .O(rx_512_1023_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rx_512_1023_reg
       (.C(gtx_clk),
        .CE(1'b1),
        .D(rx_512_1023_i_1_n_0),
        .Q(rx_512_1023),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT5 #(
    .INIT(32'h00000200)) 
    rx_64_i_1
       (.I0(rx_mult_64),
        .I1(rx_0_63_i_2_n_0),
        .I2(rx_reset_out),
        .I3(\rx_frame_length_reg_reg_n_0_[6] ),
        .I4(rx_oversize_frame),
        .O(rx_64_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rx_64_reg
       (.C(gtx_clk),
        .CE(1'b1),
        .D(rx_64_i_1_n_0),
        .Q(rx_64),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT5 #(
    .INIT(32'h00000100)) 
    rx_65_127_i_1
       (.I0(rx_0_63_i_2_n_0),
        .I1(rx_reset_out),
        .I2(rx_oversize_frame),
        .I3(\rx_frame_length_reg_reg_n_0_[6] ),
        .I4(rx_mult_64),
        .O(rx_65_127_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rx_65_127_reg
       (.C(gtx_clk),
        .CE(1'b1),
        .D(rx_65_127_i_1_n_0),
        .Q(rx_65_127),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_frame_length_reg_reg[10] 
       (.C(gtx_clk),
        .CE(1'b1),
        .D(rx_statistics_vector[14]),
        .Q(p_0_in),
        .R(rx_reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \rx_frame_length_reg_reg[6] 
       (.C(gtx_clk),
        .CE(1'b1),
        .D(rx_statistics_vector[10]),
        .Q(\rx_frame_length_reg_reg_n_0_[6] ),
        .R(rx_reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \rx_frame_length_reg_reg[7] 
       (.C(gtx_clk),
        .CE(1'b1),
        .D(rx_statistics_vector[11]),
        .Q(\rx_frame_length_reg_reg_n_0_[7] ),
        .R(rx_reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \rx_frame_length_reg_reg[8] 
       (.C(gtx_clk),
        .CE(1'b1),
        .D(rx_statistics_vector[12]),
        .Q(\rx_frame_length_reg_reg_n_0_[8] ),
        .R(rx_reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \rx_frame_length_reg_reg[9] 
       (.C(gtx_clk),
        .CE(1'b1),
        .D(rx_statistics_vector[13]),
        .Q(p_1_in),
        .R(rx_reset_out));
  FDRE #(
    .INIT(1'b0)) 
    rx_good_frame_reg
       (.C(gtx_clk),
        .CE(rx_stats_valid__0),
        .D(rx_statistics_vector[0]),
        .Q(rx_good_frame),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    rx_good_frame_reg_reg
       (.C(gtx_clk),
        .CE(1'b1),
        .D(rx_good_frame),
        .Q(rx_good_frame_reg__0),
        .R(rx_reset_out));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    rx_mult_64_i_1
       (.I0(rx_statistics_vector[8]),
        .I1(rx_statistics_vector[9]),
        .I2(rx_statistics_vector[4]),
        .I3(rx_statistics_vector[5]),
        .I4(rx_statistics_vector[7]),
        .I5(rx_statistics_vector[6]),
        .O(rx_mult_64_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rx_mult_64_reg
       (.C(gtx_clk),
        .CE(1'b1),
        .D(rx_mult_64_i_1_n_0),
        .Q(rx_mult_64),
        .R(rx_reset_out));
  LUT4 #(
    .INIT(16'hFF40)) 
    rx_oversize_frame_i_1
       (.I0(rx_statistics_vector[19]),
        .I1(rx_oversize_frame_i_2_n_0),
        .I2(rx_oversize_frame_i_3_n_0),
        .I3(rx_oversize_frame_i_4_n_0),
        .O(rx_oversize_frame0));
  LUT5 #(
    .INIT(32'h80000000)) 
    rx_oversize_frame_i_2
       (.I0(rx_statistics_vector[9]),
        .I1(rx_statistics_vector[10]),
        .I2(rx_statistics_vector[11]),
        .I3(rx_statistics_vector[14]),
        .I4(rx_statistics_vector[12]),
        .O(rx_oversize_frame_i_2_n_0));
  LUT6 #(
    .INIT(64'hF0F0F080F8F0F0F0)) 
    rx_oversize_frame_i_3
       (.I0(rx_statistics_vector[4]),
        .I1(rx_statistics_vector[5]),
        .I2(rx_statistics_vector[8]),
        .I3(rx_statistics_vector[7]),
        .I4(rx_statistics_vector[6]),
        .I5(rx_statistics_vector[20]),
        .O(rx_oversize_frame_i_3_n_0));
  LUT6 #(
    .INIT(64'h0000FFFF0000FEEE)) 
    rx_oversize_frame_i_4
       (.I0(rx_statistics_vector[16]),
        .I1(rx_statistics_vector[15]),
        .I2(rx_statistics_vector[14]),
        .I3(rx_statistics_vector[13]),
        .I4(rx_statistics_vector[19]),
        .I5(rx_statistics_vector[17]),
        .O(rx_oversize_frame_i_4_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rx_oversize_frame_reg
       (.C(gtx_clk),
        .CE(1'b1),
        .D(rx_oversize_frame0),
        .Q(rx_oversize_frame),
        .R(rx_reset_out));
  FDRE #(
    .INIT(1'b0)) 
    rx_statistics_valid_reg_reg
       (.C(gtx_clk),
        .CE(1'b1),
        .D(rx_statistics_valid),
        .Q(rx_statistics_valid_reg),
        .R(rx_reset_out));
  LUT3 #(
    .INIT(8'h20)) 
    rx_stats_valid
       (.I0(rx_statistics_vector[24]),
        .I1(rx_statistics_valid_reg),
        .I2(rx_statistics_valid),
        .O(rx_stats_valid__0));
  FDRE #(
    .INIT(1'b0)) 
    rx_stats_valid_pipe_reg
       (.C(gtx_clk),
        .CE(1'b1),
        .D(rx_stats_valid__0),
        .Q(rx_stats_valid_pipe),
        .R(rx_reset_out));
  FDRE #(
    .INIT(1'b0)) 
    rx_stats_valid_reg_reg
       (.C(gtx_clk),
        .CE(1'b1),
        .D(rx_stats_valid_pipe),
        .Q(rx_stats_valid_reg),
        .R(rx_reset_out));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    tx_0_64_i_1
       (.I0(tx_mult_64),
        .I1(tx_0_64_i_2_n_0),
        .I2(\tx_frame_length_reg_reg_n_0_[6] ),
        .O(tx_0_64_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    tx_0_64_i_2
       (.I0(\tx_frame_length_reg_reg_n_0_[8] ),
        .I1(\tx_frame_length_reg_reg_n_0_[10] ),
        .I2(tx_oversize_frame),
        .I3(tx_reset_out),
        .I4(\tx_frame_length_reg_reg_n_0_[9] ),
        .I5(\tx_frame_length_reg_reg_n_0_[7] ),
        .O(tx_0_64_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    tx_0_64_reg
       (.C(gtx_clk),
        .CE(1'b1),
        .D(tx_0_64_i_1_n_0),
        .Q(tx_0_64),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h10)) 
    tx_1024_max_i_1
       (.I0(tx_reset_out),
        .I1(tx_oversize_frame),
        .I2(\tx_frame_length_reg_reg_n_0_[10] ),
        .O(tx_1024_max_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    tx_1024_max_reg
       (.C(gtx_clk),
        .CE(1'b1),
        .D(tx_1024_max_i_1_n_0),
        .Q(tx_1024_max),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000000100000000)) 
    tx_128_255_i_1
       (.I0(\tx_frame_length_reg_reg_n_0_[8] ),
        .I1(\tx_frame_length_reg_reg_n_0_[10] ),
        .I2(tx_oversize_frame),
        .I3(tx_reset_out),
        .I4(\tx_frame_length_reg_reg_n_0_[9] ),
        .I5(\tx_frame_length_reg_reg_n_0_[7] ),
        .O(tx_128_255_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    tx_128_255_reg
       (.C(gtx_clk),
        .CE(1'b1),
        .D(tx_128_255_i_1_n_0),
        .Q(tx_128_255_reg_n_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT5 #(
    .INIT(32'h00010000)) 
    tx_256_511_i_1
       (.I0(\tx_frame_length_reg_reg_n_0_[9] ),
        .I1(tx_reset_out),
        .I2(tx_oversize_frame),
        .I3(\tx_frame_length_reg_reg_n_0_[10] ),
        .I4(\tx_frame_length_reg_reg_n_0_[8] ),
        .O(tx_256_511_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    tx_256_511_reg
       (.C(gtx_clk),
        .CE(1'b1),
        .D(tx_256_511_i_1_n_0),
        .Q(tx_256_511),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT4 #(
    .INIT(16'h0100)) 
    tx_512_1023_i_1
       (.I0(\tx_frame_length_reg_reg_n_0_[10] ),
        .I1(tx_oversize_frame),
        .I2(tx_reset_out),
        .I3(\tx_frame_length_reg_reg_n_0_[9] ),
        .O(tx_512_1023_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    tx_512_1023_reg
       (.C(gtx_clk),
        .CE(1'b1),
        .D(tx_512_1023_i_1_n_0),
        .Q(tx_512_1023),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT3 #(
    .INIT(8'h08)) 
    tx_65_127_i_1
       (.I0(\tx_frame_length_reg_reg_n_0_[6] ),
        .I1(tx_0_64_i_2_n_0),
        .I2(tx_mult_64),
        .O(tx_65_127_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    tx_65_127_reg
       (.C(gtx_clk),
        .CE(1'b1),
        .D(tx_65_127_i_1_n_0),
        .Q(tx_65_127_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tx_frame_length_reg_reg[10] 
       (.C(gtx_clk),
        .CE(1'b1),
        .D(tx_statistics_vector[15]),
        .Q(\tx_frame_length_reg_reg_n_0_[10] ),
        .R(tx_reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \tx_frame_length_reg_reg[6] 
       (.C(gtx_clk),
        .CE(1'b1),
        .D(tx_statistics_vector[11]),
        .Q(\tx_frame_length_reg_reg_n_0_[6] ),
        .R(tx_reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \tx_frame_length_reg_reg[7] 
       (.C(gtx_clk),
        .CE(1'b1),
        .D(tx_statistics_vector[12]),
        .Q(\tx_frame_length_reg_reg_n_0_[7] ),
        .R(tx_reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \tx_frame_length_reg_reg[8] 
       (.C(gtx_clk),
        .CE(1'b1),
        .D(tx_statistics_vector[13]),
        .Q(\tx_frame_length_reg_reg_n_0_[8] ),
        .R(tx_reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \tx_frame_length_reg_reg[9] 
       (.C(gtx_clk),
        .CE(1'b1),
        .D(tx_statistics_vector[14]),
        .Q(\tx_frame_length_reg_reg_n_0_[9] ),
        .R(tx_reset_out));
  FDRE #(
    .INIT(1'b0)) 
    tx_good_frame_reg
       (.C(gtx_clk),
        .CE(tx_stats_valid),
        .D(tx_statistics_vector[0]),
        .Q(tx_good_frame),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    tx_good_frame_reg_reg
       (.C(gtx_clk),
        .CE(1'b1),
        .D(tx_good_frame),
        .Q(tx_good_frame_reg__0),
        .R(tx_reset_out));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    tx_mult_64_i_1
       (.I0(tx_statistics_vector[9]),
        .I1(tx_statistics_vector[10]),
        .I2(tx_statistics_vector[5]),
        .I3(tx_statistics_vector[6]),
        .I4(tx_statistics_vector[8]),
        .I5(tx_statistics_vector[7]),
        .O(tx_mult_64_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    tx_mult_64_reg
       (.C(gtx_clk),
        .CE(1'b1),
        .D(tx_mult_64_i_1_n_0),
        .Q(tx_mult_64),
        .R(tx_reset_out));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFEFFFE)) 
    tx_oversize_frame_i_1
       (.I0(tx_oversize_frame_i_2_n_0),
        .I1(tx_statistics_vector[17]),
        .I2(tx_statistics_vector[18]),
        .I3(tx_statistics_vector[16]),
        .I4(tx_statistics_vector[14]),
        .I5(tx_statistics_vector[15]),
        .O(tx_oversize_frame0));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    tx_oversize_frame_i_2
       (.I0(tx_statistics_vector[13]),
        .I1(tx_statistics_vector[15]),
        .I2(tx_statistics_vector[12]),
        .I3(tx_statistics_vector[11]),
        .I4(tx_statistics_vector[10]),
        .I5(tx_oversize_frame_i_3_n_0),
        .O(tx_oversize_frame_i_2_n_0));
  LUT6 #(
    .INIT(64'hF0F0F080F8F0F0F0)) 
    tx_oversize_frame_i_3
       (.I0(tx_statistics_vector[5]),
        .I1(tx_statistics_vector[6]),
        .I2(tx_statistics_vector[9]),
        .I3(tx_statistics_vector[8]),
        .I4(tx_statistics_vector[7]),
        .I5(tx_statistics_vector[19]),
        .O(tx_oversize_frame_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    tx_oversize_frame_reg
       (.C(gtx_clk),
        .CE(1'b1),
        .D(tx_oversize_frame0),
        .Q(tx_oversize_frame),
        .R(tx_reset_out));
  LUT2 #(
    .INIT(4'h2)) 
    tx_pause_frame_i_1
       (.I0(tx_statistics_valid),
        .I1(tx_statistics_valid_reg),
        .O(tx_stats_valid));
  FDRE #(
    .INIT(1'b0)) 
    tx_statistics_valid_reg_reg
       (.C(gtx_clk),
        .CE(1'b1),
        .D(tx_statistics_valid),
        .Q(tx_statistics_valid_reg),
        .R(tx_reset_out));
  FDRE #(
    .INIT(1'b0)) 
    tx_stats_valid_pipe_reg
       (.C(gtx_clk),
        .CE(1'b1),
        .D(tx_stats_valid),
        .Q(tx_stats_valid_pipe),
        .R(tx_reset_out));
  FDRE #(
    .INIT(1'b0)) 
    tx_stats_valid_reg_reg
       (.C(gtx_clk),
        .CE(1'b1),
        .D(tx_stats_valid_pipe),
        .Q(tx_stats_valid_reg),
        .R(tx_reset_out));
endmodule

module tri_mode_ethernet_mac_0_tx_client_fifo
   (wr_eof_reg,
    tx_axis_mac_tvalid,
    tx_axis_mac_tlast,
    wr_fifo_full_reg_0,
    DI,
    Q,
    E,
    wr_ovflow_dst_rdy_reg_0,
    S,
    \gen_fd_count.wr_frames_reg[7]_0 ,
    \tx_axis_mac_tdata_int_reg[7]_0 ,
    userclk2_out,
    tx_mac_aclk,
    \FSM_sequential_wr_state_reg[0]_0 ,
    p_16_out,
    p_23_out,
    tx_axis_fifo_tvalid,
    tx_axis_fifo_tlast,
    rx_fifo_resetn,
    SR,
    \tx_axis_fifo_tdata_reg[7] ,
    dob_8,
    tx_axis_mac_tready,
    D,
    \gen_fd_count.wr_frames_reg[8]_0 );
  output wr_eof_reg;
  output tx_axis_mac_tvalid;
  output tx_axis_mac_tlast;
  output wr_fifo_full_reg_0;
  output [3:0]DI;
  output [3:0]Q;
  output [0:0]E;
  output wr_ovflow_dst_rdy_reg_0;
  output [3:0]S;
  output [3:0]\gen_fd_count.wr_frames_reg[7]_0 ;
  output [7:0]\tx_axis_mac_tdata_int_reg[7]_0 ;
  input userclk2_out;
  input tx_mac_aclk;
  input [0:0]\FSM_sequential_wr_state_reg[0]_0 ;
  input p_16_out;
  input p_23_out;
  input tx_axis_fifo_tvalid;
  input tx_axis_fifo_tlast;
  input rx_fifo_resetn;
  input [0:0]SR;
  input \tx_axis_fifo_tdata_reg[7] ;
  input dob_8;
  input tx_axis_mac_tready;
  input [7:0]D;
  input [7:0]\gen_fd_count.wr_frames_reg[8]_0 ;

  wire [7:0]D;
  wire [3:0]DI;
  wire [0:0]E;
  wire \FSM_sequential_rd_state[0]_i_2_n_0 ;
  wire \FSM_sequential_rd_state[1]_i_2_n_0 ;
  wire \FSM_sequential_rd_state[2]_i_2_n_0 ;
  wire \FSM_sequential_rd_state[3]_i_2_n_0 ;
  wire \FSM_sequential_wr_state[0]_i_2_n_0 ;
  wire \FSM_sequential_wr_state[1]_i_3_n_0 ;
  wire \FSM_sequential_wr_state[1]_i_4_n_0 ;
  wire [0:0]\FSM_sequential_wr_state_reg[0]_0 ;
  wire [3:0]Q;
  wire [3:0]S;
  wire [0:0]SR;
  wire \data_count[3]_i_1_n_0 ;
  wire \data_count[3]_i_2_n_0 ;
  wire [3:2]data_count_reg;
  wire \data_count_reg_n_0_[0] ;
  wire \data_count_reg_n_0_[1] ;
  wire dob_8;
  wire frame_in_fifo;
  wire frame_in_fifo_valid;
  wire frame_in_fifo_valid_delay;
  wire frame_in_fifo_valid_i_1_n_0;
  wire frame_in_fifo_valid_sync;
  wire frame_in_fifo_valid_tog;
  wire frame_in_fifo_valid_tog_i_1_n_0;
  wire frames_in_fifo;
  wire \gen_fd_addr.rd_addr[0]_i_2_n_0 ;
  wire \gen_fd_addr.rd_addr[0]_i_3_n_0 ;
  wire \gen_fd_addr.rd_addr[0]_i_4_n_0 ;
  wire \gen_fd_addr.rd_addr[0]_i_5_n_0 ;
  wire \gen_fd_addr.rd_addr[0]_i_6_n_0 ;
  wire \gen_fd_addr.rd_addr[0]_i_7_n_0 ;
  wire \gen_fd_addr.rd_addr[4]_i_2_n_0 ;
  wire \gen_fd_addr.rd_addr[4]_i_3_n_0 ;
  wire \gen_fd_addr.rd_addr[4]_i_4_n_0 ;
  wire \gen_fd_addr.rd_addr[4]_i_5_n_0 ;
  wire \gen_fd_addr.rd_addr[8]_i_2_n_0 ;
  wire \gen_fd_addr.rd_addr[8]_i_3_n_0 ;
  wire \gen_fd_addr.rd_addr[8]_i_4_n_0 ;
  wire \gen_fd_addr.rd_addr[8]_i_5_n_0 ;
  wire [11:0]\gen_fd_addr.rd_addr_reg ;
  wire \gen_fd_addr.rd_addr_reg[0]_i_1_n_0 ;
  wire \gen_fd_addr.rd_addr_reg[0]_i_1_n_4 ;
  wire \gen_fd_addr.rd_addr_reg[0]_i_1_n_5 ;
  wire \gen_fd_addr.rd_addr_reg[0]_i_1_n_6 ;
  wire \gen_fd_addr.rd_addr_reg[0]_i_1_n_7 ;
  wire \gen_fd_addr.rd_addr_reg[4]_i_1_n_0 ;
  wire \gen_fd_addr.rd_addr_reg[4]_i_1_n_4 ;
  wire \gen_fd_addr.rd_addr_reg[4]_i_1_n_5 ;
  wire \gen_fd_addr.rd_addr_reg[4]_i_1_n_6 ;
  wire \gen_fd_addr.rd_addr_reg[4]_i_1_n_7 ;
  wire \gen_fd_addr.rd_addr_reg[8]_i_1_n_4 ;
  wire \gen_fd_addr.rd_addr_reg[8]_i_1_n_5 ;
  wire \gen_fd_addr.rd_addr_reg[8]_i_1_n_6 ;
  wire \gen_fd_addr.rd_addr_reg[8]_i_1_n_7 ;
  wire \gen_fd_count.wr_frames[0]_i_1_n_0 ;
  wire \gen_fd_count.wr_frames[8]_i_1_n_0 ;
  wire [8:7]\gen_fd_count.wr_frames_reg ;
  wire [3:0]\gen_fd_count.wr_frames_reg[7]_0 ;
  wire [7:0]\gen_fd_count.wr_frames_reg[8]_0 ;
  wire [3:0]p_0_in;
  wire [3:0]p_0_in__0;
  wire p_16_out;
  wire p_20_out;
  wire p_23_out;
  wire p_2_in;
  wire [3:0]rd_16_count_reg;
  wire [11:0]rd_addr_txfer;
  wire [7:0]rd_data_delay;
  wire [7:0]rd_data_pipe;
  wire [11:0]rd_dec_addr;
  wire [11:0]rd_dec_addr0;
  wire rd_dec_addr0_carry__0_i_1_n_0;
  wire rd_dec_addr0_carry__0_i_2_n_0;
  wire rd_dec_addr0_carry__0_i_3_n_0;
  wire rd_dec_addr0_carry__0_i_4_n_0;
  wire rd_dec_addr0_carry__0_n_0;
  wire rd_dec_addr0_carry__1_i_1_n_0;
  wire rd_dec_addr0_carry__1_i_2_n_0;
  wire rd_dec_addr0_carry__1_i_3_n_0;
  wire rd_dec_addr0_carry_i_1_n_0;
  wire rd_dec_addr0_carry_i_2_n_0;
  wire rd_dec_addr0_carry_i_3_n_0;
  wire rd_dec_addr0_carry_i_4_n_0;
  wire rd_dec_addr0_carry_n_0;
  wire rd_en;
  wire rd_eof;
  wire rd_eof_pipe;
  wire rd_eof_reg0;
  wire rd_eof_reg__0;
  wire [3:0]rd_nxt_state__0;
  wire [11:0]rd_start_addr;
  wire [3:0]rd_state;
  wire rd_tran_frame_tog;
  wire rd_tran_frame_tog_i_1_n_0;
  wire rd_transmit_frame;
  wire rd_txfer_en;
  wire rd_txfer_tog;
  wire rd_txfer_tog_i_1_n_0;
  wire rx_fifo_resetn;
  wire \tx_axis_fifo_tdata_reg[7] ;
  wire tx_axis_fifo_tlast;
  wire tx_axis_fifo_tvalid;
  wire \tx_axis_mac_tdata_int[7]_i_1_n_0 ;
  wire [7:0]\tx_axis_mac_tdata_int_reg[7]_0 ;
  wire tx_axis_mac_tlast;
  wire tx_axis_mac_tlast_i_1_n_0;
  wire tx_axis_mac_tlast_i_2_n_0;
  wire tx_axis_mac_tready;
  wire tx_axis_mac_tvalid;
  wire tx_axis_mac_tvalid_i_1_n_0;
  wire tx_mac_aclk;
  wire userclk2_out;
  wire wr_accept_bram;
  wire \wr_accept_pipe[0]_i_2_n_0 ;
  wire \wr_accept_pipe_reg[0]_2 ;
  wire \wr_accept_pipe_reg[1]_3 ;
  wire [11:0]wr_addr0;
  wire wr_addr0_carry__0_n_0;
  wire wr_addr0_carry_n_0;
  wire \wr_addr[0]_i_1_n_0 ;
  wire \wr_addr[0]_i_3_n_0 ;
  wire \wr_addr[0]_i_4_n_0 ;
  wire \wr_addr[0]_i_5_n_0 ;
  wire \wr_addr[0]_i_6_n_0 ;
  wire \wr_addr[0]_i_7_n_0 ;
  wire \wr_addr[4]_i_2_n_0 ;
  wire \wr_addr[4]_i_3_n_0 ;
  wire \wr_addr[4]_i_4_n_0 ;
  wire \wr_addr[4]_i_5_n_0 ;
  wire \wr_addr[8]_i_2_n_0 ;
  wire \wr_addr[8]_i_3_n_0 ;
  wire \wr_addr[8]_i_4_n_0 ;
  wire \wr_addr[8]_i_5_n_0 ;
  wire [11:2]wr_addr_diff0;
  wire wr_addr_diff0_carry__0_i_1_n_0;
  wire wr_addr_diff0_carry__0_i_2_n_0;
  wire wr_addr_diff0_carry__0_i_3_n_0;
  wire wr_addr_diff0_carry__0_i_4_n_0;
  wire wr_addr_diff0_carry__0_n_0;
  wire wr_addr_diff0_carry__1_i_1_n_0;
  wire wr_addr_diff0_carry__1_i_2_n_0;
  wire wr_addr_diff0_carry__1_i_3_n_0;
  wire wr_addr_diff0_carry__1_i_4_n_0;
  wire wr_addr_diff0_carry_i_1_n_0;
  wire wr_addr_diff0_carry_i_2_n_0;
  wire wr_addr_diff0_carry_i_3_n_0;
  wire wr_addr_diff0_carry_i_4_n_0;
  wire wr_addr_diff0_carry_n_0;
  wire \wr_addr_diff_reg_n_0_[11] ;
  wire \wr_addr_diff_reg_n_0_[2] ;
  wire \wr_addr_diff_reg_n_0_[3] ;
  wire \wr_addr_diff_reg_n_0_[4] ;
  wire \wr_addr_diff_reg_n_0_[5] ;
  wire \wr_addr_diff_reg_n_0_[6] ;
  wire \wr_addr_diff_reg_n_0_[7] ;
  wire \wr_addr_diff_reg_n_0_[8] ;
  wire \wr_addr_diff_reg_n_0_[9] ;
  wire [11:0]wr_addr_reg;
  wire \wr_addr_reg[0]_i_2_n_0 ;
  wire \wr_addr_reg[0]_i_2_n_4 ;
  wire \wr_addr_reg[0]_i_2_n_5 ;
  wire \wr_addr_reg[0]_i_2_n_6 ;
  wire \wr_addr_reg[0]_i_2_n_7 ;
  wire \wr_addr_reg[4]_i_1_n_0 ;
  wire \wr_addr_reg[4]_i_1_n_4 ;
  wire \wr_addr_reg[4]_i_1_n_5 ;
  wire \wr_addr_reg[4]_i_1_n_6 ;
  wire \wr_addr_reg[4]_i_1_n_7 ;
  wire \wr_addr_reg[8]_i_1_n_4 ;
  wire \wr_addr_reg[8]_i_1_n_5 ;
  wire \wr_addr_reg[8]_i_1_n_6 ;
  wire \wr_addr_reg[8]_i_1_n_7 ;
  wire [7:0]\wr_data_pipe_reg[0]_8 ;
  wire [7:0]\wr_data_pipe_reg[1]_9 ;
  wire [8:0]wr_eof_data_bram;
  wire \wr_eof_pipe_reg_n_0_[0] ;
  wire \wr_eof_pipe_reg_n_0_[1] ;
  wire wr_eof_reg;
  wire wr_eof_reg_i_1_n_0;
  wire wr_eof_state;
  wire wr_eof_state_reg;
  wire wr_fifo_full;
  wire wr_fifo_full0;
  wire wr_fifo_full_i_2_n_0;
  wire wr_fifo_full_reg_0;
  wire wr_frame_in_fifo;
  wire wr_frame_in_fifo_i_1_n_0;
  wire wr_frame_in_fifo_i_2_n_0;
  wire wr_frames_in_fifo;
  wire wr_frames_in_fifo_i_1_n_0;
  wire [1:0]wr_nxt_state__0;
  wire wr_ovflow_dst_rdy;
  wire wr_ovflow_dst_rdy_i_1_n_0;
  wire wr_ovflow_dst_rdy_i_2_n_0;
  wire wr_ovflow_dst_rdy_reg_0;
  (* async_reg = "true" *) wire [11:0]wr_rd_addr;
  wire \wr_sof_pipe_reg[0]_4 ;
  wire \wr_sof_pipe_reg[1]__0 ;
  wire [11:0]wr_start_addr;
  wire wr_start_addr_load;
  wire [1:0]wr_state;
  wire wr_tran_frame_delay;
  wire wr_tran_frame_sync;
  wire wr_transmit_frame;
  wire wr_transmit_frame0;
  wire wr_transmit_frame_delay;
  wire wr_txfer_en;
  wire wr_txfer_tog_delay;
  wire wr_txfer_tog_sync;
  wire [2:0]\NLW_gen_fd_addr.rd_addr_reg[0]_i_1_CO_UNCONNECTED ;
  wire [2:0]\NLW_gen_fd_addr.rd_addr_reg[4]_i_1_CO_UNCONNECTED ;
  wire [3:0]\NLW_gen_fd_addr.rd_addr_reg[8]_i_1_CO_UNCONNECTED ;
  wire [2:0]NLW_rd_dec_addr0_carry_CO_UNCONNECTED;
  wire [2:0]NLW_rd_dec_addr0_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_rd_dec_addr0_carry__1_CO_UNCONNECTED;
  wire [3:3]NLW_rd_dec_addr0_carry__1_O_UNCONNECTED;
  wire [2:0]NLW_wr_addr0_carry_CO_UNCONNECTED;
  wire [2:0]NLW_wr_addr0_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_wr_addr0_carry__1_CO_UNCONNECTED;
  wire [3:3]NLW_wr_addr0_carry__1_O_UNCONNECTED;
  wire [2:0]NLW_wr_addr_diff0_carry_CO_UNCONNECTED;
  wire [1:0]NLW_wr_addr_diff0_carry_O_UNCONNECTED;
  wire [2:0]NLW_wr_addr_diff0_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_wr_addr_diff0_carry__1_CO_UNCONNECTED;
  wire [2:0]\NLW_wr_addr_reg[0]_i_2_CO_UNCONNECTED ;
  wire [2:0]\NLW_wr_addr_reg[4]_i_1_CO_UNCONNECTED ;
  wire [3:0]\NLW_wr_addr_reg[8]_i_1_CO_UNCONNECTED ;

  LUT6 #(
    .INIT(64'h0000000022EE2EEE)) 
    \FSM_sequential_rd_state[0]_i_1 
       (.I0(\FSM_sequential_rd_state[0]_i_2_n_0 ),
        .I1(rd_state[2]),
        .I2(rd_state[1]),
        .I3(tx_axis_mac_tready),
        .I4(rd_state[0]),
        .I5(rd_state[3]),
        .O(rd_nxt_state__0[0]));
  LUT5 #(
    .INIT(32'h0000FFEA)) 
    \FSM_sequential_rd_state[0]_i_2 
       (.I0(frames_in_fifo),
        .I1(frame_in_fifo),
        .I2(frame_in_fifo_valid),
        .I3(rd_state[1]),
        .I4(rd_state[0]),
        .O(\FSM_sequential_rd_state[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_rd_state[1]_i_1 
       (.I0(\FSM_sequential_rd_state[1]_i_2_n_0 ),
        .I1(rd_state[3]),
        .O(rd_nxt_state__0[1]));
  LUT6 #(
    .INIT(64'h3F00F0FF5FFF0000)) 
    \FSM_sequential_rd_state[1]_i_2 
       (.I0(rd_eof),
        .I1(rd_eof_reg__0),
        .I2(tx_axis_mac_tready),
        .I3(rd_state[2]),
        .I4(rd_state[1]),
        .I5(rd_state[0]),
        .O(\FSM_sequential_rd_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h0000F808)) 
    \FSM_sequential_rd_state[2]_i_1 
       (.I0(rd_state[0]),
        .I1(rd_state[1]),
        .I2(rd_state[2]),
        .I3(\FSM_sequential_rd_state[2]_i_2_n_0 ),
        .I4(rd_state[3]),
        .O(rd_nxt_state__0[2]));
  LUT5 #(
    .INIT(32'h3FFF5FFF)) 
    \FSM_sequential_rd_state[2]_i_2 
       (.I0(rd_eof),
        .I1(rd_eof_reg__0),
        .I2(tx_axis_mac_tready),
        .I3(rd_state[1]),
        .I4(rd_state[0]),
        .O(\FSM_sequential_rd_state[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT3 #(
    .INIT(8'h74)) 
    \FSM_sequential_rd_state[3]_i_1 
       (.I0(tx_axis_mac_tready),
        .I1(rd_state[3]),
        .I2(\FSM_sequential_rd_state[3]_i_2_n_0 ),
        .O(rd_nxt_state__0[3]));
  LUT6 #(
    .INIT(64'hC040800000000000)) 
    \FSM_sequential_rd_state[3]_i_2 
       (.I0(rd_state[0]),
        .I1(tx_axis_mac_tready),
        .I2(rd_state[1]),
        .I3(rd_eof_reg__0),
        .I4(rd_eof),
        .I5(rd_state[2]),
        .O(\FSM_sequential_rd_state[3]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "QUEUE3_s:0011,START_DATA1_s:0100,QUEUE2_s:0010,FINISH_s:1000,QUEUE1_s:0001,IDLE_s:0000,HANDSHAKE_s:0111,FRAME_s:0110,DATA_PRELOAD1_s:0101" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_rd_state_reg[0] 
       (.C(tx_mac_aclk),
        .CE(1'b1),
        .D(rd_nxt_state__0[0]),
        .Q(rd_state[0]),
        .R(SR));
  (* FSM_ENCODED_STATES = "QUEUE3_s:0011,START_DATA1_s:0100,QUEUE2_s:0010,FINISH_s:1000,QUEUE1_s:0001,IDLE_s:0000,HANDSHAKE_s:0111,FRAME_s:0110,DATA_PRELOAD1_s:0101" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_rd_state_reg[1] 
       (.C(tx_mac_aclk),
        .CE(1'b1),
        .D(rd_nxt_state__0[1]),
        .Q(rd_state[1]),
        .R(SR));
  (* FSM_ENCODED_STATES = "QUEUE3_s:0011,START_DATA1_s:0100,QUEUE2_s:0010,FINISH_s:1000,QUEUE1_s:0001,IDLE_s:0000,HANDSHAKE_s:0111,FRAME_s:0110,DATA_PRELOAD1_s:0101" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_rd_state_reg[2] 
       (.C(tx_mac_aclk),
        .CE(1'b1),
        .D(rd_nxt_state__0[2]),
        .Q(rd_state[2]),
        .R(SR));
  (* FSM_ENCODED_STATES = "QUEUE3_s:0011,START_DATA1_s:0100,QUEUE2_s:0010,FINISH_s:1000,QUEUE1_s:0001,IDLE_s:0000,HANDSHAKE_s:0111,FRAME_s:0110,DATA_PRELOAD1_s:0101" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_rd_state_reg[3] 
       (.C(tx_mac_aclk),
        .CE(1'b1),
        .D(rd_nxt_state__0[3]),
        .Q(rd_state[3]),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFFFAEAA00FFAEAA)) 
    \FSM_sequential_wr_state[0]_i_1__0 
       (.I0(wr_eof_data_bram[8]),
        .I1(\wr_sof_pipe_reg[1]__0 ),
        .I2(\wr_eof_pipe_reg_n_0_[1] ),
        .I3(wr_state[1]),
        .I4(wr_state[0]),
        .I5(\FSM_sequential_wr_state[0]_i_2_n_0 ),
        .O(wr_nxt_state__0[0]));
  LUT6 #(
    .INIT(64'h00000000FFFFFFEF)) 
    \FSM_sequential_wr_state[0]_i_2 
       (.I0(wr_eof_state),
        .I1(wr_frame_in_fifo),
        .I2(wr_fifo_full),
        .I3(wr_eof_state_reg),
        .I4(\wr_eof_pipe_reg_n_0_[0] ),
        .I5(\wr_eof_pipe_reg_n_0_[1] ),
        .O(\FSM_sequential_wr_state[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h35353F3500003000)) 
    \FSM_sequential_wr_state[1]_i_2 
       (.I0(wr_eof_data_bram[8]),
        .I1(\FSM_sequential_wr_state[1]_i_3_n_0 ),
        .I2(wr_state[0]),
        .I3(\wr_sof_pipe_reg[1]__0 ),
        .I4(\wr_eof_pipe_reg_n_0_[1] ),
        .I5(wr_state[1]),
        .O(wr_nxt_state__0[1]));
  LUT6 #(
    .INIT(64'h700070F070007000)) 
    \FSM_sequential_wr_state[1]_i_3 
       (.I0(data_count_reg[3]),
        .I1(data_count_reg[2]),
        .I2(wr_state[1]),
        .I3(\wr_eof_pipe_reg_n_0_[1] ),
        .I4(\wr_eof_pipe_reg_n_0_[0] ),
        .I5(\FSM_sequential_wr_state[1]_i_4_n_0 ),
        .O(\FSM_sequential_wr_state[1]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h00000B00)) 
    \FSM_sequential_wr_state[1]_i_4 
       (.I0(wr_state[0]),
        .I1(wr_state[1]),
        .I2(wr_frame_in_fifo),
        .I3(wr_fifo_full),
        .I4(wr_eof_state_reg),
        .O(\FSM_sequential_wr_state[1]_i_4_n_0 ));
  (* FSM_ENCODED_STATES = "DATA_s:11,EOF_s:10,OVFLOW_s:00,WAIT_s:01" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_sequential_wr_state_reg[0] 
       (.C(userclk2_out),
        .CE(1'b1),
        .D(wr_nxt_state__0[0]),
        .Q(wr_state[0]),
        .S(\FSM_sequential_wr_state_reg[0]_0 ));
  (* FSM_ENCODED_STATES = "DATA_s:11,EOF_s:10,OVFLOW_s:00,WAIT_s:01" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_wr_state_reg[1] 
       (.C(userclk2_out),
        .CE(1'b1),
        .D(wr_nxt_state__0[1]),
        .Q(wr_state[1]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \data_count[0]_i_1 
       (.I0(\data_count_reg_n_0_[0] ),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \data_count[1]_i_1 
       (.I0(\data_count_reg_n_0_[0] ),
        .I1(\data_count_reg_n_0_[1] ),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \data_count[2]_i_1 
       (.I0(data_count_reg[2]),
        .I1(\data_count_reg_n_0_[1] ),
        .I2(\data_count_reg_n_0_[0] ),
        .O(p_0_in[2]));
  LUT2 #(
    .INIT(4'hB)) 
    \data_count[3]_i_1 
       (.I0(\wr_sof_pipe_reg[1]__0 ),
        .I1(rx_fifo_resetn),
        .O(\data_count[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \data_count[3]_i_2 
       (.I0(data_count_reg[2]),
        .I1(data_count_reg[3]),
        .O(\data_count[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \data_count[3]_i_3 
       (.I0(data_count_reg[3]),
        .I1(\data_count_reg_n_0_[0] ),
        .I2(\data_count_reg_n_0_[1] ),
        .I3(data_count_reg[2]),
        .O(p_0_in[3]));
  FDRE #(
    .INIT(1'b0)) 
    \data_count_reg[0] 
       (.C(userclk2_out),
        .CE(\data_count[3]_i_2_n_0 ),
        .D(p_0_in[0]),
        .Q(\data_count_reg_n_0_[0] ),
        .R(\data_count[3]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_count_reg[1] 
       (.C(userclk2_out),
        .CE(\data_count[3]_i_2_n_0 ),
        .D(p_0_in[1]),
        .Q(\data_count_reg_n_0_[1] ),
        .R(\data_count[3]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_count_reg[2] 
       (.C(userclk2_out),
        .CE(\data_count[3]_i_2_n_0 ),
        .D(p_0_in[2]),
        .Q(data_count_reg[2]),
        .R(\data_count[3]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_count_reg[3] 
       (.C(userclk2_out),
        .CE(\data_count[3]_i_2_n_0 ),
        .D(p_0_in[3]),
        .Q(data_count_reg[3]),
        .R(\data_count[3]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    frame_in_fifo_valid_delay_reg
       (.C(tx_mac_aclk),
        .CE(1'b1),
        .D(frame_in_fifo_valid_sync),
        .Q(frame_in_fifo_valid_delay),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hBFFBAFFA)) 
    frame_in_fifo_valid_i_1
       (.I0(SR),
        .I1(rd_transmit_frame),
        .I2(frame_in_fifo_valid_delay),
        .I3(frame_in_fifo_valid_sync),
        .I4(frame_in_fifo_valid),
        .O(frame_in_fifo_valid_i_1_n_0));
  LUT5 #(
    .INIT(32'h00100000)) 
    frame_in_fifo_valid_i_2
       (.I0(rd_state[2]),
        .I1(rd_state[1]),
        .I2(tx_axis_mac_tready),
        .I3(rd_state[0]),
        .I4(rd_state[3]),
        .O(rd_transmit_frame));
  FDRE #(
    .INIT(1'b0)) 
    frame_in_fifo_valid_reg
       (.C(tx_mac_aclk),
        .CE(1'b1),
        .D(frame_in_fifo_valid_i_1_n_0),
        .Q(frame_in_fifo_valid),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    frame_in_fifo_valid_tog_i_1
       (.I0(wr_transmit_frame_delay),
        .I1(frame_in_fifo_valid_tog),
        .O(frame_in_fifo_valid_tog_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    frame_in_fifo_valid_tog_reg
       (.C(userclk2_out),
        .CE(1'b1),
        .D(frame_in_fifo_valid_tog_i_1_n_0),
        .Q(frame_in_fifo_valid_tog),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hCCFFCC00CDFFCDFF)) 
    \gen_fd_addr.rd_addr[0]_i_2 
       (.I0(rd_state[0]),
        .I1(tx_axis_mac_tready),
        .I2(rd_state[1]),
        .I3(rd_state[3]),
        .I4(\FSM_sequential_rd_state[2]_i_2_n_0 ),
        .I5(rd_state[2]),
        .O(\gen_fd_addr.rd_addr[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFC88)) 
    \gen_fd_addr.rd_addr[0]_i_3 
       (.I0(\gen_fd_addr.rd_addr[0]_i_7_n_0 ),
        .I1(rd_dec_addr[3]),
        .I2(\gen_fd_addr.rd_addr[0]_i_2_n_0 ),
        .I3(\gen_fd_addr.rd_addr_reg [3]),
        .O(\gen_fd_addr.rd_addr[0]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFC88)) 
    \gen_fd_addr.rd_addr[0]_i_4 
       (.I0(\gen_fd_addr.rd_addr[0]_i_7_n_0 ),
        .I1(rd_dec_addr[2]),
        .I2(\gen_fd_addr.rd_addr[0]_i_2_n_0 ),
        .I3(\gen_fd_addr.rd_addr_reg [2]),
        .O(\gen_fd_addr.rd_addr[0]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hFC88)) 
    \gen_fd_addr.rd_addr[0]_i_5 
       (.I0(\gen_fd_addr.rd_addr[0]_i_7_n_0 ),
        .I1(rd_dec_addr[1]),
        .I2(\gen_fd_addr.rd_addr[0]_i_2_n_0 ),
        .I3(\gen_fd_addr.rd_addr_reg [1]),
        .O(\gen_fd_addr.rd_addr[0]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h15C8)) 
    \gen_fd_addr.rd_addr[0]_i_6 
       (.I0(\gen_fd_addr.rd_addr_reg [0]),
        .I1(rd_dec_addr[0]),
        .I2(\gen_fd_addr.rd_addr[0]_i_7_n_0 ),
        .I3(\gen_fd_addr.rd_addr[0]_i_2_n_0 ),
        .O(\gen_fd_addr.rd_addr[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h00FEFFFF00FE0000)) 
    \gen_fd_addr.rd_addr[0]_i_7 
       (.I0(rd_state[2]),
        .I1(rd_state[0]),
        .I2(rd_state[1]),
        .I3(tx_axis_mac_tready),
        .I4(rd_state[3]),
        .I5(\FSM_sequential_rd_state[3]_i_2_n_0 ),
        .O(\gen_fd_addr.rd_addr[0]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'hFC88)) 
    \gen_fd_addr.rd_addr[4]_i_2 
       (.I0(\gen_fd_addr.rd_addr[0]_i_7_n_0 ),
        .I1(rd_dec_addr[7]),
        .I2(\gen_fd_addr.rd_addr[0]_i_2_n_0 ),
        .I3(\gen_fd_addr.rd_addr_reg [7]),
        .O(\gen_fd_addr.rd_addr[4]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFC88)) 
    \gen_fd_addr.rd_addr[4]_i_3 
       (.I0(\gen_fd_addr.rd_addr[0]_i_7_n_0 ),
        .I1(rd_dec_addr[6]),
        .I2(\gen_fd_addr.rd_addr[0]_i_2_n_0 ),
        .I3(\gen_fd_addr.rd_addr_reg [6]),
        .O(\gen_fd_addr.rd_addr[4]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFC88)) 
    \gen_fd_addr.rd_addr[4]_i_4 
       (.I0(\gen_fd_addr.rd_addr[0]_i_7_n_0 ),
        .I1(rd_dec_addr[5]),
        .I2(\gen_fd_addr.rd_addr[0]_i_2_n_0 ),
        .I3(\gen_fd_addr.rd_addr_reg [5]),
        .O(\gen_fd_addr.rd_addr[4]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hFC88)) 
    \gen_fd_addr.rd_addr[4]_i_5 
       (.I0(\gen_fd_addr.rd_addr[0]_i_7_n_0 ),
        .I1(rd_dec_addr[4]),
        .I2(\gen_fd_addr.rd_addr[0]_i_2_n_0 ),
        .I3(\gen_fd_addr.rd_addr_reg [4]),
        .O(\gen_fd_addr.rd_addr[4]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'hFC88)) 
    \gen_fd_addr.rd_addr[8]_i_2 
       (.I0(\gen_fd_addr.rd_addr[0]_i_2_n_0 ),
        .I1(\gen_fd_addr.rd_addr_reg [11]),
        .I2(\gen_fd_addr.rd_addr[0]_i_7_n_0 ),
        .I3(rd_dec_addr[11]),
        .O(\gen_fd_addr.rd_addr[8]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFC88)) 
    \gen_fd_addr.rd_addr[8]_i_3 
       (.I0(\gen_fd_addr.rd_addr[0]_i_7_n_0 ),
        .I1(rd_dec_addr[10]),
        .I2(\gen_fd_addr.rd_addr[0]_i_2_n_0 ),
        .I3(\gen_fd_addr.rd_addr_reg [10]),
        .O(\gen_fd_addr.rd_addr[8]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFC88)) 
    \gen_fd_addr.rd_addr[8]_i_4 
       (.I0(\gen_fd_addr.rd_addr[0]_i_7_n_0 ),
        .I1(rd_dec_addr[9]),
        .I2(\gen_fd_addr.rd_addr[0]_i_2_n_0 ),
        .I3(\gen_fd_addr.rd_addr_reg [9]),
        .O(\gen_fd_addr.rd_addr[8]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hFC88)) 
    \gen_fd_addr.rd_addr[8]_i_5 
       (.I0(\gen_fd_addr.rd_addr[0]_i_7_n_0 ),
        .I1(rd_dec_addr[8]),
        .I2(\gen_fd_addr.rd_addr[0]_i_2_n_0 ),
        .I3(\gen_fd_addr.rd_addr_reg [8]),
        .O(\gen_fd_addr.rd_addr[8]_i_5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_fd_addr.rd_addr_reg[0] 
       (.C(tx_mac_aclk),
        .CE(rd_en),
        .D(\gen_fd_addr.rd_addr_reg[0]_i_1_n_7 ),
        .Q(\gen_fd_addr.rd_addr_reg [0]),
        .R(SR));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \gen_fd_addr.rd_addr_reg[0]_i_1 
       (.CI(1'b0),
        .CO({\gen_fd_addr.rd_addr_reg[0]_i_1_n_0 ,\NLW_gen_fd_addr.rd_addr_reg[0]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,\gen_fd_addr.rd_addr[0]_i_2_n_0 }),
        .O({\gen_fd_addr.rd_addr_reg[0]_i_1_n_4 ,\gen_fd_addr.rd_addr_reg[0]_i_1_n_5 ,\gen_fd_addr.rd_addr_reg[0]_i_1_n_6 ,\gen_fd_addr.rd_addr_reg[0]_i_1_n_7 }),
        .S({\gen_fd_addr.rd_addr[0]_i_3_n_0 ,\gen_fd_addr.rd_addr[0]_i_4_n_0 ,\gen_fd_addr.rd_addr[0]_i_5_n_0 ,\gen_fd_addr.rd_addr[0]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \gen_fd_addr.rd_addr_reg[10] 
       (.C(tx_mac_aclk),
        .CE(rd_en),
        .D(\gen_fd_addr.rd_addr_reg[8]_i_1_n_5 ),
        .Q(\gen_fd_addr.rd_addr_reg [10]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gen_fd_addr.rd_addr_reg[11] 
       (.C(tx_mac_aclk),
        .CE(rd_en),
        .D(\gen_fd_addr.rd_addr_reg[8]_i_1_n_4 ),
        .Q(\gen_fd_addr.rd_addr_reg [11]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gen_fd_addr.rd_addr_reg[1] 
       (.C(tx_mac_aclk),
        .CE(rd_en),
        .D(\gen_fd_addr.rd_addr_reg[0]_i_1_n_6 ),
        .Q(\gen_fd_addr.rd_addr_reg [1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gen_fd_addr.rd_addr_reg[2] 
       (.C(tx_mac_aclk),
        .CE(rd_en),
        .D(\gen_fd_addr.rd_addr_reg[0]_i_1_n_5 ),
        .Q(\gen_fd_addr.rd_addr_reg [2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gen_fd_addr.rd_addr_reg[3] 
       (.C(tx_mac_aclk),
        .CE(rd_en),
        .D(\gen_fd_addr.rd_addr_reg[0]_i_1_n_4 ),
        .Q(\gen_fd_addr.rd_addr_reg [3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gen_fd_addr.rd_addr_reg[4] 
       (.C(tx_mac_aclk),
        .CE(rd_en),
        .D(\gen_fd_addr.rd_addr_reg[4]_i_1_n_7 ),
        .Q(\gen_fd_addr.rd_addr_reg [4]),
        .R(SR));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \gen_fd_addr.rd_addr_reg[4]_i_1 
       (.CI(\gen_fd_addr.rd_addr_reg[0]_i_1_n_0 ),
        .CO({\gen_fd_addr.rd_addr_reg[4]_i_1_n_0 ,\NLW_gen_fd_addr.rd_addr_reg[4]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\gen_fd_addr.rd_addr_reg[4]_i_1_n_4 ,\gen_fd_addr.rd_addr_reg[4]_i_1_n_5 ,\gen_fd_addr.rd_addr_reg[4]_i_1_n_6 ,\gen_fd_addr.rd_addr_reg[4]_i_1_n_7 }),
        .S({\gen_fd_addr.rd_addr[4]_i_2_n_0 ,\gen_fd_addr.rd_addr[4]_i_3_n_0 ,\gen_fd_addr.rd_addr[4]_i_4_n_0 ,\gen_fd_addr.rd_addr[4]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \gen_fd_addr.rd_addr_reg[5] 
       (.C(tx_mac_aclk),
        .CE(rd_en),
        .D(\gen_fd_addr.rd_addr_reg[4]_i_1_n_6 ),
        .Q(\gen_fd_addr.rd_addr_reg [5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gen_fd_addr.rd_addr_reg[6] 
       (.C(tx_mac_aclk),
        .CE(rd_en),
        .D(\gen_fd_addr.rd_addr_reg[4]_i_1_n_5 ),
        .Q(\gen_fd_addr.rd_addr_reg [6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gen_fd_addr.rd_addr_reg[7] 
       (.C(tx_mac_aclk),
        .CE(rd_en),
        .D(\gen_fd_addr.rd_addr_reg[4]_i_1_n_4 ),
        .Q(\gen_fd_addr.rd_addr_reg [7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gen_fd_addr.rd_addr_reg[8] 
       (.C(tx_mac_aclk),
        .CE(rd_en),
        .D(\gen_fd_addr.rd_addr_reg[8]_i_1_n_7 ),
        .Q(\gen_fd_addr.rd_addr_reg [8]),
        .R(SR));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \gen_fd_addr.rd_addr_reg[8]_i_1 
       (.CI(\gen_fd_addr.rd_addr_reg[4]_i_1_n_0 ),
        .CO(\NLW_gen_fd_addr.rd_addr_reg[8]_i_1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\gen_fd_addr.rd_addr_reg[8]_i_1_n_4 ,\gen_fd_addr.rd_addr_reg[8]_i_1_n_5 ,\gen_fd_addr.rd_addr_reg[8]_i_1_n_6 ,\gen_fd_addr.rd_addr_reg[8]_i_1_n_7 }),
        .S({\gen_fd_addr.rd_addr[8]_i_2_n_0 ,\gen_fd_addr.rd_addr[8]_i_3_n_0 ,\gen_fd_addr.rd_addr[8]_i_4_n_0 ,\gen_fd_addr.rd_addr[8]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \gen_fd_addr.rd_addr_reg[9] 
       (.C(tx_mac_aclk),
        .CE(rd_en),
        .D(\gen_fd_addr.rd_addr_reg[8]_i_1_n_6 ),
        .Q(\gen_fd_addr.rd_addr_reg [9]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gen_fd_addr.rd_start_addr_reg[0] 
       (.C(tx_mac_aclk),
        .CE(1'b1),
        .D(\gen_fd_addr.rd_addr_reg [0]),
        .Q(rd_start_addr[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gen_fd_addr.rd_start_addr_reg[10] 
       (.C(tx_mac_aclk),
        .CE(1'b1),
        .D(\gen_fd_addr.rd_addr_reg [10]),
        .Q(rd_start_addr[10]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gen_fd_addr.rd_start_addr_reg[11] 
       (.C(tx_mac_aclk),
        .CE(1'b1),
        .D(\gen_fd_addr.rd_addr_reg [11]),
        .Q(rd_start_addr[11]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gen_fd_addr.rd_start_addr_reg[1] 
       (.C(tx_mac_aclk),
        .CE(1'b1),
        .D(\gen_fd_addr.rd_addr_reg [1]),
        .Q(rd_start_addr[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gen_fd_addr.rd_start_addr_reg[2] 
       (.C(tx_mac_aclk),
        .CE(1'b1),
        .D(\gen_fd_addr.rd_addr_reg [2]),
        .Q(rd_start_addr[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gen_fd_addr.rd_start_addr_reg[3] 
       (.C(tx_mac_aclk),
        .CE(1'b1),
        .D(\gen_fd_addr.rd_addr_reg [3]),
        .Q(rd_start_addr[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gen_fd_addr.rd_start_addr_reg[4] 
       (.C(tx_mac_aclk),
        .CE(1'b1),
        .D(\gen_fd_addr.rd_addr_reg [4]),
        .Q(rd_start_addr[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gen_fd_addr.rd_start_addr_reg[5] 
       (.C(tx_mac_aclk),
        .CE(1'b1),
        .D(\gen_fd_addr.rd_addr_reg [5]),
        .Q(rd_start_addr[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gen_fd_addr.rd_start_addr_reg[6] 
       (.C(tx_mac_aclk),
        .CE(1'b1),
        .D(\gen_fd_addr.rd_addr_reg [6]),
        .Q(rd_start_addr[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gen_fd_addr.rd_start_addr_reg[7] 
       (.C(tx_mac_aclk),
        .CE(1'b1),
        .D(\gen_fd_addr.rd_addr_reg [7]),
        .Q(rd_start_addr[7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gen_fd_addr.rd_start_addr_reg[8] 
       (.C(tx_mac_aclk),
        .CE(1'b1),
        .D(\gen_fd_addr.rd_addr_reg [8]),
        .Q(rd_start_addr[8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gen_fd_addr.rd_start_addr_reg[9] 
       (.C(tx_mac_aclk),
        .CE(1'b1),
        .D(\gen_fd_addr.rd_addr_reg [9]),
        .Q(rd_start_addr[9]),
        .R(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_fd_count.wr_frames[0]_i_1 
       (.I0(Q[0]),
        .O(\gen_fd_count.wr_frames[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h9A9A9A9AAAAA9AAA)) 
    \gen_fd_count.wr_frames[8]_i_1 
       (.I0(wr_transmit_frame),
        .I1(wr_state[0]),
        .I2(wr_state[1]),
        .I3(\wr_sof_pipe_reg[1]__0 ),
        .I4(\wr_eof_pipe_reg_n_0_[1] ),
        .I5(wr_eof_data_bram[8]),
        .O(\gen_fd_count.wr_frames[8]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_fd_count.wr_frames_reg[0] 
       (.C(userclk2_out),
        .CE(\gen_fd_count.wr_frames[8]_i_1_n_0 ),
        .D(\gen_fd_count.wr_frames[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_fd_count.wr_frames_reg[1] 
       (.C(userclk2_out),
        .CE(\gen_fd_count.wr_frames[8]_i_1_n_0 ),
        .D(\gen_fd_count.wr_frames_reg[8]_0 [0]),
        .Q(DI[1]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_fd_count.wr_frames_reg[2] 
       (.C(userclk2_out),
        .CE(\gen_fd_count.wr_frames[8]_i_1_n_0 ),
        .D(\gen_fd_count.wr_frames_reg[8]_0 [1]),
        .Q(DI[2]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_fd_count.wr_frames_reg[3] 
       (.C(userclk2_out),
        .CE(\gen_fd_count.wr_frames[8]_i_1_n_0 ),
        .D(\gen_fd_count.wr_frames_reg[8]_0 [2]),
        .Q(DI[3]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_fd_count.wr_frames_reg[4] 
       (.C(userclk2_out),
        .CE(\gen_fd_count.wr_frames[8]_i_1_n_0 ),
        .D(\gen_fd_count.wr_frames_reg[8]_0 [3]),
        .Q(Q[1]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_fd_count.wr_frames_reg[5] 
       (.C(userclk2_out),
        .CE(\gen_fd_count.wr_frames[8]_i_1_n_0 ),
        .D(\gen_fd_count.wr_frames_reg[8]_0 [4]),
        .Q(Q[2]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_fd_count.wr_frames_reg[6] 
       (.C(userclk2_out),
        .CE(\gen_fd_count.wr_frames[8]_i_1_n_0 ),
        .D(\gen_fd_count.wr_frames_reg[8]_0 [5]),
        .Q(Q[3]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_fd_count.wr_frames_reg[7] 
       (.C(userclk2_out),
        .CE(\gen_fd_count.wr_frames[8]_i_1_n_0 ),
        .D(\gen_fd_count.wr_frames_reg[8]_0 [6]),
        .Q(\gen_fd_count.wr_frames_reg [7]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_fd_count.wr_frames_reg[8] 
       (.C(userclk2_out),
        .CE(\gen_fd_count.wr_frames[8]_i_1_n_0 ),
        .D(\gen_fd_count.wr_frames_reg[8]_0 [7]),
        .Q(\gen_fd_count.wr_frames_reg [8]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__0_i_1
       (.I0(\gen_fd_count.wr_frames_reg [7]),
        .I1(\gen_fd_count.wr_frames_reg [8]),
        .O(\gen_fd_count.wr_frames_reg[7]_0 [3]));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__0_i_2
       (.I0(Q[3]),
        .I1(\gen_fd_count.wr_frames_reg [7]),
        .O(\gen_fd_count.wr_frames_reg[7]_0 [2]));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__0_i_3
       (.I0(Q[2]),
        .I1(Q[3]),
        .O(\gen_fd_count.wr_frames_reg[7]_0 [1]));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__0_i_4
       (.I0(Q[1]),
        .I1(Q[2]),
        .O(\gen_fd_count.wr_frames_reg[7]_0 [0]));
  LUT1 #(
    .INIT(2'h1)) 
    p_0_out_carry_i_1
       (.I0(DI[1]),
        .O(DI[0]));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry_i_2
       (.I0(DI[3]),
        .I1(Q[1]),
        .O(S[3]));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry_i_3
       (.I0(DI[2]),
        .I1(DI[3]),
        .O(S[2]));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry_i_4
       (.I0(DI[1]),
        .I1(DI[2]),
        .O(S[1]));
  LUT3 #(
    .INIT(8'h65)) 
    p_0_out_carry_i_5
       (.I0(DI[1]),
        .I1(wr_transmit_frame),
        .I2(wr_start_addr_load),
        .O(S[0]));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \rd_16_count[0]_i_1 
       (.I0(rd_16_count_reg[0]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_16_count[1]_i_1 
       (.I0(rd_16_count_reg[0]),
        .I1(rd_16_count_reg[1]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \rd_16_count[2]_i_1 
       (.I0(rd_16_count_reg[1]),
        .I1(rd_16_count_reg[0]),
        .I2(rd_16_count_reg[2]),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \rd_16_count[3]_i_1 
       (.I0(rd_16_count_reg[1]),
        .I1(rd_16_count_reg[2]),
        .I2(rd_16_count_reg[0]),
        .I3(rd_16_count_reg[3]),
        .O(p_0_in__0[3]));
  FDRE #(
    .INIT(1'b0)) 
    \rd_16_count_reg[0] 
       (.C(tx_mac_aclk),
        .CE(1'b1),
        .D(p_0_in__0[0]),
        .Q(rd_16_count_reg[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \rd_16_count_reg[1] 
       (.C(tx_mac_aclk),
        .CE(1'b1),
        .D(p_0_in__0[1]),
        .Q(rd_16_count_reg[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \rd_16_count_reg[2] 
       (.C(tx_mac_aclk),
        .CE(1'b1),
        .D(p_0_in__0[2]),
        .Q(rd_16_count_reg[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \rd_16_count_reg[3] 
       (.C(tx_mac_aclk),
        .CE(1'b1),
        .D(p_0_in__0[3]),
        .Q(rd_16_count_reg[3]),
        .R(SR));
  LUT4 #(
    .INIT(16'h8000)) 
    \rd_addr_txfer[11]_i_1 
       (.I0(rd_16_count_reg[1]),
        .I1(rd_16_count_reg[2]),
        .I2(rd_16_count_reg[0]),
        .I3(rd_16_count_reg[3]),
        .O(rd_txfer_en));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_txfer_reg[0] 
       (.C(tx_mac_aclk),
        .CE(rd_txfer_en),
        .D(rd_start_addr[0]),
        .Q(rd_addr_txfer[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_txfer_reg[10] 
       (.C(tx_mac_aclk),
        .CE(rd_txfer_en),
        .D(rd_start_addr[10]),
        .Q(rd_addr_txfer[10]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_txfer_reg[11] 
       (.C(tx_mac_aclk),
        .CE(rd_txfer_en),
        .D(rd_start_addr[11]),
        .Q(rd_addr_txfer[11]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_txfer_reg[1] 
       (.C(tx_mac_aclk),
        .CE(rd_txfer_en),
        .D(rd_start_addr[1]),
        .Q(rd_addr_txfer[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_txfer_reg[2] 
       (.C(tx_mac_aclk),
        .CE(rd_txfer_en),
        .D(rd_start_addr[2]),
        .Q(rd_addr_txfer[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_txfer_reg[3] 
       (.C(tx_mac_aclk),
        .CE(rd_txfer_en),
        .D(rd_start_addr[3]),
        .Q(rd_addr_txfer[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_txfer_reg[4] 
       (.C(tx_mac_aclk),
        .CE(rd_txfer_en),
        .D(rd_start_addr[4]),
        .Q(rd_addr_txfer[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_txfer_reg[5] 
       (.C(tx_mac_aclk),
        .CE(rd_txfer_en),
        .D(rd_start_addr[5]),
        .Q(rd_addr_txfer[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_txfer_reg[6] 
       (.C(tx_mac_aclk),
        .CE(rd_txfer_en),
        .D(rd_start_addr[6]),
        .Q(rd_addr_txfer[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_txfer_reg[7] 
       (.C(tx_mac_aclk),
        .CE(rd_txfer_en),
        .D(rd_start_addr[7]),
        .Q(rd_addr_txfer[7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_txfer_reg[8] 
       (.C(tx_mac_aclk),
        .CE(rd_txfer_en),
        .D(rd_start_addr[8]),
        .Q(rd_addr_txfer[8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \rd_addr_txfer_reg[9] 
       (.C(tx_mac_aclk),
        .CE(rd_txfer_en),
        .D(rd_start_addr[9]),
        .Q(rd_addr_txfer[9]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_pipe_reg[0] 
       (.C(tx_mac_aclk),
        .CE(rd_en),
        .D(rd_data_delay[0]),
        .Q(rd_data_pipe[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_pipe_reg[1] 
       (.C(tx_mac_aclk),
        .CE(rd_en),
        .D(rd_data_delay[1]),
        .Q(rd_data_pipe[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_pipe_reg[2] 
       (.C(tx_mac_aclk),
        .CE(rd_en),
        .D(rd_data_delay[2]),
        .Q(rd_data_pipe[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_pipe_reg[3] 
       (.C(tx_mac_aclk),
        .CE(rd_en),
        .D(rd_data_delay[3]),
        .Q(rd_data_pipe[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_pipe_reg[4] 
       (.C(tx_mac_aclk),
        .CE(rd_en),
        .D(rd_data_delay[4]),
        .Q(rd_data_pipe[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_pipe_reg[5] 
       (.C(tx_mac_aclk),
        .CE(rd_en),
        .D(rd_data_delay[5]),
        .Q(rd_data_pipe[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_pipe_reg[6] 
       (.C(tx_mac_aclk),
        .CE(rd_en),
        .D(rd_data_delay[6]),
        .Q(rd_data_pipe[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_pipe_reg[7] 
       (.C(tx_mac_aclk),
        .CE(rd_en),
        .D(rd_data_delay[7]),
        .Q(rd_data_pipe[7]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 rd_dec_addr0_carry
       (.CI(1'b0),
        .CO({rd_dec_addr0_carry_n_0,NLW_rd_dec_addr0_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(\gen_fd_addr.rd_addr_reg [0]),
        .DI(\gen_fd_addr.rd_addr_reg [4:1]),
        .O(rd_dec_addr0[4:1]),
        .S({rd_dec_addr0_carry_i_1_n_0,rd_dec_addr0_carry_i_2_n_0,rd_dec_addr0_carry_i_3_n_0,rd_dec_addr0_carry_i_4_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 rd_dec_addr0_carry__0
       (.CI(rd_dec_addr0_carry_n_0),
        .CO({rd_dec_addr0_carry__0_n_0,NLW_rd_dec_addr0_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(\gen_fd_addr.rd_addr_reg [8:5]),
        .O(rd_dec_addr0[8:5]),
        .S({rd_dec_addr0_carry__0_i_1_n_0,rd_dec_addr0_carry__0_i_2_n_0,rd_dec_addr0_carry__0_i_3_n_0,rd_dec_addr0_carry__0_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    rd_dec_addr0_carry__0_i_1
       (.I0(\gen_fd_addr.rd_addr_reg [8]),
        .O(rd_dec_addr0_carry__0_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    rd_dec_addr0_carry__0_i_2
       (.I0(\gen_fd_addr.rd_addr_reg [7]),
        .O(rd_dec_addr0_carry__0_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    rd_dec_addr0_carry__0_i_3
       (.I0(\gen_fd_addr.rd_addr_reg [6]),
        .O(rd_dec_addr0_carry__0_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    rd_dec_addr0_carry__0_i_4
       (.I0(\gen_fd_addr.rd_addr_reg [5]),
        .O(rd_dec_addr0_carry__0_i_4_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 rd_dec_addr0_carry__1
       (.CI(rd_dec_addr0_carry__0_n_0),
        .CO(NLW_rd_dec_addr0_carry__1_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,\gen_fd_addr.rd_addr_reg [10:9]}),
        .O({NLW_rd_dec_addr0_carry__1_O_UNCONNECTED[3],rd_dec_addr0[11:9]}),
        .S({1'b0,rd_dec_addr0_carry__1_i_1_n_0,rd_dec_addr0_carry__1_i_2_n_0,rd_dec_addr0_carry__1_i_3_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    rd_dec_addr0_carry__1_i_1
       (.I0(\gen_fd_addr.rd_addr_reg [11]),
        .O(rd_dec_addr0_carry__1_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    rd_dec_addr0_carry__1_i_2
       (.I0(\gen_fd_addr.rd_addr_reg [10]),
        .O(rd_dec_addr0_carry__1_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    rd_dec_addr0_carry__1_i_3
       (.I0(\gen_fd_addr.rd_addr_reg [9]),
        .O(rd_dec_addr0_carry__1_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    rd_dec_addr0_carry_i_1
       (.I0(\gen_fd_addr.rd_addr_reg [4]),
        .O(rd_dec_addr0_carry_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    rd_dec_addr0_carry_i_2
       (.I0(\gen_fd_addr.rd_addr_reg [3]),
        .O(rd_dec_addr0_carry_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    rd_dec_addr0_carry_i_3
       (.I0(\gen_fd_addr.rd_addr_reg [2]),
        .O(rd_dec_addr0_carry_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    rd_dec_addr0_carry_i_4
       (.I0(\gen_fd_addr.rd_addr_reg [1]),
        .O(rd_dec_addr0_carry_i_4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \rd_dec_addr[0]_i_1 
       (.I0(\gen_fd_addr.rd_addr_reg [0]),
        .O(rd_dec_addr0[0]));
  FDRE #(
    .INIT(1'b0)) 
    \rd_dec_addr_reg[0] 
       (.C(tx_mac_aclk),
        .CE(rd_en),
        .D(rd_dec_addr0[0]),
        .Q(rd_dec_addr[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \rd_dec_addr_reg[10] 
       (.C(tx_mac_aclk),
        .CE(rd_en),
        .D(rd_dec_addr0[10]),
        .Q(rd_dec_addr[10]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \rd_dec_addr_reg[11] 
       (.C(tx_mac_aclk),
        .CE(rd_en),
        .D(rd_dec_addr0[11]),
        .Q(rd_dec_addr[11]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \rd_dec_addr_reg[1] 
       (.C(tx_mac_aclk),
        .CE(rd_en),
        .D(rd_dec_addr0[1]),
        .Q(rd_dec_addr[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \rd_dec_addr_reg[2] 
       (.C(tx_mac_aclk),
        .CE(rd_en),
        .D(rd_dec_addr0[2]),
        .Q(rd_dec_addr[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \rd_dec_addr_reg[3] 
       (.C(tx_mac_aclk),
        .CE(rd_en),
        .D(rd_dec_addr0[3]),
        .Q(rd_dec_addr[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \rd_dec_addr_reg[4] 
       (.C(tx_mac_aclk),
        .CE(rd_en),
        .D(rd_dec_addr0[4]),
        .Q(rd_dec_addr[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \rd_dec_addr_reg[5] 
       (.C(tx_mac_aclk),
        .CE(rd_en),
        .D(rd_dec_addr0[5]),
        .Q(rd_dec_addr[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \rd_dec_addr_reg[6] 
       (.C(tx_mac_aclk),
        .CE(rd_en),
        .D(rd_dec_addr0[6]),
        .Q(rd_dec_addr[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \rd_dec_addr_reg[7] 
       (.C(tx_mac_aclk),
        .CE(rd_en),
        .D(rd_dec_addr0[7]),
        .Q(rd_dec_addr[7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \rd_dec_addr_reg[8] 
       (.C(tx_mac_aclk),
        .CE(rd_en),
        .D(rd_dec_addr0[8]),
        .Q(rd_dec_addr[8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \rd_dec_addr_reg[9] 
       (.C(tx_mac_aclk),
        .CE(rd_en),
        .D(rd_dec_addr0[9]),
        .Q(rd_dec_addr[9]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    rd_eof_reg
       (.C(tx_mac_aclk),
        .CE(rd_en),
        .D(rd_eof_pipe),
        .Q(rd_eof),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    rd_eof_reg_reg
       (.C(tx_mac_aclk),
        .CE(rd_en),
        .D(rd_eof_reg0),
        .Q(rd_eof_reg__0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFDF00000020)) 
    rd_tran_frame_tog_i_1
       (.I0(rd_state[3]),
        .I1(rd_state[0]),
        .I2(tx_axis_mac_tready),
        .I3(rd_state[1]),
        .I4(rd_state[2]),
        .I5(rd_tran_frame_tog),
        .O(rd_tran_frame_tog_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rd_tran_frame_tog_reg
       (.C(tx_mac_aclk),
        .CE(1'b1),
        .D(rd_tran_frame_tog_i_1_n_0),
        .Q(rd_tran_frame_tog),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    rd_txfer_tog_i_1
       (.I0(rd_16_count_reg[3]),
        .I1(rd_16_count_reg[0]),
        .I2(rd_16_count_reg[2]),
        .I3(rd_16_count_reg[1]),
        .I4(rd_txfer_tog),
        .O(rd_txfer_tog_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rd_txfer_tog_reg
       (.C(tx_mac_aclk),
        .CE(1'b1),
        .D(rd_txfer_tog_i_1_n_0),
        .Q(rd_txfer_tog),
        .R(1'b0));
  (* DEPTH = "5" *) 
  (* DONT_TOUCH *) 
  (* INITIALISE = "1'b0" *) 
  tri_mode_ethernet_mac_0_sync_block__7 resync_fif_valid_tog
       (.clk(tx_mac_aclk),
        .data_in(frame_in_fifo_valid_tog),
        .data_out(frame_in_fifo_valid_sync));
  (* DEPTH = "5" *) 
  (* DONT_TOUCH *) 
  (* INITIALISE = "1'b0" *) 
  tri_mode_ethernet_mac_0_sync_block__4 resync_rd_tran_frame_tog
       (.clk(userclk2_out),
        .data_in(rd_tran_frame_tog),
        .data_out(wr_tran_frame_sync));
  (* DEPTH = "5" *) 
  (* DONT_TOUCH *) 
  (* INITIALISE = "1'b0" *) 
  tri_mode_ethernet_mac_0_sync_block__8 resync_rd_txfer_tog
       (.clk(userclk2_out),
        .data_in(rd_txfer_tog),
        .data_out(wr_txfer_tog_sync));
  (* DEPTH = "5" *) 
  (* DONT_TOUCH *) 
  (* INITIALISE = "1'b0" *) 
  tri_mode_ethernet_mac_0_sync_block__5 resync_wr_frame_in_fifo
       (.clk(tx_mac_aclk),
        .data_in(wr_frame_in_fifo),
        .data_out(frame_in_fifo));
  (* DEPTH = "5" *) 
  (* DONT_TOUCH *) 
  (* INITIALISE = "1'b0" *) 
  tri_mode_ethernet_mac_0_sync_block__6 resync_wr_frames_in_fifo
       (.clk(tx_mac_aclk),
        .data_in(wr_frames_in_fifo),
        .data_out(frames_in_fifo));
  LUT5 #(
    .INIT(32'h000001FD)) 
    \tx_axis_fifo_tdata[7]_i_1 
       (.I0(wr_ovflow_dst_rdy),
        .I1(wr_state[0]),
        .I2(wr_state[1]),
        .I3(wr_fifo_full),
        .I4(\tx_axis_fifo_tdata_reg[7] ),
        .O(E));
  LUT6 #(
    .INIT(64'hFFFEAAAE0002AAA2)) 
    tx_axis_fifo_tlast_int_i_1
       (.I0(dob_8),
        .I1(wr_ovflow_dst_rdy),
        .I2(wr_state[0]),
        .I3(wr_state[1]),
        .I4(wr_fifo_full),
        .I5(tx_axis_fifo_tlast),
        .O(wr_ovflow_dst_rdy_reg_0));
  LUT4 #(
    .INIT(16'hABA8)) 
    tx_axis_fifo_tvalid_i_2
       (.I0(wr_fifo_full),
        .I1(wr_state[1]),
        .I2(wr_state[0]),
        .I3(wr_ovflow_dst_rdy),
        .O(wr_fifo_full_reg_0));
  LUT5 #(
    .INIT(32'h0000F010)) 
    \tx_axis_mac_tdata_int[7]_i_1 
       (.I0(rd_state[1]),
        .I1(rd_state[0]),
        .I2(rd_state[2]),
        .I3(tx_axis_mac_tready),
        .I4(rd_state[3]),
        .O(\tx_axis_mac_tdata_int[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \tx_axis_mac_tdata_int_reg[0] 
       (.C(tx_mac_aclk),
        .CE(\tx_axis_mac_tdata_int[7]_i_1_n_0 ),
        .D(rd_data_pipe[0]),
        .Q(\tx_axis_mac_tdata_int_reg[7]_0 [0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tx_axis_mac_tdata_int_reg[1] 
       (.C(tx_mac_aclk),
        .CE(\tx_axis_mac_tdata_int[7]_i_1_n_0 ),
        .D(rd_data_pipe[1]),
        .Q(\tx_axis_mac_tdata_int_reg[7]_0 [1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tx_axis_mac_tdata_int_reg[2] 
       (.C(tx_mac_aclk),
        .CE(\tx_axis_mac_tdata_int[7]_i_1_n_0 ),
        .D(rd_data_pipe[2]),
        .Q(\tx_axis_mac_tdata_int_reg[7]_0 [2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tx_axis_mac_tdata_int_reg[3] 
       (.C(tx_mac_aclk),
        .CE(\tx_axis_mac_tdata_int[7]_i_1_n_0 ),
        .D(rd_data_pipe[3]),
        .Q(\tx_axis_mac_tdata_int_reg[7]_0 [3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tx_axis_mac_tdata_int_reg[4] 
       (.C(tx_mac_aclk),
        .CE(\tx_axis_mac_tdata_int[7]_i_1_n_0 ),
        .D(rd_data_pipe[4]),
        .Q(\tx_axis_mac_tdata_int_reg[7]_0 [4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tx_axis_mac_tdata_int_reg[5] 
       (.C(tx_mac_aclk),
        .CE(\tx_axis_mac_tdata_int[7]_i_1_n_0 ),
        .D(rd_data_pipe[5]),
        .Q(\tx_axis_mac_tdata_int_reg[7]_0 [5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tx_axis_mac_tdata_int_reg[6] 
       (.C(tx_mac_aclk),
        .CE(\tx_axis_mac_tdata_int[7]_i_1_n_0 ),
        .D(rd_data_pipe[6]),
        .Q(\tx_axis_mac_tdata_int_reg[7]_0 [6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tx_axis_mac_tdata_int_reg[7] 
       (.C(tx_mac_aclk),
        .CE(\tx_axis_mac_tdata_int[7]_i_1_n_0 ),
        .D(rd_data_pipe[7]),
        .Q(\tx_axis_mac_tdata_int_reg[7]_0 [7]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h2F20)) 
    tx_axis_mac_tlast_i_1
       (.I0(rd_eof_reg__0),
        .I1(tx_axis_mac_tready),
        .I2(rd_state[3]),
        .I3(tx_axis_mac_tlast_i_2_n_0),
        .O(tx_axis_mac_tlast_i_1_n_0));
  LUT6 #(
    .INIT(64'hC0F0800080000000)) 
    tx_axis_mac_tlast_i_2
       (.I0(rd_eof_reg__0),
        .I1(tx_axis_mac_tready),
        .I2(rd_state[2]),
        .I3(rd_state[1]),
        .I4(rd_state[0]),
        .I5(rd_eof),
        .O(tx_axis_mac_tlast_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    tx_axis_mac_tlast_reg
       (.C(tx_mac_aclk),
        .CE(1'b1),
        .D(tx_axis_mac_tlast_i_1_n_0),
        .Q(tx_axis_mac_tlast),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h74)) 
    tx_axis_mac_tvalid_i_1
       (.I0(tx_axis_mac_tready),
        .I1(rd_state[3]),
        .I2(rd_state[2]),
        .O(tx_axis_mac_tvalid_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    tx_axis_mac_tvalid_reg
       (.C(tx_mac_aclk),
        .CE(1'b1),
        .D(tx_axis_mac_tvalid_i_1_n_0),
        .Q(tx_axis_mac_tvalid),
        .R(1'b0));
  tri_mode_ethernet_mac_0_bram_tdp tx_ramgen_i
       (.Q(wr_state),
        .SR(SR),
        .a_din(wr_eof_data_bram),
        .b_addr(\gen_fd_addr.rd_addr_reg ),
        .b_dout({rd_eof_pipe,rd_data_delay}),
        .mem_reg_0(rd_state),
        .rd_en(rd_en),
        .rd_eof(rd_eof),
        .rd_eof_reg0(rd_eof_reg0),
        .rx_fifo_resetn(rx_fifo_resetn),
        .tx_axis_mac_tready(tx_axis_mac_tready),
        .tx_mac_aclk(tx_mac_aclk),
        .userclk2_out(userclk2_out),
        .wr_accept_bram(wr_accept_bram),
        .wr_addr_reg(wr_addr_reg));
  FDRE #(
    .INIT(1'b0)) 
    wr_accept_bram_reg
       (.C(userclk2_out),
        .CE(1'b1),
        .D(\wr_accept_pipe_reg[1]_3 ),
        .Q(wr_accept_bram),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h0000470047004700)) 
    \wr_accept_pipe[0]_i_1 
       (.I0(wr_fifo_full),
        .I1(\wr_accept_pipe[0]_i_2_n_0 ),
        .I2(wr_ovflow_dst_rdy),
        .I3(tx_axis_fifo_tvalid),
        .I4(wr_eof_reg),
        .I5(tx_axis_fifo_tlast),
        .O(p_20_out));
  LUT2 #(
    .INIT(4'hE)) 
    \wr_accept_pipe[0]_i_2 
       (.I0(wr_state[1]),
        .I1(wr_state[0]),
        .O(\wr_accept_pipe[0]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_accept_pipe_reg[0] 
       (.C(userclk2_out),
        .CE(1'b1),
        .D(p_20_out),
        .Q(\wr_accept_pipe_reg[0]_2 ),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_accept_pipe_reg[1] 
       (.C(userclk2_out),
        .CE(1'b1),
        .D(\wr_accept_pipe_reg[0]_2 ),
        .Q(\wr_accept_pipe_reg[1]_3 ),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 wr_addr0_carry
       (.CI(1'b0),
        .CO({wr_addr0_carry_n_0,NLW_wr_addr0_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(wr_addr_reg[0]),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(wr_addr0[4:1]),
        .S(wr_addr_reg[4:1]));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 wr_addr0_carry__0
       (.CI(wr_addr0_carry_n_0),
        .CO({wr_addr0_carry__0_n_0,NLW_wr_addr0_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(wr_addr0[8:5]),
        .S(wr_addr_reg[8:5]));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 wr_addr0_carry__1
       (.CI(wr_addr0_carry__0_n_0),
        .CO(NLW_wr_addr0_carry__1_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_wr_addr0_carry__1_O_UNCONNECTED[3],wr_addr0[11:9]}),
        .S({1'b0,wr_addr_reg[11:9]}));
  LUT3 #(
    .INIT(8'hAB)) 
    \wr_addr[0]_i_1 
       (.I0(wr_accept_bram),
        .I1(wr_state[0]),
        .I2(wr_state[1]),
        .O(\wr_addr[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \wr_addr[0]_i_3 
       (.I0(wr_state[1]),
        .I1(wr_state[0]),
        .O(\wr_addr[0]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hABA8)) 
    \wr_addr[0]_i_4 
       (.I0(wr_addr_reg[3]),
        .I1(wr_state[1]),
        .I2(wr_state[0]),
        .I3(wr_start_addr[3]),
        .O(\wr_addr[0]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hABA8)) 
    \wr_addr[0]_i_5 
       (.I0(wr_addr_reg[2]),
        .I1(wr_state[1]),
        .I2(wr_state[0]),
        .I3(wr_start_addr[2]),
        .O(\wr_addr[0]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'hABA8)) 
    \wr_addr[0]_i_6 
       (.I0(wr_addr_reg[1]),
        .I1(wr_state[1]),
        .I2(wr_state[0]),
        .I3(wr_start_addr[1]),
        .O(\wr_addr[0]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h333A)) 
    \wr_addr[0]_i_7 
       (.I0(wr_start_addr[0]),
        .I1(wr_addr_reg[0]),
        .I2(wr_state[0]),
        .I3(wr_state[1]),
        .O(\wr_addr[0]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'hABA8)) 
    \wr_addr[4]_i_2 
       (.I0(wr_addr_reg[7]),
        .I1(wr_state[1]),
        .I2(wr_state[0]),
        .I3(wr_start_addr[7]),
        .O(\wr_addr[4]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hABA8)) 
    \wr_addr[4]_i_3 
       (.I0(wr_addr_reg[6]),
        .I1(wr_state[1]),
        .I2(wr_state[0]),
        .I3(wr_start_addr[6]),
        .O(\wr_addr[4]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hABA8)) 
    \wr_addr[4]_i_4 
       (.I0(wr_addr_reg[5]),
        .I1(wr_state[1]),
        .I2(wr_state[0]),
        .I3(wr_start_addr[5]),
        .O(\wr_addr[4]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hABA8)) 
    \wr_addr[4]_i_5 
       (.I0(wr_addr_reg[4]),
        .I1(wr_state[1]),
        .I2(wr_state[0]),
        .I3(wr_start_addr[4]),
        .O(\wr_addr[4]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'hABA8)) 
    \wr_addr[8]_i_2 
       (.I0(wr_addr_reg[11]),
        .I1(wr_state[1]),
        .I2(wr_state[0]),
        .I3(wr_start_addr[11]),
        .O(\wr_addr[8]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hABA8)) 
    \wr_addr[8]_i_3 
       (.I0(wr_addr_reg[10]),
        .I1(wr_state[1]),
        .I2(wr_state[0]),
        .I3(wr_start_addr[10]),
        .O(\wr_addr[8]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hABA8)) 
    \wr_addr[8]_i_4 
       (.I0(wr_addr_reg[9]),
        .I1(wr_state[1]),
        .I2(wr_state[0]),
        .I3(wr_start_addr[9]),
        .O(\wr_addr[8]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hABA8)) 
    \wr_addr[8]_i_5 
       (.I0(wr_addr_reg[8]),
        .I1(wr_state[1]),
        .I2(wr_state[0]),
        .I3(wr_start_addr[8]),
        .O(\wr_addr[8]_i_5_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 wr_addr_diff0_carry
       (.CI(1'b0),
        .CO({wr_addr_diff0_carry_n_0,NLW_wr_addr_diff0_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI(wr_rd_addr[3:0]),
        .O({wr_addr_diff0[3:2],NLW_wr_addr_diff0_carry_O_UNCONNECTED[1:0]}),
        .S({wr_addr_diff0_carry_i_1_n_0,wr_addr_diff0_carry_i_2_n_0,wr_addr_diff0_carry_i_3_n_0,wr_addr_diff0_carry_i_4_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 wr_addr_diff0_carry__0
       (.CI(wr_addr_diff0_carry_n_0),
        .CO({wr_addr_diff0_carry__0_n_0,NLW_wr_addr_diff0_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(wr_rd_addr[7:4]),
        .O(wr_addr_diff0[7:4]),
        .S({wr_addr_diff0_carry__0_i_1_n_0,wr_addr_diff0_carry__0_i_2_n_0,wr_addr_diff0_carry__0_i_3_n_0,wr_addr_diff0_carry__0_i_4_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    wr_addr_diff0_carry__0_i_1
       (.I0(wr_rd_addr[7]),
        .I1(wr_addr_reg[7]),
        .O(wr_addr_diff0_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    wr_addr_diff0_carry__0_i_2
       (.I0(wr_rd_addr[6]),
        .I1(wr_addr_reg[6]),
        .O(wr_addr_diff0_carry__0_i_2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    wr_addr_diff0_carry__0_i_3
       (.I0(wr_rd_addr[5]),
        .I1(wr_addr_reg[5]),
        .O(wr_addr_diff0_carry__0_i_3_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    wr_addr_diff0_carry__0_i_4
       (.I0(wr_rd_addr[4]),
        .I1(wr_addr_reg[4]),
        .O(wr_addr_diff0_carry__0_i_4_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 wr_addr_diff0_carry__1
       (.CI(wr_addr_diff0_carry__0_n_0),
        .CO(NLW_wr_addr_diff0_carry__1_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,wr_rd_addr[10:8]}),
        .O(wr_addr_diff0[11:8]),
        .S({wr_addr_diff0_carry__1_i_1_n_0,wr_addr_diff0_carry__1_i_2_n_0,wr_addr_diff0_carry__1_i_3_n_0,wr_addr_diff0_carry__1_i_4_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    wr_addr_diff0_carry__1_i_1
       (.I0(wr_addr_reg[11]),
        .I1(wr_rd_addr[11]),
        .O(wr_addr_diff0_carry__1_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    wr_addr_diff0_carry__1_i_2
       (.I0(wr_rd_addr[10]),
        .I1(wr_addr_reg[10]),
        .O(wr_addr_diff0_carry__1_i_2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    wr_addr_diff0_carry__1_i_3
       (.I0(wr_rd_addr[9]),
        .I1(wr_addr_reg[9]),
        .O(wr_addr_diff0_carry__1_i_3_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    wr_addr_diff0_carry__1_i_4
       (.I0(wr_rd_addr[8]),
        .I1(wr_addr_reg[8]),
        .O(wr_addr_diff0_carry__1_i_4_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    wr_addr_diff0_carry_i_1
       (.I0(wr_rd_addr[3]),
        .I1(wr_addr_reg[3]),
        .O(wr_addr_diff0_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    wr_addr_diff0_carry_i_2
       (.I0(wr_rd_addr[2]),
        .I1(wr_addr_reg[2]),
        .O(wr_addr_diff0_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    wr_addr_diff0_carry_i_3
       (.I0(wr_rd_addr[1]),
        .I1(wr_addr_reg[1]),
        .O(wr_addr_diff0_carry_i_3_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    wr_addr_diff0_carry_i_4
       (.I0(wr_rd_addr[0]),
        .I1(wr_addr_reg[0]),
        .O(wr_addr_diff0_carry_i_4_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_diff_reg[10] 
       (.C(userclk2_out),
        .CE(1'b1),
        .D(wr_addr_diff0[10]),
        .Q(p_2_in),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_diff_reg[11] 
       (.C(userclk2_out),
        .CE(1'b1),
        .D(wr_addr_diff0[11]),
        .Q(\wr_addr_diff_reg_n_0_[11] ),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_diff_reg[2] 
       (.C(userclk2_out),
        .CE(1'b1),
        .D(wr_addr_diff0[2]),
        .Q(\wr_addr_diff_reg_n_0_[2] ),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_diff_reg[3] 
       (.C(userclk2_out),
        .CE(1'b1),
        .D(wr_addr_diff0[3]),
        .Q(\wr_addr_diff_reg_n_0_[3] ),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_diff_reg[4] 
       (.C(userclk2_out),
        .CE(1'b1),
        .D(wr_addr_diff0[4]),
        .Q(\wr_addr_diff_reg_n_0_[4] ),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_diff_reg[5] 
       (.C(userclk2_out),
        .CE(1'b1),
        .D(wr_addr_diff0[5]),
        .Q(\wr_addr_diff_reg_n_0_[5] ),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_diff_reg[6] 
       (.C(userclk2_out),
        .CE(1'b1),
        .D(wr_addr_diff0[6]),
        .Q(\wr_addr_diff_reg_n_0_[6] ),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_diff_reg[7] 
       (.C(userclk2_out),
        .CE(1'b1),
        .D(wr_addr_diff0[7]),
        .Q(\wr_addr_diff_reg_n_0_[7] ),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_diff_reg[8] 
       (.C(userclk2_out),
        .CE(1'b1),
        .D(wr_addr_diff0[8]),
        .Q(\wr_addr_diff_reg_n_0_[8] ),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_diff_reg[9] 
       (.C(userclk2_out),
        .CE(1'b1),
        .D(wr_addr_diff0[9]),
        .Q(\wr_addr_diff_reg_n_0_[9] ),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_reg[0] 
       (.C(userclk2_out),
        .CE(\wr_addr[0]_i_1_n_0 ),
        .D(\wr_addr_reg[0]_i_2_n_7 ),
        .Q(wr_addr_reg[0]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \wr_addr_reg[0]_i_2 
       (.CI(1'b0),
        .CO({\wr_addr_reg[0]_i_2_n_0 ,\NLW_wr_addr_reg[0]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,\wr_addr[0]_i_3_n_0 }),
        .O({\wr_addr_reg[0]_i_2_n_4 ,\wr_addr_reg[0]_i_2_n_5 ,\wr_addr_reg[0]_i_2_n_6 ,\wr_addr_reg[0]_i_2_n_7 }),
        .S({\wr_addr[0]_i_4_n_0 ,\wr_addr[0]_i_5_n_0 ,\wr_addr[0]_i_6_n_0 ,\wr_addr[0]_i_7_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_reg[10] 
       (.C(userclk2_out),
        .CE(\wr_addr[0]_i_1_n_0 ),
        .D(\wr_addr_reg[8]_i_1_n_5 ),
        .Q(wr_addr_reg[10]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_reg[11] 
       (.C(userclk2_out),
        .CE(\wr_addr[0]_i_1_n_0 ),
        .D(\wr_addr_reg[8]_i_1_n_4 ),
        .Q(wr_addr_reg[11]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_reg[1] 
       (.C(userclk2_out),
        .CE(\wr_addr[0]_i_1_n_0 ),
        .D(\wr_addr_reg[0]_i_2_n_6 ),
        .Q(wr_addr_reg[1]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_reg[2] 
       (.C(userclk2_out),
        .CE(\wr_addr[0]_i_1_n_0 ),
        .D(\wr_addr_reg[0]_i_2_n_5 ),
        .Q(wr_addr_reg[2]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_reg[3] 
       (.C(userclk2_out),
        .CE(\wr_addr[0]_i_1_n_0 ),
        .D(\wr_addr_reg[0]_i_2_n_4 ),
        .Q(wr_addr_reg[3]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_reg[4] 
       (.C(userclk2_out),
        .CE(\wr_addr[0]_i_1_n_0 ),
        .D(\wr_addr_reg[4]_i_1_n_7 ),
        .Q(wr_addr_reg[4]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \wr_addr_reg[4]_i_1 
       (.CI(\wr_addr_reg[0]_i_2_n_0 ),
        .CO({\wr_addr_reg[4]_i_1_n_0 ,\NLW_wr_addr_reg[4]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\wr_addr_reg[4]_i_1_n_4 ,\wr_addr_reg[4]_i_1_n_5 ,\wr_addr_reg[4]_i_1_n_6 ,\wr_addr_reg[4]_i_1_n_7 }),
        .S({\wr_addr[4]_i_2_n_0 ,\wr_addr[4]_i_3_n_0 ,\wr_addr[4]_i_4_n_0 ,\wr_addr[4]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_reg[5] 
       (.C(userclk2_out),
        .CE(\wr_addr[0]_i_1_n_0 ),
        .D(\wr_addr_reg[4]_i_1_n_6 ),
        .Q(wr_addr_reg[5]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_reg[6] 
       (.C(userclk2_out),
        .CE(\wr_addr[0]_i_1_n_0 ),
        .D(\wr_addr_reg[4]_i_1_n_5 ),
        .Q(wr_addr_reg[6]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_reg[7] 
       (.C(userclk2_out),
        .CE(\wr_addr[0]_i_1_n_0 ),
        .D(\wr_addr_reg[4]_i_1_n_4 ),
        .Q(wr_addr_reg[7]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_reg[8] 
       (.C(userclk2_out),
        .CE(\wr_addr[0]_i_1_n_0 ),
        .D(\wr_addr_reg[8]_i_1_n_7 ),
        .Q(wr_addr_reg[8]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \wr_addr_reg[8]_i_1 
       (.CI(\wr_addr_reg[4]_i_1_n_0 ),
        .CO(\NLW_wr_addr_reg[8]_i_1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\wr_addr_reg[8]_i_1_n_4 ,\wr_addr_reg[8]_i_1_n_5 ,\wr_addr_reg[8]_i_1_n_6 ,\wr_addr_reg[8]_i_1_n_7 }),
        .S({\wr_addr[8]_i_2_n_0 ,\wr_addr[8]_i_3_n_0 ,\wr_addr[8]_i_4_n_0 ,\wr_addr[8]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \wr_addr_reg[9] 
       (.C(userclk2_out),
        .CE(\wr_addr[0]_i_1_n_0 ),
        .D(\wr_addr_reg[8]_i_1_n_6 ),
        .Q(wr_addr_reg[9]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_bram_reg[0] 
       (.C(userclk2_out),
        .CE(\wr_accept_pipe_reg[1]_3 ),
        .D(\wr_data_pipe_reg[1]_9 [0]),
        .Q(wr_eof_data_bram[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_bram_reg[1] 
       (.C(userclk2_out),
        .CE(\wr_accept_pipe_reg[1]_3 ),
        .D(\wr_data_pipe_reg[1]_9 [1]),
        .Q(wr_eof_data_bram[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_bram_reg[2] 
       (.C(userclk2_out),
        .CE(\wr_accept_pipe_reg[1]_3 ),
        .D(\wr_data_pipe_reg[1]_9 [2]),
        .Q(wr_eof_data_bram[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_bram_reg[3] 
       (.C(userclk2_out),
        .CE(\wr_accept_pipe_reg[1]_3 ),
        .D(\wr_data_pipe_reg[1]_9 [3]),
        .Q(wr_eof_data_bram[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_bram_reg[4] 
       (.C(userclk2_out),
        .CE(\wr_accept_pipe_reg[1]_3 ),
        .D(\wr_data_pipe_reg[1]_9 [4]),
        .Q(wr_eof_data_bram[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_bram_reg[5] 
       (.C(userclk2_out),
        .CE(\wr_accept_pipe_reg[1]_3 ),
        .D(\wr_data_pipe_reg[1]_9 [5]),
        .Q(wr_eof_data_bram[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_bram_reg[6] 
       (.C(userclk2_out),
        .CE(\wr_accept_pipe_reg[1]_3 ),
        .D(\wr_data_pipe_reg[1]_9 [6]),
        .Q(wr_eof_data_bram[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_bram_reg[7] 
       (.C(userclk2_out),
        .CE(\wr_accept_pipe_reg[1]_3 ),
        .D(\wr_data_pipe_reg[1]_9 [7]),
        .Q(wr_eof_data_bram[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_pipe_reg[0][0] 
       (.C(userclk2_out),
        .CE(1'b1),
        .D(D[0]),
        .Q(\wr_data_pipe_reg[0]_8 [0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_pipe_reg[0][1] 
       (.C(userclk2_out),
        .CE(1'b1),
        .D(D[1]),
        .Q(\wr_data_pipe_reg[0]_8 [1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_pipe_reg[0][2] 
       (.C(userclk2_out),
        .CE(1'b1),
        .D(D[2]),
        .Q(\wr_data_pipe_reg[0]_8 [2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_pipe_reg[0][3] 
       (.C(userclk2_out),
        .CE(1'b1),
        .D(D[3]),
        .Q(\wr_data_pipe_reg[0]_8 [3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_pipe_reg[0][4] 
       (.C(userclk2_out),
        .CE(1'b1),
        .D(D[4]),
        .Q(\wr_data_pipe_reg[0]_8 [4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_pipe_reg[0][5] 
       (.C(userclk2_out),
        .CE(1'b1),
        .D(D[5]),
        .Q(\wr_data_pipe_reg[0]_8 [5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_pipe_reg[0][6] 
       (.C(userclk2_out),
        .CE(1'b1),
        .D(D[6]),
        .Q(\wr_data_pipe_reg[0]_8 [6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_pipe_reg[0][7] 
       (.C(userclk2_out),
        .CE(1'b1),
        .D(D[7]),
        .Q(\wr_data_pipe_reg[0]_8 [7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_pipe_reg[1][0] 
       (.C(userclk2_out),
        .CE(\wr_accept_pipe_reg[0]_2 ),
        .D(\wr_data_pipe_reg[0]_8 [0]),
        .Q(\wr_data_pipe_reg[1]_9 [0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_pipe_reg[1][1] 
       (.C(userclk2_out),
        .CE(\wr_accept_pipe_reg[0]_2 ),
        .D(\wr_data_pipe_reg[0]_8 [1]),
        .Q(\wr_data_pipe_reg[1]_9 [1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_pipe_reg[1][2] 
       (.C(userclk2_out),
        .CE(\wr_accept_pipe_reg[0]_2 ),
        .D(\wr_data_pipe_reg[0]_8 [2]),
        .Q(\wr_data_pipe_reg[1]_9 [2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_pipe_reg[1][3] 
       (.C(userclk2_out),
        .CE(\wr_accept_pipe_reg[0]_2 ),
        .D(\wr_data_pipe_reg[0]_8 [3]),
        .Q(\wr_data_pipe_reg[1]_9 [3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_pipe_reg[1][4] 
       (.C(userclk2_out),
        .CE(\wr_accept_pipe_reg[0]_2 ),
        .D(\wr_data_pipe_reg[0]_8 [4]),
        .Q(\wr_data_pipe_reg[1]_9 [4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_pipe_reg[1][5] 
       (.C(userclk2_out),
        .CE(\wr_accept_pipe_reg[0]_2 ),
        .D(\wr_data_pipe_reg[0]_8 [5]),
        .Q(\wr_data_pipe_reg[1]_9 [5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_pipe_reg[1][6] 
       (.C(userclk2_out),
        .CE(\wr_accept_pipe_reg[0]_2 ),
        .D(\wr_data_pipe_reg[0]_8 [6]),
        .Q(\wr_data_pipe_reg[1]_9 [6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_data_pipe_reg[1][7] 
       (.C(userclk2_out),
        .CE(\wr_accept_pipe_reg[0]_2 ),
        .D(\wr_data_pipe_reg[0]_8 [7]),
        .Q(\wr_data_pipe_reg[1]_9 [7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_eof_bram_reg[0] 
       (.C(userclk2_out),
        .CE(\wr_accept_pipe_reg[1]_3 ),
        .D(\wr_eof_pipe_reg_n_0_[1] ),
        .Q(wr_eof_data_bram[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_eof_pipe_reg[0] 
       (.C(userclk2_out),
        .CE(1'b1),
        .D(p_16_out),
        .Q(\wr_eof_pipe_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_eof_pipe_reg[1] 
       (.C(userclk2_out),
        .CE(\wr_accept_pipe_reg[0]_2 ),
        .D(\wr_eof_pipe_reg_n_0_[0] ),
        .Q(\wr_eof_pipe_reg_n_0_[1] ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFBBBFB00088808)) 
    wr_eof_reg_i_1
       (.I0(tx_axis_fifo_tlast),
        .I1(tx_axis_fifo_tvalid),
        .I2(wr_ovflow_dst_rdy),
        .I3(\wr_accept_pipe[0]_i_2_n_0 ),
        .I4(wr_fifo_full),
        .I5(wr_eof_reg),
        .O(wr_eof_reg_i_1_n_0));
  FDSE #(
    .INIT(1'b1)) 
    wr_eof_reg_reg
       (.C(userclk2_out),
        .CE(1'b1),
        .D(wr_eof_reg_i_1_n_0),
        .Q(wr_eof_reg),
        .S(\FSM_sequential_wr_state_reg[0]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    wr_eof_state_reg_i_1
       (.I0(wr_state[1]),
        .I1(wr_state[0]),
        .O(wr_eof_state));
  FDRE #(
    .INIT(1'b0)) 
    wr_eof_state_reg_reg
       (.C(userclk2_out),
        .CE(1'b1),
        .D(wr_eof_state),
        .Q(wr_eof_state_reg),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  LUT5 #(
    .INIT(32'h00300020)) 
    wr_fifo_full_i_1
       (.I0(\wr_addr_diff_reg_n_0_[3] ),
        .I1(\wr_addr_diff_reg_n_0_[11] ),
        .I2(wr_fifo_full_i_2_n_0),
        .I3(p_2_in),
        .I4(\wr_addr_diff_reg_n_0_[2] ),
        .O(wr_fifo_full0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    wr_fifo_full_i_2
       (.I0(\wr_addr_diff_reg_n_0_[8] ),
        .I1(\wr_addr_diff_reg_n_0_[7] ),
        .I2(\wr_addr_diff_reg_n_0_[5] ),
        .I3(\wr_addr_diff_reg_n_0_[4] ),
        .I4(\wr_addr_diff_reg_n_0_[6] ),
        .I5(\wr_addr_diff_reg_n_0_[9] ),
        .O(wr_fifo_full_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    wr_fifo_full_reg
       (.C(userclk2_out),
        .CE(1'b1),
        .D(wr_fifo_full0),
        .Q(wr_fifo_full),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    wr_frame_in_fifo_i_1
       (.I0(Q[0]),
        .I1(wr_frame_in_fifo_i_2_n_0),
        .I2(DI[3]),
        .I3(DI[2]),
        .I4(Q[2]),
        .I5(Q[1]),
        .O(wr_frame_in_fifo_i_1_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    wr_frame_in_fifo_i_2
       (.I0(\gen_fd_count.wr_frames_reg [8]),
        .I1(\gen_fd_count.wr_frames_reg [7]),
        .I2(Q[3]),
        .I3(DI[1]),
        .O(wr_frame_in_fifo_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    wr_frame_in_fifo_reg
       (.C(userclk2_out),
        .CE(1'b1),
        .D(wr_frame_in_fifo_i_1_n_0),
        .Q(wr_frame_in_fifo),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    wr_frames_in_fifo_i_1
       (.I0(Q[1]),
        .I1(Q[2]),
        .I2(DI[2]),
        .I3(DI[3]),
        .I4(wr_frame_in_fifo_i_2_n_0),
        .O(wr_frames_in_fifo_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    wr_frames_in_fifo_reg
       (.C(userclk2_out),
        .CE(1'b1),
        .D(wr_frames_in_fifo_i_1_n_0),
        .Q(wr_frames_in_fifo),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  LUT5 #(
    .INIT(32'hAA800000)) 
    wr_ovflow_dst_rdy_i_1
       (.I0(wr_ovflow_dst_rdy_i_2_n_0),
        .I1(tx_axis_fifo_tlast),
        .I2(tx_axis_fifo_tvalid),
        .I3(wr_ovflow_dst_rdy),
        .I4(rx_fifo_resetn),
        .O(wr_ovflow_dst_rdy_i_1_n_0));
  LUT5 #(
    .INIT(32'hFBFFFFFF)) 
    wr_ovflow_dst_rdy_i_2
       (.I0(wr_eof_state_reg),
        .I1(wr_fifo_full),
        .I2(wr_frame_in_fifo),
        .I3(wr_state[1]),
        .I4(wr_state[0]),
        .O(wr_ovflow_dst_rdy_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    wr_ovflow_dst_rdy_reg
       (.C(userclk2_out),
        .CE(1'b1),
        .D(wr_ovflow_dst_rdy_i_1_n_0),
        .Q(wr_ovflow_dst_rdy),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    \wr_rd_addr[11]_i_1 
       (.I0(wr_txfer_tog_sync),
        .I1(wr_txfer_tog_delay),
        .O(wr_txfer_en));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \wr_rd_addr_reg[0] 
       (.C(userclk2_out),
        .CE(wr_txfer_en),
        .D(rd_addr_txfer[0]),
        .Q(wr_rd_addr[0]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \wr_rd_addr_reg[10] 
       (.C(userclk2_out),
        .CE(wr_txfer_en),
        .D(rd_addr_txfer[10]),
        .Q(wr_rd_addr[10]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \wr_rd_addr_reg[11] 
       (.C(userclk2_out),
        .CE(wr_txfer_en),
        .D(rd_addr_txfer[11]),
        .Q(wr_rd_addr[11]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \wr_rd_addr_reg[1] 
       (.C(userclk2_out),
        .CE(wr_txfer_en),
        .D(rd_addr_txfer[1]),
        .Q(wr_rd_addr[1]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \wr_rd_addr_reg[2] 
       (.C(userclk2_out),
        .CE(wr_txfer_en),
        .D(rd_addr_txfer[2]),
        .Q(wr_rd_addr[2]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \wr_rd_addr_reg[3] 
       (.C(userclk2_out),
        .CE(wr_txfer_en),
        .D(rd_addr_txfer[3]),
        .Q(wr_rd_addr[3]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \wr_rd_addr_reg[4] 
       (.C(userclk2_out),
        .CE(wr_txfer_en),
        .D(rd_addr_txfer[4]),
        .Q(wr_rd_addr[4]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \wr_rd_addr_reg[5] 
       (.C(userclk2_out),
        .CE(wr_txfer_en),
        .D(rd_addr_txfer[5]),
        .Q(wr_rd_addr[5]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \wr_rd_addr_reg[6] 
       (.C(userclk2_out),
        .CE(wr_txfer_en),
        .D(rd_addr_txfer[6]),
        .Q(wr_rd_addr[6]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \wr_rd_addr_reg[7] 
       (.C(userclk2_out),
        .CE(wr_txfer_en),
        .D(rd_addr_txfer[7]),
        .Q(wr_rd_addr[7]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \wr_rd_addr_reg[8] 
       (.C(userclk2_out),
        .CE(wr_txfer_en),
        .D(rd_addr_txfer[8]),
        .Q(wr_rd_addr[8]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \wr_rd_addr_reg[9] 
       (.C(userclk2_out),
        .CE(wr_txfer_en),
        .D(rd_addr_txfer[9]),
        .Q(wr_rd_addr[9]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_sof_pipe_reg[0] 
       (.C(userclk2_out),
        .CE(1'b1),
        .D(p_23_out),
        .Q(\wr_sof_pipe_reg[0]_4 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wr_sof_pipe_reg[1] 
       (.C(userclk2_out),
        .CE(\wr_accept_pipe_reg[0]_2 ),
        .D(\wr_sof_pipe_reg[0]_4 ),
        .Q(\wr_sof_pipe_reg[1]__0 ),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \wr_start_addr[0]_i_1 
       (.I0(wr_addr_reg[0]),
        .O(wr_addr0[0]));
  LUT5 #(
    .INIT(32'h0000BA00)) 
    \wr_start_addr[11]_i_1 
       (.I0(wr_eof_data_bram[8]),
        .I1(\wr_eof_pipe_reg_n_0_[1] ),
        .I2(\wr_sof_pipe_reg[1]__0 ),
        .I3(wr_state[1]),
        .I4(wr_state[0]),
        .O(wr_start_addr_load));
  FDRE #(
    .INIT(1'b0)) 
    \wr_start_addr_reg[0] 
       (.C(userclk2_out),
        .CE(wr_start_addr_load),
        .D(wr_addr0[0]),
        .Q(wr_start_addr[0]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_start_addr_reg[10] 
       (.C(userclk2_out),
        .CE(wr_start_addr_load),
        .D(wr_addr0[10]),
        .Q(wr_start_addr[10]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_start_addr_reg[11] 
       (.C(userclk2_out),
        .CE(wr_start_addr_load),
        .D(wr_addr0[11]),
        .Q(wr_start_addr[11]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_start_addr_reg[1] 
       (.C(userclk2_out),
        .CE(wr_start_addr_load),
        .D(wr_addr0[1]),
        .Q(wr_start_addr[1]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_start_addr_reg[2] 
       (.C(userclk2_out),
        .CE(wr_start_addr_load),
        .D(wr_addr0[2]),
        .Q(wr_start_addr[2]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_start_addr_reg[3] 
       (.C(userclk2_out),
        .CE(wr_start_addr_load),
        .D(wr_addr0[3]),
        .Q(wr_start_addr[3]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_start_addr_reg[4] 
       (.C(userclk2_out),
        .CE(wr_start_addr_load),
        .D(wr_addr0[4]),
        .Q(wr_start_addr[4]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_start_addr_reg[5] 
       (.C(userclk2_out),
        .CE(wr_start_addr_load),
        .D(wr_addr0[5]),
        .Q(wr_start_addr[5]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_start_addr_reg[6] 
       (.C(userclk2_out),
        .CE(wr_start_addr_load),
        .D(wr_addr0[6]),
        .Q(wr_start_addr[6]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_start_addr_reg[7] 
       (.C(userclk2_out),
        .CE(wr_start_addr_load),
        .D(wr_addr0[7]),
        .Q(wr_start_addr[7]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_start_addr_reg[8] 
       (.C(userclk2_out),
        .CE(wr_start_addr_load),
        .D(wr_addr0[8]),
        .Q(wr_start_addr[8]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wr_start_addr_reg[9] 
       (.C(userclk2_out),
        .CE(wr_start_addr_load),
        .D(wr_addr0[9]),
        .Q(wr_start_addr[9]),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    wr_tran_frame_delay_reg
       (.C(userclk2_out),
        .CE(1'b1),
        .D(wr_tran_frame_sync),
        .Q(wr_tran_frame_delay),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    wr_transmit_frame_delay_reg
       (.C(userclk2_out),
        .CE(1'b1),
        .D(wr_transmit_frame),
        .Q(wr_transmit_frame_delay),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    wr_transmit_frame_i_1
       (.I0(wr_tran_frame_sync),
        .I1(wr_tran_frame_delay),
        .O(wr_transmit_frame0));
  FDRE #(
    .INIT(1'b0)) 
    wr_transmit_frame_reg
       (.C(userclk2_out),
        .CE(1'b1),
        .D(wr_transmit_frame0),
        .Q(wr_transmit_frame),
        .R(\FSM_sequential_wr_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    wr_txfer_tog_delay_reg
       (.C(userclk2_out),
        .CE(1'b1),
        .D(wr_txfer_tog_sync),
        .Q(wr_txfer_tog_delay),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "GPCS_PMA_GEN" *) 
module gig_ethernet_pcs_pma_0_GPCS_PMA_GEN
   (MGT_TX_RESET,
    status_vector,
    \NO_MANAGEMENT.CONFIGURATION_VECTOR_REG_reg[3]_0 ,
    \NO_MANAGEMENT.CONFIGURATION_VECTOR_REG_reg[2]_0 ,
    MGT_RX_RESET,
    gmii_rxd,
    gmii_rx_er,
    txchardispmode,
    txcharisk,
    txdata,
    gmii_rx_dv,
    enablealign,
    txchardispval,
    userclk2,
    dcm_locked,
    reset,
    signal_detect,
    gmii_tx_en,
    gmii_tx_er,
    configuration_vector,
    gmii_txd,
    rxnotintable,
    rxbufstatus,
    txbuferr,
    rxdisperr,
    rxclkcorcnt,
    rxcharisk,
    rxchariscomma,
    reset_done,
    rxdata,
    lopt);
  output MGT_TX_RESET;
  output [6:0]status_vector;
  output \NO_MANAGEMENT.CONFIGURATION_VECTOR_REG_reg[3]_0 ;
  output \NO_MANAGEMENT.CONFIGURATION_VECTOR_REG_reg[2]_0 ;
  output MGT_RX_RESET;
  output [7:0]gmii_rxd;
  output gmii_rx_er;
  output txchardispmode;
  output txcharisk;
  output [7:0]txdata;
  output gmii_rx_dv;
  output enablealign;
  output txchardispval;
  input userclk2;
  input dcm_locked;
  input reset;
  input signal_detect;
  input gmii_tx_en;
  input gmii_tx_er;
  input [2:0]configuration_vector;
  input [7:0]gmii_txd;
  input [0:0]rxnotintable;
  input [0:0]rxbufstatus;
  input txbuferr;
  input [0:0]rxdisperr;
  input [1:0]rxclkcorcnt;
  input [0:0]rxcharisk;
  input [0:0]rxchariscomma;
  input reset_done;
  input [7:0]rxdata;
  output lopt;

  wire D;
  wire \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[0] ;
  wire \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[10] ;
  wire \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[11] ;
  wire \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[12] ;
  wire \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[13] ;
  wire \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[1] ;
  wire \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[2] ;
  wire \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[3] ;
  wire \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[4] ;
  wire \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[5] ;
  wire \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[6] ;
  wire \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[7] ;
  wire \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[8] ;
  wire \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[9] ;
  wire \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[0] ;
  wire \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[10] ;
  wire \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[11] ;
  wire \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[12] ;
  wire \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[13] ;
  wire \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[1] ;
  wire \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[2] ;
  wire \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[3] ;
  wire \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[4] ;
  wire \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[5] ;
  wire \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[6] ;
  wire \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[7] ;
  wire \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[8] ;
  wire \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[9] ;
  wire I0;
  wire \IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_0 ;
  wire \IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_1 ;
  wire \IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_10 ;
  wire \IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_11 ;
  wire \IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_12 ;
  wire \IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_13 ;
  wire \IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_14 ;
  wire \IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_15 ;
  wire \IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_16 ;
  wire \IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_17 ;
  wire \IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_18 ;
  wire \IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_19 ;
  wire \IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_2 ;
  wire \IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_20 ;
  wire \IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_21 ;
  wire \IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_3 ;
  wire \IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_4 ;
  wire \IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_5 ;
  wire \IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_6 ;
  wire \IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_7 ;
  wire \IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_8 ;
  wire \IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_9 ;
  wire \MGT_RESET.SYNC_ASYNC_RESET_n_0 ;
  wire MGT_RX_RESET;
  wire MGT_RX_RESET_INT;
  wire MGT_TX_RESET;
  wire MGT_TX_RESET_INT;
  (* async_reg = "true" *) wire RESET_INT;
  (* async_reg = "true" *) wire RESET_INT_PIPE;
  wire RXEVEN;
  wire RXNOTINTABLE_INT;
  wire RXSYNC_STATUS;
  wire \RX_GMII_AT_TXOUTCLK.RECEIVER_TXOUTCLK_n_6 ;
  wire \RX_GMII_AT_TXOUTCLK.RECEIVER_TXOUTCLK_n_7 ;
  wire RX_RST_SM0;
  wire S2;
  wire SIGNAL_DETECT_MOD;
  wire STATUS_VECTOR_0_PRE;
  wire STATUS_VECTOR_0_PRE0;
  wire \STATUS_VECTOR_reg[1]_lopt_replica_1 ;
  wire SYNC_STATUS_REG;
  wire SYNC_STATUS_REG0;
  wire TXBUFERR_INT;
  wire TX_RST_SM0;
  wire \USE_ROCKET_IO.MGT_TX_RESET_INT_i_3_n_0 ;
  wire \USE_ROCKET_IO.MGT_TX_RESET_INT_i_4_n_0 ;
  wire \USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXCHARISCOMMA_INT_reg_n_0 ;
  wire \USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXCHARISK_INT_reg_n_0 ;
  wire \USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXDATA_INT_reg_n_0_[0] ;
  wire \USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXDATA_INT_reg_n_0_[1] ;
  wire \USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXDATA_INT_reg_n_0_[2] ;
  wire \USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXDATA_INT_reg_n_0_[3] ;
  wire \USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXDATA_INT_reg_n_0_[4] ;
  wire \USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXDATA_INT_reg_n_0_[5] ;
  wire \USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXDATA_INT_reg_n_0_[6] ;
  wire \USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXDATA_INT_reg_n_0_[7] ;
  wire \USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.MGT_RX_RESET_INT_i_3_n_0 ;
  wire \USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.MGT_RX_RESET_INT_i_4_n_0 ;
  wire dcm_locked;
  wire enablealign;
  wire gmii_rx_dv;
  wire gmii_rx_er;
  wire [7:0]gmii_rxd;
  wire gmii_tx_en;
  wire gmii_tx_er;
  wire [7:0]gmii_txd;
  wire p_0_in;
  wire reset;
  wire reset_done;
  wire [0:0]rxbufstatus;
  wire [0:0]rxchariscomma;
  wire [0:0]rxcharisk;
  wire [7:0]rxdata;
  wire [0:0]rxdisperr;
  wire [0:0]rxnotintable;
  wire signal_detect;
  wire [6:0]status_vector;
  wire txbuferr;
  wire txchardispmode;
  wire txchardispval;
  wire txcharisk;
  wire [7:0]txdata;
  wire userclk2;
  wire [0:0]\NLW_IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_CONFIGURATION_VECTOR_REG_UNCONNECTED ;
  wire [0:0]\NLW_IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_SR_UNCONNECTED ;
  wire \NLW_RX_GMII_AT_TXOUTCLK.RECEIVER_TXOUTCLK_RX_ER_reg_0_UNCONNECTED ;
  wire [1:0]\NLW_RX_GMII_AT_TXOUTCLK.RECEIVER_TXOUTCLK_C_HDR_REMOVED_REG_reg_0_UNCONNECTED ;
  wire [2:0]\NLW_RX_GMII_AT_TXOUTCLK.RECEIVER_TXOUTCLK_status_vector_UNCONNECTED ;
  wire [0:0]\NLW_RX_GMII_AT_TXOUTCLK.SYNCHRONISATION_CONFIGURATION_VECTOR_REG_UNCONNECTED ;
  wire NLW_SYNC_SIGNAL_DETECT_SIGNAL_DETECT_REG_reg_UNCONNECTED;

  assign lopt = \STATUS_VECTOR_reg[1]_lopt_replica_1 ;
  (* FSM_ENCODED_STATES = "iSTATE:000000000001000,iSTATE0:000000000010000,iSTATE1:010000000000000,iSTATE2:000000000000100,iSTATE3:000100000000000,iSTATE4:001000000000000,iSTATE5:000010000000000,iSTATE6:000000000000010,iSTATE7:000000000000001,iSTATE8:000001000000000,iSTATE9:000000010000000,iSTATE10:000000100000000,iSTATE11:000000001000000,iSTATE12:100000000000000,iSTATE13:000000000100000" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg[0] 
       (.C(userclk2),
        .CE(1'b1),
        .D(1'b0),
        .Q(\FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[0] ),
        .S(RX_RST_SM0));
  (* FSM_ENCODED_STATES = "iSTATE:000000000001000,iSTATE0:000000000010000,iSTATE1:010000000000000,iSTATE2:000000000000100,iSTATE3:000100000000000,iSTATE4:001000000000000,iSTATE5:000010000000000,iSTATE6:000000000000010,iSTATE7:000000000000001,iSTATE8:000001000000000,iSTATE9:000000010000000,iSTATE10:000000100000000,iSTATE11:000000001000000,iSTATE12:100000000000000,iSTATE13:000000000100000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg[10] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[9] ),
        .Q(\FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[10] ),
        .R(RX_RST_SM0));
  (* FSM_ENCODED_STATES = "iSTATE:000000000001000,iSTATE0:000000000010000,iSTATE1:010000000000000,iSTATE2:000000000000100,iSTATE3:000100000000000,iSTATE4:001000000000000,iSTATE5:000010000000000,iSTATE6:000000000000010,iSTATE7:000000000000001,iSTATE8:000001000000000,iSTATE9:000000010000000,iSTATE10:000000100000000,iSTATE11:000000001000000,iSTATE12:100000000000000,iSTATE13:000000000100000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg[11] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[10] ),
        .Q(\FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[11] ),
        .R(RX_RST_SM0));
  (* FSM_ENCODED_STATES = "iSTATE:000000000001000,iSTATE0:000000000010000,iSTATE1:010000000000000,iSTATE2:000000000000100,iSTATE3:000100000000000,iSTATE4:001000000000000,iSTATE5:000010000000000,iSTATE6:000000000000010,iSTATE7:000000000000001,iSTATE8:000001000000000,iSTATE9:000000010000000,iSTATE10:000000100000000,iSTATE11:000000001000000,iSTATE12:100000000000000,iSTATE13:000000000100000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg[12] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[11] ),
        .Q(\FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[12] ),
        .R(RX_RST_SM0));
  (* FSM_ENCODED_STATES = "iSTATE:000000000001000,iSTATE0:000000000010000,iSTATE1:010000000000000,iSTATE2:000000000000100,iSTATE3:000100000000000,iSTATE4:001000000000000,iSTATE5:000010000000000,iSTATE6:000000000000010,iSTATE7:000000000000001,iSTATE8:000001000000000,iSTATE9:000000010000000,iSTATE10:000000100000000,iSTATE11:000000001000000,iSTATE12:100000000000000,iSTATE13:000000000100000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg[13] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[12] ),
        .Q(\FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[13] ),
        .R(RX_RST_SM0));
  (* FSM_ENCODED_STATES = "iSTATE:000000000001000,iSTATE0:000000000010000,iSTATE1:010000000000000,iSTATE2:000000000000100,iSTATE3:000100000000000,iSTATE4:001000000000000,iSTATE5:000010000000000,iSTATE6:000000000000010,iSTATE7:000000000000001,iSTATE8:000001000000000,iSTATE9:000000010000000,iSTATE10:000000100000000,iSTATE11:000000001000000,iSTATE12:100000000000000,iSTATE13:000000000100000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg[1] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[0] ),
        .Q(\FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[1] ),
        .R(RX_RST_SM0));
  (* FSM_ENCODED_STATES = "iSTATE:000000000001000,iSTATE0:000000000010000,iSTATE1:010000000000000,iSTATE2:000000000000100,iSTATE3:000100000000000,iSTATE4:001000000000000,iSTATE5:000010000000000,iSTATE6:000000000000010,iSTATE7:000000000000001,iSTATE8:000001000000000,iSTATE9:000000010000000,iSTATE10:000000100000000,iSTATE11:000000001000000,iSTATE12:100000000000000,iSTATE13:000000000100000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg[2] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[1] ),
        .Q(\FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[2] ),
        .R(RX_RST_SM0));
  (* FSM_ENCODED_STATES = "iSTATE:000000000001000,iSTATE0:000000000010000,iSTATE1:010000000000000,iSTATE2:000000000000100,iSTATE3:000100000000000,iSTATE4:001000000000000,iSTATE5:000010000000000,iSTATE6:000000000000010,iSTATE7:000000000000001,iSTATE8:000001000000000,iSTATE9:000000010000000,iSTATE10:000000100000000,iSTATE11:000000001000000,iSTATE12:100000000000000,iSTATE13:000000000100000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg[3] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[2] ),
        .Q(\FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[3] ),
        .R(RX_RST_SM0));
  (* FSM_ENCODED_STATES = "iSTATE:000000000001000,iSTATE0:000000000010000,iSTATE1:010000000000000,iSTATE2:000000000000100,iSTATE3:000100000000000,iSTATE4:001000000000000,iSTATE5:000010000000000,iSTATE6:000000000000010,iSTATE7:000000000000001,iSTATE8:000001000000000,iSTATE9:000000010000000,iSTATE10:000000100000000,iSTATE11:000000001000000,iSTATE12:100000000000000,iSTATE13:000000000100000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg[4] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[3] ),
        .Q(\FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[4] ),
        .R(RX_RST_SM0));
  (* FSM_ENCODED_STATES = "iSTATE:000000000001000,iSTATE0:000000000010000,iSTATE1:010000000000000,iSTATE2:000000000000100,iSTATE3:000100000000000,iSTATE4:001000000000000,iSTATE5:000010000000000,iSTATE6:000000000000010,iSTATE7:000000000000001,iSTATE8:000001000000000,iSTATE9:000000010000000,iSTATE10:000000100000000,iSTATE11:000000001000000,iSTATE12:100000000000000,iSTATE13:000000000100000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg[5] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[4] ),
        .Q(\FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[5] ),
        .R(RX_RST_SM0));
  (* FSM_ENCODED_STATES = "iSTATE:000000000001000,iSTATE0:000000000010000,iSTATE1:010000000000000,iSTATE2:000000000000100,iSTATE3:000100000000000,iSTATE4:001000000000000,iSTATE5:000010000000000,iSTATE6:000000000000010,iSTATE7:000000000000001,iSTATE8:000001000000000,iSTATE9:000000010000000,iSTATE10:000000100000000,iSTATE11:000000001000000,iSTATE12:100000000000000,iSTATE13:000000000100000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg[6] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[5] ),
        .Q(\FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[6] ),
        .R(RX_RST_SM0));
  (* FSM_ENCODED_STATES = "iSTATE:000000000001000,iSTATE0:000000000010000,iSTATE1:010000000000000,iSTATE2:000000000000100,iSTATE3:000100000000000,iSTATE4:001000000000000,iSTATE5:000010000000000,iSTATE6:000000000000010,iSTATE7:000000000000001,iSTATE8:000001000000000,iSTATE9:000000010000000,iSTATE10:000000100000000,iSTATE11:000000001000000,iSTATE12:100000000000000,iSTATE13:000000000100000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg[7] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[6] ),
        .Q(\FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[7] ),
        .R(RX_RST_SM0));
  (* FSM_ENCODED_STATES = "iSTATE:000000000001000,iSTATE0:000000000010000,iSTATE1:010000000000000,iSTATE2:000000000000100,iSTATE3:000100000000000,iSTATE4:001000000000000,iSTATE5:000010000000000,iSTATE6:000000000000010,iSTATE7:000000000000001,iSTATE8:000001000000000,iSTATE9:000000010000000,iSTATE10:000000100000000,iSTATE11:000000001000000,iSTATE12:100000000000000,iSTATE13:000000000100000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg[8] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[7] ),
        .Q(\FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[8] ),
        .R(RX_RST_SM0));
  (* FSM_ENCODED_STATES = "iSTATE:000000000001000,iSTATE0:000000000010000,iSTATE1:010000000000000,iSTATE2:000000000000100,iSTATE3:000100000000000,iSTATE4:001000000000000,iSTATE5:000010000000000,iSTATE6:000000000000010,iSTATE7:000000000000001,iSTATE8:000001000000000,iSTATE9:000000010000000,iSTATE10:000000100000000,iSTATE11:000000001000000,iSTATE12:100000000000000,iSTATE13:000000000100000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg[9] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[8] ),
        .Q(\FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[9] ),
        .R(RX_RST_SM0));
  (* FSM_ENCODED_STATES = "iSTATE:000000000001000,iSTATE0:000000000010000,iSTATE1:010000000000000,iSTATE2:000000000000100,iSTATE3:000100000000000,iSTATE4:001000000000000,iSTATE5:000010000000000,iSTATE6:000000000000010,iSTATE7:000000000000001,iSTATE8:000001000000000,iSTATE9:000000010000000,iSTATE10:000000100000000,iSTATE11:000000001000000,iSTATE12:100000000000000,iSTATE13:000000000100000" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[0] 
       (.C(userclk2),
        .CE(1'b1),
        .D(1'b0),
        .Q(\FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[0] ),
        .S(TX_RST_SM0));
  (* FSM_ENCODED_STATES = "iSTATE:000000000001000,iSTATE0:000000000010000,iSTATE1:010000000000000,iSTATE2:000000000000100,iSTATE3:000100000000000,iSTATE4:001000000000000,iSTATE5:000010000000000,iSTATE6:000000000000010,iSTATE7:000000000000001,iSTATE8:000001000000000,iSTATE9:000000010000000,iSTATE10:000000100000000,iSTATE11:000000001000000,iSTATE12:100000000000000,iSTATE13:000000000100000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[10] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[9] ),
        .Q(\FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[10] ),
        .R(TX_RST_SM0));
  (* FSM_ENCODED_STATES = "iSTATE:000000000001000,iSTATE0:000000000010000,iSTATE1:010000000000000,iSTATE2:000000000000100,iSTATE3:000100000000000,iSTATE4:001000000000000,iSTATE5:000010000000000,iSTATE6:000000000000010,iSTATE7:000000000000001,iSTATE8:000001000000000,iSTATE9:000000010000000,iSTATE10:000000100000000,iSTATE11:000000001000000,iSTATE12:100000000000000,iSTATE13:000000000100000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[10] ),
        .Q(\FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[11] ),
        .R(TX_RST_SM0));
  (* FSM_ENCODED_STATES = "iSTATE:000000000001000,iSTATE0:000000000010000,iSTATE1:010000000000000,iSTATE2:000000000000100,iSTATE3:000100000000000,iSTATE4:001000000000000,iSTATE5:000010000000000,iSTATE6:000000000000010,iSTATE7:000000000000001,iSTATE8:000001000000000,iSTATE9:000000010000000,iSTATE10:000000100000000,iSTATE11:000000001000000,iSTATE12:100000000000000,iSTATE13:000000000100000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[12] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[11] ),
        .Q(\FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[12] ),
        .R(TX_RST_SM0));
  (* FSM_ENCODED_STATES = "iSTATE:000000000001000,iSTATE0:000000000010000,iSTATE1:010000000000000,iSTATE2:000000000000100,iSTATE3:000100000000000,iSTATE4:001000000000000,iSTATE5:000010000000000,iSTATE6:000000000000010,iSTATE7:000000000000001,iSTATE8:000001000000000,iSTATE9:000000010000000,iSTATE10:000000100000000,iSTATE11:000000001000000,iSTATE12:100000000000000,iSTATE13:000000000100000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[12] ),
        .Q(\FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[13] ),
        .R(TX_RST_SM0));
  (* FSM_ENCODED_STATES = "iSTATE:000000000001000,iSTATE0:000000000010000,iSTATE1:010000000000000,iSTATE2:000000000000100,iSTATE3:000100000000000,iSTATE4:001000000000000,iSTATE5:000010000000000,iSTATE6:000000000000010,iSTATE7:000000000000001,iSTATE8:000001000000000,iSTATE9:000000010000000,iSTATE10:000000100000000,iSTATE11:000000001000000,iSTATE12:100000000000000,iSTATE13:000000000100000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[0] ),
        .Q(\FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[1] ),
        .R(TX_RST_SM0));
  (* FSM_ENCODED_STATES = "iSTATE:000000000001000,iSTATE0:000000000010000,iSTATE1:010000000000000,iSTATE2:000000000000100,iSTATE3:000100000000000,iSTATE4:001000000000000,iSTATE5:000010000000000,iSTATE6:000000000000010,iSTATE7:000000000000001,iSTATE8:000001000000000,iSTATE9:000000010000000,iSTATE10:000000100000000,iSTATE11:000000001000000,iSTATE12:100000000000000,iSTATE13:000000000100000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[1] ),
        .Q(\FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[2] ),
        .R(TX_RST_SM0));
  (* FSM_ENCODED_STATES = "iSTATE:000000000001000,iSTATE0:000000000010000,iSTATE1:010000000000000,iSTATE2:000000000000100,iSTATE3:000100000000000,iSTATE4:001000000000000,iSTATE5:000010000000000,iSTATE6:000000000000010,iSTATE7:000000000000001,iSTATE8:000001000000000,iSTATE9:000000010000000,iSTATE10:000000100000000,iSTATE11:000000001000000,iSTATE12:100000000000000,iSTATE13:000000000100000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[2] ),
        .Q(\FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[3] ),
        .R(TX_RST_SM0));
  (* FSM_ENCODED_STATES = "iSTATE:000000000001000,iSTATE0:000000000010000,iSTATE1:010000000000000,iSTATE2:000000000000100,iSTATE3:000100000000000,iSTATE4:001000000000000,iSTATE5:000010000000000,iSTATE6:000000000000010,iSTATE7:000000000000001,iSTATE8:000001000000000,iSTATE9:000000010000000,iSTATE10:000000100000000,iSTATE11:000000001000000,iSTATE12:100000000000000,iSTATE13:000000000100000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[3] ),
        .Q(\FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[4] ),
        .R(TX_RST_SM0));
  (* FSM_ENCODED_STATES = "iSTATE:000000000001000,iSTATE0:000000000010000,iSTATE1:010000000000000,iSTATE2:000000000000100,iSTATE3:000100000000000,iSTATE4:001000000000000,iSTATE5:000010000000000,iSTATE6:000000000000010,iSTATE7:000000000000001,iSTATE8:000001000000000,iSTATE9:000000010000000,iSTATE10:000000100000000,iSTATE11:000000001000000,iSTATE12:100000000000000,iSTATE13:000000000100000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[4] ),
        .Q(\FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[5] ),
        .R(TX_RST_SM0));
  (* FSM_ENCODED_STATES = "iSTATE:000000000001000,iSTATE0:000000000010000,iSTATE1:010000000000000,iSTATE2:000000000000100,iSTATE3:000100000000000,iSTATE4:001000000000000,iSTATE5:000010000000000,iSTATE6:000000000000010,iSTATE7:000000000000001,iSTATE8:000001000000000,iSTATE9:000000010000000,iSTATE10:000000100000000,iSTATE11:000000001000000,iSTATE12:100000000000000,iSTATE13:000000000100000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[5] ),
        .Q(\FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[6] ),
        .R(TX_RST_SM0));
  (* FSM_ENCODED_STATES = "iSTATE:000000000001000,iSTATE0:000000000010000,iSTATE1:010000000000000,iSTATE2:000000000000100,iSTATE3:000100000000000,iSTATE4:001000000000000,iSTATE5:000010000000000,iSTATE6:000000000000010,iSTATE7:000000000000001,iSTATE8:000001000000000,iSTATE9:000000010000000,iSTATE10:000000100000000,iSTATE11:000000001000000,iSTATE12:100000000000000,iSTATE13:000000000100000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[6] ),
        .Q(\FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[7] ),
        .R(TX_RST_SM0));
  (* FSM_ENCODED_STATES = "iSTATE:000000000001000,iSTATE0:000000000010000,iSTATE1:010000000000000,iSTATE2:000000000000100,iSTATE3:000100000000000,iSTATE4:001000000000000,iSTATE5:000010000000000,iSTATE6:000000000000010,iSTATE7:000000000000001,iSTATE8:000001000000000,iSTATE9:000000010000000,iSTATE10:000000100000000,iSTATE11:000000001000000,iSTATE12:100000000000000,iSTATE13:000000000100000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[7] ),
        .Q(\FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[8] ),
        .R(TX_RST_SM0));
  (* FSM_ENCODED_STATES = "iSTATE:000000000001000,iSTATE0:000000000010000,iSTATE1:010000000000000,iSTATE2:000000000000100,iSTATE3:000100000000000,iSTATE4:001000000000000,iSTATE5:000010000000000,iSTATE6:000000000000010,iSTATE7:000000000000001,iSTATE8:000001000000000,iSTATE9:000000010000000,iSTATE10:000000100000000,iSTATE11:000000001000000,iSTATE12:100000000000000,iSTATE13:000000000100000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[8] ),
        .Q(\FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[9] ),
        .R(TX_RST_SM0));
  gig_ethernet_pcs_pma_0_TX \IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER 
       (.\CODE_GRP_CNT_reg[0]_0 (\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_5 ),
        .\CODE_GRP_CNT_reg[0]_1 (\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_6 ),
        .CONFIGURATION_VECTOR_REG(\NLW_IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_CONFIGURATION_VECTOR_REG_UNCONNECTED [0]),
        .D({\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_1 ,\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_2 ,\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_3 ,\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_4 }),
        .\NO_QSGMII_CHAR.TXCHARDISPVAL_reg_0 (\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_13 ),
        .\NO_QSGMII_DATA.TXCHARISK_reg_0 (\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_7 ),
        .\NO_QSGMII_DATA.TXCHARISK_reg_1 (\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_8 ),
        .\NO_QSGMII_DATA.TXDATA_reg[2]_0 (\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_9 ),
        .\NO_QSGMII_DATA.TXDATA_reg[3]_0 (\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_10 ),
        .\NO_QSGMII_DATA.TXDATA_reg[4]_0 (MGT_TX_RESET),
        .\NO_QSGMII_DATA.TXDATA_reg[5]_0 (\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_11 ),
        .\NO_QSGMII_DATA.TXDATA_reg[7]_0 (\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_12 ),
        .\NO_QSGMII_DATA.TXDATA_reg[7]_1 ({\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_14 ,\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_15 ,\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_16 ,\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_17 ,\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_18 ,\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_19 ,\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_20 ,\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_21 }),
        .SR(\NLW_IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_SR_UNCONNECTED [0]),
        .\USE_ROCKET_IO.MGT_TX_RESET_INT_reg (\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_0 ),
        .gmii_tx_en(gmii_tx_en),
        .gmii_tx_er(gmii_tx_er),
        .gmii_txd(gmii_txd),
        .rxchariscomma(rxchariscomma),
        .rxcharisk(rxcharisk),
        .rxdata(rxdata),
        .userclk2(userclk2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    \MGT_RESET.RESET_INT_PIPE_reg 
       (.C(userclk2),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\MGT_RESET.SYNC_ASYNC_RESET_n_0 ),
        .Q(RESET_INT_PIPE));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    \MGT_RESET.RESET_INT_reg 
       (.C(userclk2),
        .CE(1'b1),
        .D(RESET_INT_PIPE),
        .PRE(\MGT_RESET.SYNC_ASYNC_RESET_n_0 ),
        .Q(RESET_INT));
  gig_ethernet_pcs_pma_0_reset_sync_block \MGT_RESET.SYNC_ASYNC_RESET 
       (.dcm_locked(dcm_locked),
        .reset(reset),
        .reset_sync6_0(\MGT_RESET.SYNC_ASYNC_RESET_n_0 ),
        .userclk2(userclk2));
  gig_ethernet_pcs_pma_0_RX \RX_GMII_AT_TXOUTCLK.RECEIVER_TXOUTCLK 
       (.C_HDR_REMOVED_REG_reg_0(\NLW_RX_GMII_AT_TXOUTCLK.RECEIVER_TXOUTCLK_C_HDR_REMOVED_REG_reg_0_UNCONNECTED [1:0]),
        .D(D),
        .FALSE_NIT_reg_0(\RX_GMII_AT_TXOUTCLK.RECEIVER_TXOUTCLK_n_7 ),
        .I0(I0),
        .Q({\USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXDATA_INT_reg_n_0_[7] ,\USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXDATA_INT_reg_n_0_[6] ,\USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXDATA_INT_reg_n_0_[5] ,\USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXDATA_INT_reg_n_0_[4] ,\USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXDATA_INT_reg_n_0_[3] ,\USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXDATA_INT_reg_n_0_[2] ,\USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXDATA_INT_reg_n_0_[1] ,\USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXDATA_INT_reg_n_0_[0] }),
        .RUDI_I_reg_0(MGT_RX_RESET),
        .RXCHARISK_REG1_reg_0(\USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXCHARISK_INT_reg_n_0 ),
        .RXEVEN(RXEVEN),
        .RXNOTINTABLE_INT(RXNOTINTABLE_INT),
        .RXSYNC_STATUS(RXSYNC_STATUS),
        .RX_ER_reg_0(\NLW_RX_GMII_AT_TXOUTCLK.RECEIVER_TXOUTCLK_RX_ER_reg_0_UNCONNECTED ),
        .S2(S2),
        .SR(1'b0),
        .SYNC_STATUS_REG0(SYNC_STATUS_REG0),
        .\USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXCHARISK_INT_reg (\RX_GMII_AT_TXOUTCLK.RECEIVER_TXOUTCLK_n_6 ),
        .gmii_rx_dv(gmii_rx_dv),
        .gmii_rx_er(gmii_rx_er),
        .gmii_rxd(gmii_rxd),
        .p_0_in(p_0_in),
        .status_vector(\NLW_RX_GMII_AT_TXOUTCLK.RECEIVER_TXOUTCLK_status_vector_UNCONNECTED [2:0]),
        .userclk2(userclk2));
  gig_ethernet_pcs_pma_0_SYNCHRONISE \RX_GMII_AT_TXOUTCLK.SYNCHRONISATION 
       (.CONFIGURATION_VECTOR_REG(\NLW_RX_GMII_AT_TXOUTCLK.SYNCHRONISATION_CONFIGURATION_VECTOR_REG_UNCONNECTED [0]),
        .D(D),
        .EVEN_reg_0(MGT_RX_RESET),
        .\FSM_onehot_STATE_reg[1]_0 (\USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXCHARISCOMMA_INT_reg_n_0 ),
        .\FSM_onehot_STATE_reg[2]_0 (\USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXCHARISK_INT_reg_n_0 ),
        .I0(I0),
        .I_reg(\RX_GMII_AT_TXOUTCLK.RECEIVER_TXOUTCLK_n_6 ),
        .I_reg_0(\RX_GMII_AT_TXOUTCLK.RECEIVER_TXOUTCLK_n_7 ),
        .RXEVEN(RXEVEN),
        .RXNOTINTABLE_INT(RXNOTINTABLE_INT),
        .RXSYNC_STATUS(RXSYNC_STATUS),
        .S2(S2),
        .SIGNAL_DETECT_MOD(SIGNAL_DETECT_MOD),
        .STATUS_VECTOR_0_PRE0(STATUS_VECTOR_0_PRE0),
        .SYNC_STATUS_REG0(SYNC_STATUS_REG0),
        .enablealign(enablealign),
        .p_0_in(p_0_in),
        .reset_done(reset_done),
        .userclk2(userclk2));
  FDRE #(
    .INIT(1'b0)) 
    STATUS_VECTOR_0_PRE_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(STATUS_VECTOR_0_PRE0),
        .Q(STATUS_VECTOR_0_PRE),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \STATUS_VECTOR_reg[0] 
       (.C(userclk2),
        .CE(1'b1),
        .D(STATUS_VECTOR_0_PRE),
        .Q(status_vector[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \STATUS_VECTOR_reg[1] 
       (.C(userclk2),
        .CE(1'b1),
        .D(SYNC_STATUS_REG),
        .Q(status_vector[1]),
        .R(1'b0));
  (* OPT_INSERTED_REPDRIVER *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  FDRE #(
    .INIT(1'b0)) 
    \STATUS_VECTOR_reg[1]_lopt_replica 
       (.C(userclk2),
        .CE(1'b1),
        .D(SYNC_STATUS_REG),
        .Q(\STATUS_VECTOR_reg[1]_lopt_replica_1 ),
        .R(1'b0));
  gig_ethernet_pcs_pma_0_sync_block SYNC_SIGNAL_DETECT
       (.SIGNAL_DETECT_MOD(SIGNAL_DETECT_MOD),
        .SIGNAL_DETECT_REG_reg(NLW_SYNC_SIGNAL_DETECT_SIGNAL_DETECT_REG_reg_UNCONNECTED),
        .signal_detect(signal_detect),
        .userclk2(userclk2));
  FDRE #(
    .INIT(1'b0)) 
    SYNC_STATUS_REG_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(RXSYNC_STATUS),
        .Q(SYNC_STATUS_REG),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    \USE_ROCKET_IO.MGT_TX_RESET_INT_i_1 
       (.I0(RESET_INT),
        .I1(TXBUFERR_INT),
        .O(TX_RST_SM0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \USE_ROCKET_IO.MGT_TX_RESET_INT_i_2 
       (.I0(\USE_ROCKET_IO.MGT_TX_RESET_INT_i_3_n_0 ),
        .I1(\USE_ROCKET_IO.MGT_TX_RESET_INT_i_4_n_0 ),
        .I2(\FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[6] ),
        .I3(\FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[7] ),
        .I4(\FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[4] ),
        .I5(\FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[5] ),
        .O(MGT_TX_RESET_INT));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \USE_ROCKET_IO.MGT_TX_RESET_INT_i_3 
       (.I0(\FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[13] ),
        .I1(\FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[12] ),
        .I2(\FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[9] ),
        .I3(\FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[8] ),
        .I4(\FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[11] ),
        .I5(\FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[10] ),
        .O(\USE_ROCKET_IO.MGT_TX_RESET_INT_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \USE_ROCKET_IO.MGT_TX_RESET_INT_i_4 
       (.I0(\FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[2] ),
        .I1(\FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[3] ),
        .I2(\FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[0] ),
        .I3(\FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg_n_0_[1] ),
        .O(\USE_ROCKET_IO.MGT_TX_RESET_INT_i_4_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \USE_ROCKET_IO.MGT_TX_RESET_INT_reg 
       (.C(userclk2),
        .CE(1'b1),
        .D(MGT_TX_RESET_INT),
        .Q(MGT_TX_RESET),
        .S(TX_RST_SM0));
  (* OPT_MODIFIED = "PROPCONST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXBUFSTATUS_INT_reg[1] 
       (.C(userclk2),
        .CE(1'b1),
        .D(rxbufstatus),
        .Q(p_0_in),
        .R(MGT_RX_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXCHARISCOMMA_INT_reg 
       (.C(userclk2),
        .CE(1'b1),
        .D(\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_8 ),
        .Q(\USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXCHARISCOMMA_INT_reg_n_0 ),
        .R(MGT_RX_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXCHARISK_INT_reg 
       (.C(userclk2),
        .CE(1'b1),
        .D(\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_7 ),
        .Q(\USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXCHARISK_INT_reg_n_0 ),
        .R(MGT_RX_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXDATA_INT_reg[0] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_21 ),
        .Q(\USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXDATA_INT_reg_n_0_[0] ),
        .R(MGT_RX_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXDATA_INT_reg[1] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_20 ),
        .Q(\USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXDATA_INT_reg_n_0_[1] ),
        .R(MGT_RX_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXDATA_INT_reg[2] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_19 ),
        .Q(\USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXDATA_INT_reg_n_0_[2] ),
        .R(MGT_RX_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXDATA_INT_reg[3] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_18 ),
        .Q(\USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXDATA_INT_reg_n_0_[3] ),
        .R(MGT_RX_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXDATA_INT_reg[4] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_17 ),
        .Q(\USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXDATA_INT_reg_n_0_[4] ),
        .R(MGT_RX_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXDATA_INT_reg[5] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_16 ),
        .Q(\USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXDATA_INT_reg_n_0_[5] ),
        .R(MGT_RX_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXDATA_INT_reg[6] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_15 ),
        .Q(\USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXDATA_INT_reg_n_0_[6] ),
        .R(MGT_RX_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXDATA_INT_reg[7] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_14 ),
        .Q(\USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXDATA_INT_reg_n_0_[7] ),
        .R(MGT_RX_RESET));
  (* OPT_MODIFIED = "PROPCONST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXDISPERR_INT_reg 
       (.C(userclk2),
        .CE(1'b1),
        .D(rxdisperr),
        .Q(D),
        .R(MGT_RX_RESET));
  (* OPT_MODIFIED = "PROPCONST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXNOTINTABLE_INT_reg 
       (.C(userclk2),
        .CE(1'b1),
        .D(rxnotintable),
        .Q(RXNOTINTABLE_INT),
        .R(MGT_RX_RESET));
  LUT2 #(
    .INIT(4'hE)) 
    \USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.MGT_RX_RESET_INT_i_1 
       (.I0(p_0_in),
        .I1(RESET_INT),
        .O(RX_RST_SM0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.MGT_RX_RESET_INT_i_2 
       (.I0(\USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.MGT_RX_RESET_INT_i_3_n_0 ),
        .I1(\USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.MGT_RX_RESET_INT_i_4_n_0 ),
        .I2(\FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[6] ),
        .I3(\FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[7] ),
        .I4(\FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[4] ),
        .I5(\FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[5] ),
        .O(MGT_RX_RESET_INT));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.MGT_RX_RESET_INT_i_3 
       (.I0(\FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[13] ),
        .I1(\FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[12] ),
        .I2(\FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[9] ),
        .I3(\FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[8] ),
        .I4(\FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[11] ),
        .I5(\FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[10] ),
        .O(\USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.MGT_RX_RESET_INT_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.MGT_RX_RESET_INT_i_4 
       (.I0(\FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[2] ),
        .I1(\FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[3] ),
        .I2(\FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[0] ),
        .I3(\FSM_onehot_USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.RX_RST_SM_reg_n_0_[1] ),
        .O(\USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.MGT_RX_RESET_INT_i_4_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \USE_ROCKET_IO.RX_RST_SM_TXOUTCLK.MGT_RX_RESET_INT_reg 
       (.C(userclk2),
        .CE(1'b1),
        .D(MGT_RX_RESET_INT),
        .Q(MGT_RX_RESET),
        .S(RX_RST_SM0));
  FDRE #(
    .INIT(1'b0)) 
    \USE_ROCKET_IO.TXBUFERR_INT_reg 
       (.C(userclk2),
        .CE(1'b1),
        .D(txbuferr),
        .Q(TXBUFERR_INT),
        .R(MGT_TX_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \USE_ROCKET_IO.TXCHARDISPMODE_reg 
       (.C(userclk2),
        .CE(1'b1),
        .D(\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_5 ),
        .Q(txchardispmode),
        .R(MGT_TX_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \USE_ROCKET_IO.TXCHARDISPVAL_reg 
       (.C(userclk2),
        .CE(1'b1),
        .D(\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_13 ),
        .Q(txchardispval),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \USE_ROCKET_IO.TXCHARISK_reg 
       (.C(userclk2),
        .CE(1'b1),
        .D(\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_6 ),
        .Q(txcharisk),
        .R(MGT_TX_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \USE_ROCKET_IO.TXDATA_reg[0] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_4 ),
        .Q(txdata[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \USE_ROCKET_IO.TXDATA_reg[1] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_3 ),
        .Q(txdata[1]),
        .R(1'b0));
  FDSE #(
    .INIT(1'b1)) 
    \USE_ROCKET_IO.TXDATA_reg[2] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_9 ),
        .Q(txdata[2]),
        .S(\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \USE_ROCKET_IO.TXDATA_reg[3] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_10 ),
        .Q(txdata[3]),
        .S(\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \USE_ROCKET_IO.TXDATA_reg[4] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_2 ),
        .Q(txdata[4]),
        .R(1'b0));
  FDSE #(
    .INIT(1'b1)) 
    \USE_ROCKET_IO.TXDATA_reg[5] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_11 ),
        .Q(txdata[5]),
        .S(\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \USE_ROCKET_IO.TXDATA_reg[6] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_1 ),
        .Q(txdata[6]),
        .R(1'b0));
  FDSE #(
    .INIT(1'b1)) 
    \USE_ROCKET_IO.TXDATA_reg[7] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_12 ),
        .Q(txdata[7]),
        .S(\IS_2_5G_DISABLED_PRE_SHRINK.TRANSMITTER_n_0 ));
endmodule

(* ORIG_REF_NAME = "RX" *) 
module gig_ethernet_pcs_pma_0_RX
   (S2,
    gmii_rx_er,
    status_vector,
    gmii_rx_dv,
    \USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXCHARISK_INT_reg ,
    FALSE_NIT_reg_0,
    gmii_rxd,
    Q,
    userclk2,
    RUDI_I_reg_0,
    I0,
    SYNC_STATUS_REG0,
    RXCHARISK_REG1_reg_0,
    RXSYNC_STATUS,
    RXNOTINTABLE_INT,
    D,
    p_0_in,
    RXEVEN,
    SR,
    RX_ER_reg_0,
    C_HDR_REMOVED_REG_reg_0);
  output S2;
  output gmii_rx_er;
  output [2:0]status_vector;
  output gmii_rx_dv;
  output \USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXCHARISK_INT_reg ;
  output FALSE_NIT_reg_0;
  output [7:0]gmii_rxd;
  input [7:0]Q;
  input userclk2;
  input RUDI_I_reg_0;
  input I0;
  input SYNC_STATUS_REG0;
  input RXCHARISK_REG1_reg_0;
  input RXSYNC_STATUS;
  input RXNOTINTABLE_INT;
  input D;
  input p_0_in;
  input RXEVEN;
  input [0:0]SR;
  input RX_ER_reg_0;
  input [1:0]C_HDR_REMOVED_REG_reg_0;

  wire C;
  wire C0;
  wire CGBAD;
  wire CGBAD_REG1;
  wire CGBAD_REG2;
  wire CGBAD_REG3;
  wire C_REG1;
  wire D;
  wire D0p0;
  wire D0p0_REG;
  wire D0p0_REG_i_2_n_0;
  wire EOP;
  wire EOP0;
  wire EOP_REG1;
  wire EOP_REG10;
  wire EOP_i_2_n_0;
  wire EXTEND;
  wire EXTEND_ERR;
  wire EXTEND_ERR0;
  wire EXTEND_REG1;
  wire EXTEND_REG2;
  wire EXTEND_REG3;
  wire EXTEND_i_1_n_0;
  wire EXT_ILLEGAL_K;
  wire EXT_ILLEGAL_K0;
  wire EXT_ILLEGAL_K_REG1;
  wire EXT_ILLEGAL_K_REG2;
  wire FALSE_CARRIER;
  wire FALSE_CARRIER0;
  wire FALSE_CARRIER_REG1;
  wire FALSE_CARRIER_REG2;
  wire FALSE_CARRIER_REG3;
  wire FALSE_CARRIER_i_1_n_0;
  wire FALSE_CARRIER_i_3_n_0;
  wire FALSE_DATA;
  wire FALSE_DATA0;
  wire FALSE_DATA_i_2_n_0;
  wire FALSE_DATA_i_3_n_0;
  wire FALSE_DATA_i_4_n_0;
  wire FALSE_DATA_i_5_n_0;
  wire FALSE_DATA_i_6_n_0;
  wire FALSE_K;
  wire FALSE_K0;
  wire FALSE_K_i_2_n_0;
  wire FALSE_K_i_3_n_0;
  wire FALSE_NIT;
  wire FALSE_NIT0;
  wire FALSE_NIT_i_2_n_0;
  wire FALSE_NIT_i_3_n_0;
  wire FALSE_NIT_reg_0;
  wire I;
  wire I0;
  wire ILLEGAL_K;
  wire ILLEGAL_K0;
  wire ILLEGAL_K_REG1;
  wire ILLEGAL_K_REG2;
  wire I_REG_reg_n_0;
  wire I_i_4_n_0;
  wire I_i_5_n_0;
  wire I_i_6_n_0;
  wire I_i_7_n_0;
  wire K23p7;
  wire K28p5;
  wire K28p5_REG1;
  wire K29p7;
  wire [7:0]Q;
  wire R;
  wire RECEIVE;
  wire RECEIVE_i_1_n_0;
  wire RUDI_I_reg_0;
  wire RXCHARISK_REG1;
  wire RXCHARISK_REG1_reg_0;
  wire [7:0]RXDATA_REG5;
  wire \RXD[0]_i_1_n_0 ;
  wire \RXD[1]_i_1_n_0 ;
  wire \RXD[2]_i_1_n_0 ;
  wire \RXD[3]_i_1_n_0 ;
  wire \RXD[4]_i_1_n_0 ;
  wire \RXD[5]_i_1_n_0 ;
  wire \RXD[6]_i_1_n_0 ;
  wire \RXD[7]_i_1_n_0 ;
  wire RXEVEN;
  wire RXNOTINTABLE_INT;
  wire RXSYNC_STATUS;
  wire RX_DATA_ERROR;
  wire RX_DATA_ERROR0;
  wire RX_DATA_ERROR_i_2_n_0;
  wire RX_DATA_ERROR_i_3_n_0;
  wire RX_DATA_ERROR_i_4_n_0;
  wire RX_DV0;
  wire RX_DV_i_1_n_0;
  wire RX_ER0;
  wire RX_ER_i_2_n_0;
  wire R_REG1;
  wire R_i_2_n_0;
  wire S;
  wire S0;
  wire S2;
  wire SOP;
  wire SOP0;
  wire SOP_REG1;
  wire SOP_REG2;
  wire SOP_REG3;
  wire [0:0]SR;
  wire SYNC_STATUS_REG;
  wire SYNC_STATUS_REG0;
  wire T;
  wire T_REG1;
  wire T_REG2;
  wire \USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXCHARISK_INT_reg ;
  wire WAIT_FOR_K;
  wire WAIT_FOR_K_i_1_n_0;
  wire gmii_rx_dv;
  wire gmii_rx_er;
  wire [7:0]gmii_rxd;
  wire p_0_in;
  wire userclk2;

  FDRE #(
    .INIT(1'b0)) 
    CGBAD_REG1_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(CGBAD),
        .Q(CGBAD_REG1),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    CGBAD_REG2_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(CGBAD_REG1),
        .Q(CGBAD_REG2),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    CGBAD_REG3_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(CGBAD_REG2),
        .Q(CGBAD_REG3),
        .R(RUDI_I_reg_0));
  LUT3 #(
    .INIT(8'hFE)) 
    CGBAD_i_1
       (.I0(RXNOTINTABLE_INT),
        .I1(D),
        .I2(p_0_in),
        .O(S2));
  FDRE #(
    .INIT(1'b0)) 
    CGBAD_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(S2),
        .Q(CGBAD),
        .R(RUDI_I_reg_0));
  FDRE #(
    .INIT(1'b0)) 
    C_REG1_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(C),
        .Q(C_REG1),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    C_i_1
       (.I0(K28p5_REG1),
        .I1(\USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXCHARISK_INT_reg ),
        .O(C0));
  FDRE #(
    .INIT(1'b0)) 
    C_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(C0),
        .Q(C),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h0002)) 
    D0p0_REG_i_1
       (.I0(D0p0_REG_i_2_n_0),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[7]),
        .O(D0p0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    D0p0_REG_i_2
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(RXCHARISK_REG1_reg_0),
        .I4(Q[6]),
        .I5(Q[5]),
        .O(D0p0_REG_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    D0p0_REG_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(D0p0),
        .Q(D0p0_REG),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hEA)) 
    EOP_REG1_i_1
       (.I0(EOP),
        .I1(EXTEND),
        .I2(EXTEND_REG1),
        .O(EOP_REG10));
  FDRE #(
    .INIT(1'b0)) 
    EOP_REG1_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(EOP_REG10),
        .Q(EOP_REG1),
        .R(RUDI_I_reg_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF88888000)) 
    EOP_i_1
       (.I0(T_REG2),
        .I1(R_REG1),
        .I2(K28p5_REG1),
        .I3(RXEVEN),
        .I4(R),
        .I5(EOP_i_2_n_0),
        .O(EOP0));
  LUT5 #(
    .INIT(32'hF8888888)) 
    EOP_i_2
       (.I0(I_REG_reg_n_0),
        .I1(K28p5_REG1),
        .I2(C_REG1),
        .I3(D0p0_REG),
        .I4(RXEVEN),
        .O(EOP_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    EOP_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(EOP0),
        .Q(EOP),
        .R(RUDI_I_reg_0));
  LUT3 #(
    .INIT(8'hEA)) 
    EXTEND_ERR_i_1
       (.I0(EXT_ILLEGAL_K_REG2),
        .I1(CGBAD_REG3),
        .I2(EXTEND_REG3),
        .O(EXTEND_ERR0));
  FDRE #(
    .INIT(1'b0)) 
    EXTEND_ERR_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(EXTEND_ERR0),
        .Q(EXTEND_ERR),
        .R(SYNC_STATUS_REG0));
  FDRE #(
    .INIT(1'b0)) 
    EXTEND_REG1_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(EXTEND),
        .Q(EXTEND_REG1),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    EXTEND_REG2_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(EXTEND_REG1),
        .Q(EXTEND_REG2),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    EXTEND_REG3_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(EXTEND_REG2),
        .Q(EXTEND_REG3),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h808080FF80808080)) 
    EXTEND_i_1
       (.I0(R_REG1),
        .I1(R),
        .I2(RECEIVE),
        .I3(RX_DATA_ERROR_i_3_n_0),
        .I4(S),
        .I5(EXTEND),
        .O(EXTEND_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    EXTEND_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(EXTEND_i_1_n_0),
        .Q(EXTEND),
        .R(SYNC_STATUS_REG0));
  FDRE #(
    .INIT(1'b0)) 
    EXT_ILLEGAL_K_REG1_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(EXT_ILLEGAL_K),
        .Q(EXT_ILLEGAL_K_REG1),
        .R(SYNC_STATUS_REG0));
  FDRE #(
    .INIT(1'b0)) 
    EXT_ILLEGAL_K_REG2_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(EXT_ILLEGAL_K_REG1),
        .Q(EXT_ILLEGAL_K_REG2),
        .R(SYNC_STATUS_REG0));
  LUT5 #(
    .INIT(32'h00000700)) 
    EXT_ILLEGAL_K_i_1
       (.I0(K28p5_REG1),
        .I1(RXEVEN),
        .I2(S),
        .I3(EXTEND_REG1),
        .I4(R),
        .O(EXT_ILLEGAL_K0));
  FDRE #(
    .INIT(1'b0)) 
    EXT_ILLEGAL_K_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(EXT_ILLEGAL_K0),
        .Q(EXT_ILLEGAL_K),
        .R(SYNC_STATUS_REG0));
  FDRE #(
    .INIT(1'b0)) 
    FALSE_CARRIER_REG1_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(FALSE_CARRIER),
        .Q(FALSE_CARRIER_REG1),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    FALSE_CARRIER_REG2_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(FALSE_CARRIER_REG1),
        .Q(FALSE_CARRIER_REG2),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    FALSE_CARRIER_REG3_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(FALSE_CARRIER_REG2),
        .Q(FALSE_CARRIER_REG3),
        .R(SYNC_STATUS_REG0));
  LUT4 #(
    .INIT(16'hF7F0)) 
    FALSE_CARRIER_i_1
       (.I0(RXEVEN),
        .I1(K28p5_REG1),
        .I2(FALSE_CARRIER0),
        .I3(FALSE_CARRIER),
        .O(FALSE_CARRIER_i_1_n_0));
  LUT5 #(
    .INIT(32'h00001000)) 
    FALSE_CARRIER_i_2
       (.I0(K28p5_REG1),
        .I1(S),
        .I2(RXSYNC_STATUS),
        .I3(I_REG_reg_n_0),
        .I4(FALSE_CARRIER_i_3_n_0),
        .O(FALSE_CARRIER0));
  LUT3 #(
    .INIT(8'hFE)) 
    FALSE_CARRIER_i_3
       (.I0(FALSE_NIT),
        .I1(FALSE_K),
        .I2(FALSE_DATA),
        .O(FALSE_CARRIER_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    FALSE_CARRIER_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(FALSE_CARRIER_i_1_n_0),
        .Q(FALSE_CARRIER),
        .R(SYNC_STATUS_REG0));
  LUT4 #(
    .INIT(16'h000E)) 
    FALSE_DATA_i_1
       (.I0(FALSE_DATA_i_2_n_0),
        .I1(FALSE_DATA_i_3_n_0),
        .I2(RXNOTINTABLE_INT),
        .I3(RXCHARISK_REG1_reg_0),
        .O(FALSE_DATA0));
  LUT6 #(
    .INIT(64'h0000008000808080)) 
    FALSE_DATA_i_2
       (.I0(FALSE_DATA_i_4_n_0),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(FALSE_DATA_i_2_n_0));
  LUT6 #(
    .INIT(64'h0000004040000000)) 
    FALSE_DATA_i_3
       (.I0(FALSE_DATA_i_5_n_0),
        .I1(Q[2]),
        .I2(Q[7]),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(FALSE_DATA_i_6_n_0),
        .O(FALSE_DATA_i_3_n_0));
  LUT3 #(
    .INIT(8'h04)) 
    FALSE_DATA_i_4
       (.I0(Q[7]),
        .I1(Q[6]),
        .I2(Q[5]),
        .O(FALSE_DATA_i_4_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    FALSE_DATA_i_5
       (.I0(Q[6]),
        .I1(Q[5]),
        .O(FALSE_DATA_i_5_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    FALSE_DATA_i_6
       (.I0(Q[4]),
        .I1(Q[3]),
        .O(FALSE_DATA_i_6_n_0));
  FDRE #(
    .INIT(1'b0)) 
    FALSE_DATA_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(FALSE_DATA0),
        .Q(FALSE_DATA),
        .R(RUDI_I_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT4 #(
    .INIT(16'h0009)) 
    FALSE_K_i_1
       (.I0(Q[5]),
        .I1(Q[6]),
        .I2(RXNOTINTABLE_INT),
        .I3(FALSE_K_i_2_n_0),
        .O(FALSE_K0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFF7F)) 
    FALSE_K_i_2
       (.I0(RXCHARISK_REG1_reg_0),
        .I1(Q[4]),
        .I2(Q[7]),
        .I3(FALSE_K_i_3_n_0),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(FALSE_K_i_2_n_0));
  LUT2 #(
    .INIT(4'h7)) 
    FALSE_K_i_3
       (.I0(Q[2]),
        .I1(Q[3]),
        .O(FALSE_K_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    FALSE_K_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(FALSE_K0),
        .Q(FALSE_K),
        .R(RUDI_I_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT2 #(
    .INIT(4'h2)) 
    FALSE_NIT_i_1
       (.I0(RXNOTINTABLE_INT),
        .I1(FALSE_NIT_i_2_n_0),
        .O(FALSE_NIT0));
  LUT6 #(
    .INIT(64'hF55F5FFC5FFCFCCF)) 
    FALSE_NIT_i_2
       (.I0(D0p0_REG_i_2_n_0),
        .I1(FALSE_NIT_i_3_n_0),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(Q[7]),
        .I5(D),
        .O(FALSE_NIT_i_2_n_0));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    FALSE_NIT_i_3
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(RXCHARISK_REG1_reg_0),
        .I3(Q[4]),
        .I4(Q[6]),
        .I5(Q[5]),
        .O(FALSE_NIT_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    FALSE_NIT_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(FALSE_NIT0),
        .Q(FALSE_NIT),
        .R(RUDI_I_reg_0));
  FDRE #(
    .INIT(1'b0)) 
    ILLEGAL_K_REG1_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(ILLEGAL_K),
        .Q(ILLEGAL_K_REG1),
        .R(SYNC_STATUS_REG0));
  FDRE #(
    .INIT(1'b0)) 
    ILLEGAL_K_REG2_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(ILLEGAL_K_REG1),
        .Q(ILLEGAL_K_REG2),
        .R(SYNC_STATUS_REG0));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT4 #(
    .INIT(16'h0010)) 
    ILLEGAL_K_i_1
       (.I0(R),
        .I1(K28p5_REG1),
        .I2(RXCHARISK_REG1),
        .I3(T),
        .O(ILLEGAL_K0));
  FDRE #(
    .INIT(1'b0)) 
    ILLEGAL_K_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(ILLEGAL_K0),
        .Q(ILLEGAL_K),
        .R(SYNC_STATUS_REG0));
  FDRE #(
    .INIT(1'b0)) 
    I_REG_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(I),
        .Q(I_REG_reg_n_0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFBFBFBFBFBFBFBAA)) 
    I_i_2
       (.I0(RXCHARISK_REG1_reg_0),
        .I1(I_i_4_n_0),
        .I2(I_i_5_n_0),
        .I3(I_i_6_n_0),
        .I4(FALSE_DATA_i_5_n_0),
        .I5(I_i_7_n_0),
        .O(\USE_ROCKET_IO.NO_1588.RECLOCK_MGT_SIGNALS_TXOUTCLK.RXCHARISK_INT_reg ));
  LUT6 #(
    .INIT(64'h0000000001FFFFFF)) 
    I_i_3
       (.I0(FALSE_NIT),
        .I1(FALSE_K),
        .I2(FALSE_DATA),
        .I3(RXSYNC_STATUS),
        .I4(I_REG_reg_n_0),
        .I5(K28p5_REG1),
        .O(FALSE_NIT_reg_0));
  LUT3 #(
    .INIT(8'h01)) 
    I_i_4
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[4]),
        .O(I_i_4_n_0));
  LUT5 #(
    .INIT(32'hFFFBFFFF)) 
    I_i_5
       (.I0(Q[5]),
        .I1(Q[6]),
        .I2(Q[7]),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(I_i_5_n_0));
  LUT2 #(
    .INIT(4'h7)) 
    I_i_6
       (.I0(Q[4]),
        .I1(Q[7]),
        .O(I_i_6_n_0));
  LUT4 #(
    .INIT(16'hFFDF)) 
    I_i_7
       (.I0(Q[2]),
        .I1(Q[3]),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(I_i_7_n_0));
  FDRE #(
    .INIT(1'b0)) 
    I_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(I0),
        .Q(I),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h02)) 
    K28p5_REG1_i_1
       (.I0(Q[5]),
        .I1(Q[6]),
        .I2(FALSE_K_i_2_n_0),
        .O(K28p5));
  FDRE #(
    .INIT(1'b0)) 
    K28p5_REG1_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(K28p5),
        .Q(K28p5_REG1),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hDC)) 
    RECEIVE_i_1
       (.I0(EOP),
        .I1(SOP_REG2),
        .I2(RECEIVE),
        .O(RECEIVE_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    RECEIVE_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(RECEIVE_i_1_n_0),
        .Q(RECEIVE),
        .R(SYNC_STATUS_REG0));
  FDRE #(
    .INIT(1'b0)) 
    RXCHARISK_REG1_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(RXCHARISK_REG1_reg_0),
        .Q(RXCHARISK_REG1),
        .R(1'b0));
  (* srl_bus_name = "inst/\pcs_pma_block_i/gig_ethernet_pcs_pma_0_core /\gpcs_pma_inst/RX_GMII_AT_TXOUTCLK.RECEIVER_TXOUTCLK/RXDATA_REG5_reg " *) 
  (* srl_name = "inst/\pcs_pma_block_i/gig_ethernet_pcs_pma_0_core /\gpcs_pma_inst/RX_GMII_AT_TXOUTCLK.RECEIVER_TXOUTCLK/RXDATA_REG5_reg[0]_srl5 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \RXDATA_REG5_reg[0]_srl5 
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b1),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(userclk2),
        .D(Q[0]),
        .Q(RXDATA_REG5[0]));
  (* srl_bus_name = "inst/\pcs_pma_block_i/gig_ethernet_pcs_pma_0_core /\gpcs_pma_inst/RX_GMII_AT_TXOUTCLK.RECEIVER_TXOUTCLK/RXDATA_REG5_reg " *) 
  (* srl_name = "inst/\pcs_pma_block_i/gig_ethernet_pcs_pma_0_core /\gpcs_pma_inst/RX_GMII_AT_TXOUTCLK.RECEIVER_TXOUTCLK/RXDATA_REG5_reg[1]_srl5 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \RXDATA_REG5_reg[1]_srl5 
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b1),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(userclk2),
        .D(Q[1]),
        .Q(RXDATA_REG5[1]));
  (* srl_bus_name = "inst/\pcs_pma_block_i/gig_ethernet_pcs_pma_0_core /\gpcs_pma_inst/RX_GMII_AT_TXOUTCLK.RECEIVER_TXOUTCLK/RXDATA_REG5_reg " *) 
  (* srl_name = "inst/\pcs_pma_block_i/gig_ethernet_pcs_pma_0_core /\gpcs_pma_inst/RX_GMII_AT_TXOUTCLK.RECEIVER_TXOUTCLK/RXDATA_REG5_reg[2]_srl5 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \RXDATA_REG5_reg[2]_srl5 
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b1),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(userclk2),
        .D(Q[2]),
        .Q(RXDATA_REG5[2]));
  (* srl_bus_name = "inst/\pcs_pma_block_i/gig_ethernet_pcs_pma_0_core /\gpcs_pma_inst/RX_GMII_AT_TXOUTCLK.RECEIVER_TXOUTCLK/RXDATA_REG5_reg " *) 
  (* srl_name = "inst/\pcs_pma_block_i/gig_ethernet_pcs_pma_0_core /\gpcs_pma_inst/RX_GMII_AT_TXOUTCLK.RECEIVER_TXOUTCLK/RXDATA_REG5_reg[3]_srl5 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \RXDATA_REG5_reg[3]_srl5 
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b1),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(userclk2),
        .D(Q[3]),
        .Q(RXDATA_REG5[3]));
  (* srl_bus_name = "inst/\pcs_pma_block_i/gig_ethernet_pcs_pma_0_core /\gpcs_pma_inst/RX_GMII_AT_TXOUTCLK.RECEIVER_TXOUTCLK/RXDATA_REG5_reg " *) 
  (* srl_name = "inst/\pcs_pma_block_i/gig_ethernet_pcs_pma_0_core /\gpcs_pma_inst/RX_GMII_AT_TXOUTCLK.RECEIVER_TXOUTCLK/RXDATA_REG5_reg[4]_srl5 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \RXDATA_REG5_reg[4]_srl5 
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b1),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(userclk2),
        .D(Q[4]),
        .Q(RXDATA_REG5[4]));
  (* srl_bus_name = "inst/\pcs_pma_block_i/gig_ethernet_pcs_pma_0_core /\gpcs_pma_inst/RX_GMII_AT_TXOUTCLK.RECEIVER_TXOUTCLK/RXDATA_REG5_reg " *) 
  (* srl_name = "inst/\pcs_pma_block_i/gig_ethernet_pcs_pma_0_core /\gpcs_pma_inst/RX_GMII_AT_TXOUTCLK.RECEIVER_TXOUTCLK/RXDATA_REG5_reg[5]_srl5 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \RXDATA_REG5_reg[5]_srl5 
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b1),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(userclk2),
        .D(Q[5]),
        .Q(RXDATA_REG5[5]));
  (* srl_bus_name = "inst/\pcs_pma_block_i/gig_ethernet_pcs_pma_0_core /\gpcs_pma_inst/RX_GMII_AT_TXOUTCLK.RECEIVER_TXOUTCLK/RXDATA_REG5_reg " *) 
  (* srl_name = "inst/\pcs_pma_block_i/gig_ethernet_pcs_pma_0_core /\gpcs_pma_inst/RX_GMII_AT_TXOUTCLK.RECEIVER_TXOUTCLK/RXDATA_REG5_reg[6]_srl5 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \RXDATA_REG5_reg[6]_srl5 
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b1),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(userclk2),
        .D(Q[6]),
        .Q(RXDATA_REG5[6]));
  (* srl_bus_name = "inst/\pcs_pma_block_i/gig_ethernet_pcs_pma_0_core /\gpcs_pma_inst/RX_GMII_AT_TXOUTCLK.RECEIVER_TXOUTCLK/RXDATA_REG5_reg " *) 
  (* srl_name = "inst/\pcs_pma_block_i/gig_ethernet_pcs_pma_0_core /\gpcs_pma_inst/RX_GMII_AT_TXOUTCLK.RECEIVER_TXOUTCLK/RXDATA_REG5_reg[7]_srl5 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \RXDATA_REG5_reg[7]_srl5 
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b1),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(userclk2),
        .D(Q[7]),
        .Q(RXDATA_REG5[7]));
  LUT4 #(
    .INIT(16'hBBBA)) 
    \RXD[0]_i_1 
       (.I0(SOP_REG3),
        .I1(FALSE_CARRIER_REG3),
        .I2(EXTEND_REG1),
        .I3(RXDATA_REG5[0]),
        .O(\RXD[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT4 #(
    .INIT(16'h5554)) 
    \RXD[1]_i_1 
       (.I0(SOP_REG3),
        .I1(FALSE_CARRIER_REG3),
        .I2(EXTEND_REG1),
        .I3(RXDATA_REG5[1]),
        .O(\RXD[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \RXD[2]_i_1 
       (.I0(RXDATA_REG5[2]),
        .I1(FALSE_CARRIER_REG3),
        .I2(EXTEND_REG1),
        .I3(SOP_REG3),
        .O(\RXD[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT4 #(
    .INIT(16'h5554)) 
    \RXD[3]_i_1 
       (.I0(SOP_REG3),
        .I1(FALSE_CARRIER_REG3),
        .I2(EXTEND_REG1),
        .I3(RXDATA_REG5[3]),
        .O(\RXD[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBABBBAAA)) 
    \RXD[4]_i_1 
       (.I0(SOP_REG3),
        .I1(FALSE_CARRIER_REG3),
        .I2(EXTEND_ERR),
        .I3(EXTEND_REG1),
        .I4(RXDATA_REG5[4]),
        .O(\RXD[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT4 #(
    .INIT(16'h0002)) 
    \RXD[5]_i_1 
       (.I0(RXDATA_REG5[5]),
        .I1(FALSE_CARRIER_REG3),
        .I2(EXTEND_REG1),
        .I3(SOP_REG3),
        .O(\RXD[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT4 #(
    .INIT(16'hABAA)) 
    \RXD[6]_i_1 
       (.I0(SOP_REG3),
        .I1(FALSE_CARRIER_REG3),
        .I2(EXTEND_REG1),
        .I3(RXDATA_REG5[6]),
        .O(\RXD[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT4 #(
    .INIT(16'h0002)) 
    \RXD[7]_i_1 
       (.I0(RXDATA_REG5[7]),
        .I1(FALSE_CARRIER_REG3),
        .I2(EXTEND_REG1),
        .I3(SOP_REG3),
        .O(\RXD[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \RXD_reg[0] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\RXD[0]_i_1_n_0 ),
        .Q(gmii_rxd[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \RXD_reg[1] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\RXD[1]_i_1_n_0 ),
        .Q(gmii_rxd[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \RXD_reg[2] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\RXD[2]_i_1_n_0 ),
        .Q(gmii_rxd[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \RXD_reg[3] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\RXD[3]_i_1_n_0 ),
        .Q(gmii_rxd[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \RXD_reg[4] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\RXD[4]_i_1_n_0 ),
        .Q(gmii_rxd[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \RXD_reg[5] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\RXD[5]_i_1_n_0 ),
        .Q(gmii_rxd[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \RXD_reg[6] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\RXD[6]_i_1_n_0 ),
        .Q(gmii_rxd[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \RXD_reg[7] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\RXD[7]_i_1_n_0 ),
        .Q(gmii_rxd[7]),
        .R(SR));
  LUT6 #(
    .INIT(64'h888AAAAA88888888)) 
    RX_DATA_ERROR_i_1
       (.I0(RECEIVE),
        .I1(RX_DATA_ERROR_i_2_n_0),
        .I2(R),
        .I3(RX_DATA_ERROR_i_3_n_0),
        .I4(R_REG1),
        .I5(T_REG2),
        .O(RX_DATA_ERROR0));
  LUT5 #(
    .INIT(32'hFFFF4544)) 
    RX_DATA_ERROR_i_2
       (.I0(R_REG1),
        .I1(K28p5_REG1),
        .I2(T_REG1),
        .I3(R),
        .I4(RX_DATA_ERROR_i_4_n_0),
        .O(RX_DATA_ERROR_i_2_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    RX_DATA_ERROR_i_3
       (.I0(K28p5_REG1),
        .I1(RXEVEN),
        .O(RX_DATA_ERROR_i_3_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    RX_DATA_ERROR_i_4
       (.I0(CGBAD_REG3),
        .I1(I_REG_reg_n_0),
        .I2(ILLEGAL_K_REG2),
        .I3(C_REG1),
        .O(RX_DATA_ERROR_i_4_n_0));
  FDRE #(
    .INIT(1'b0)) 
    RX_DATA_ERROR_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(RX_DATA_ERROR0),
        .Q(RX_DATA_ERROR),
        .R(SYNC_STATUS_REG0));
  LUT5 #(
    .INIT(32'hAAFEAAAA)) 
    RX_DV_i_1
       (.I0(RX_DV0),
        .I1(RXSYNC_STATUS),
        .I2(RECEIVE),
        .I3(EOP_REG1),
        .I4(gmii_rx_dv),
        .O(RX_DV_i_1_n_0));
  (* OPT_MODIFIED = "PROPCONST" *) 
  LUT2 #(
    .INIT(4'h8)) 
    RX_DV_i_2
       (.I0(SOP_REG3),
        .I1(RXSYNC_STATUS),
        .O(RX_DV0));
  FDRE #(
    .INIT(1'b0)) 
    RX_DV_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(RX_DV_i_1_n_0),
        .Q(gmii_rx_dv),
        .R(RUDI_I_reg_0));
  (* OPT_MODIFIED = "PROPCONST" *) 
  LUT4 #(
    .INIT(16'hEFE0)) 
    RX_ER_i_1
       (.I0(RX_DATA_ERROR),
        .I1(RX_ER_i_2_n_0),
        .I2(RXSYNC_STATUS),
        .I3(RECEIVE),
        .O(RX_ER0));
  LUT2 #(
    .INIT(4'hE)) 
    RX_ER_i_2
       (.I0(FALSE_CARRIER_REG3),
        .I1(EXTEND_REG1),
        .O(RX_ER_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    RX_ER_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(RX_ER0),
        .Q(gmii_rx_er),
        .R(RUDI_I_reg_0));
  FDRE #(
    .INIT(1'b0)) 
    R_REG1_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(R),
        .Q(R_REG1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT5 #(
    .INIT(32'h00800000)) 
    R_i_1
       (.I0(R_i_2_n_0),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[2]),
        .O(K23p7));
  LUT5 #(
    .INIT(32'h80000000)) 
    R_i_2
       (.I0(Q[5]),
        .I1(Q[6]),
        .I2(RXCHARISK_REG1_reg_0),
        .I3(Q[4]),
        .I4(Q[7]),
        .O(R_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    R_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(K23p7),
        .Q(R),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    SOP_REG1_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(SOP),
        .Q(SOP_REG1),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    SOP_REG2_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(SOP_REG1),
        .Q(SOP_REG2),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    SOP_REG3_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(SOP_REG2),
        .Q(SOP_REG3),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h00E00000)) 
    SOP_i_1
       (.I0(EXTEND),
        .I1(I_REG_reg_n_0),
        .I2(S),
        .I3(WAIT_FOR_K),
        .I4(RXSYNC_STATUS),
        .O(SOP0));
  FDRE #(
    .INIT(1'b0)) 
    SOP_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(SOP0),
        .Q(SOP),
        .R(RUDI_I_reg_0));
  FDRE #(
    .INIT(1'b0)) 
    SYNC_STATUS_REG_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(1'b1),
        .Q(SYNC_STATUS_REG),
        .R(SYNC_STATUS_REG0));
  LUT6 #(
    .INIT(64'h0000000000008000)) 
    S_i_1
       (.I0(R_i_2_n_0),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .I4(Q[2]),
        .I5(S2),
        .O(S0));
  FDRE #(
    .INIT(1'b0)) 
    S_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(S0),
        .Q(S),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    T_REG1_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(T),
        .Q(T_REG1),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    T_REG2_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(T_REG1),
        .Q(T_REG2),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT5 #(
    .INIT(32'h00800000)) 
    T_i_1__0
       (.I0(R_i_2_n_0),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(Q[1]),
        .I4(Q[0]),
        .O(K29p7));
  FDRE #(
    .INIT(1'b0)) 
    T_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(K29p7),
        .Q(T),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h7F0F)) 
    WAIT_FOR_K_i_1
       (.I0(RXEVEN),
        .I1(K28p5_REG1),
        .I2(SYNC_STATUS_REG),
        .I3(WAIT_FOR_K),
        .O(WAIT_FOR_K_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    WAIT_FOR_K_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(WAIT_FOR_K_i_1_n_0),
        .Q(WAIT_FOR_K),
        .R(SYNC_STATUS_REG0));
endmodule

(* ORIG_REF_NAME = "SYNCHRONISE" *) 
module gig_ethernet_pcs_pma_0_SYNCHRONISE
   (RXEVEN,
    RXSYNC_STATUS,
    enablealign,
    SYNC_STATUS_REG0,
    I0,
    STATUS_VECTOR_0_PRE0,
    SIGNAL_DETECT_MOD,
    userclk2,
    EVEN_reg_0,
    \FSM_onehot_STATE_reg[1]_0 ,
    CONFIGURATION_VECTOR_REG,
    \FSM_onehot_STATE_reg[2]_0 ,
    S2,
    RXNOTINTABLE_INT,
    D,
    p_0_in,
    I_reg,
    I_reg_0,
    reset_done);
  output RXEVEN;
  output RXSYNC_STATUS;
  output enablealign;
  output SYNC_STATUS_REG0;
  output I0;
  output STATUS_VECTOR_0_PRE0;
  input SIGNAL_DETECT_MOD;
  input userclk2;
  input EVEN_reg_0;
  input \FSM_onehot_STATE_reg[1]_0 ;
  input [0:0]CONFIGURATION_VECTOR_REG;
  input \FSM_onehot_STATE_reg[2]_0 ;
  input S2;
  input RXNOTINTABLE_INT;
  input D;
  input p_0_in;
  input I_reg;
  input I_reg_0;
  input reset_done;

  wire D;
  wire ENCOMMAALIGN_i_1_n_0;
  wire ENCOMMAALIGN_i_2_n_0;
  wire EVEN_i_1_n_0;
  wire EVEN_reg_0;
  wire \FSM_onehot_STATE[0]_i_1_n_0 ;
  wire \FSM_onehot_STATE[10]_i_1_n_0 ;
  wire \FSM_onehot_STATE[11]_i_1_n_0 ;
  wire \FSM_onehot_STATE[12]_i_1_n_0 ;
  wire \FSM_onehot_STATE[12]_i_2_n_0 ;
  wire \FSM_onehot_STATE[12]_i_3_n_0 ;
  wire \FSM_onehot_STATE[1]_i_1_n_0 ;
  wire \FSM_onehot_STATE[2]_i_1_n_0 ;
  wire \FSM_onehot_STATE[2]_i_2_n_0 ;
  wire \FSM_onehot_STATE[2]_i_3_n_0 ;
  wire \FSM_onehot_STATE[3]_i_1_n_0 ;
  wire \FSM_onehot_STATE[4]_i_1_n_0 ;
  wire \FSM_onehot_STATE[5]_i_1_n_0 ;
  wire \FSM_onehot_STATE[6]_i_1_n_0 ;
  wire \FSM_onehot_STATE[7]_i_1_n_0 ;
  wire \FSM_onehot_STATE[8]_i_1_n_0 ;
  wire \FSM_onehot_STATE[9]_i_1_n_0 ;
  wire \FSM_onehot_STATE_reg[1]_0 ;
  wire \FSM_onehot_STATE_reg[2]_0 ;
  wire \FSM_onehot_STATE_reg_n_0_[0] ;
  wire \FSM_onehot_STATE_reg_n_0_[10] ;
  wire \FSM_onehot_STATE_reg_n_0_[11] ;
  wire \FSM_onehot_STATE_reg_n_0_[12] ;
  wire \FSM_onehot_STATE_reg_n_0_[1] ;
  wire \FSM_onehot_STATE_reg_n_0_[2] ;
  wire \FSM_onehot_STATE_reg_n_0_[4] ;
  wire \FSM_onehot_STATE_reg_n_0_[5] ;
  wire \FSM_onehot_STATE_reg_n_0_[6] ;
  wire \FSM_onehot_STATE_reg_n_0_[8] ;
  wire \FSM_onehot_STATE_reg_n_0_[9] ;
  wire [1:0]GOOD_CGS;
  wire \GOOD_CGS[0]_i_1_n_0 ;
  wire \GOOD_CGS[1]_i_1_n_0 ;
  wire \GOOD_CGS[1]_i_2_n_0 ;
  wire I0;
  wire I_reg;
  wire I_reg_0;
  wire RXEVEN;
  wire RXNOTINTABLE_INT;
  wire RXSYNC_STATUS;
  wire S2;
  wire SIGNAL_DETECT_MOD;
  wire SIGNAL_DETECT_REG;
  wire STATUS_VECTOR_0_PRE0;
  wire SYNC_STATUS0;
  wire SYNC_STATUS_REG0;
  wire SYNC_STATUS_i_1_n_0;
  wire enablealign;
  wire p_0_in;
  wire p_0_in_0;
  wire p_1_in;
  wire reset_done;
  wire userclk2;

  LUT6 #(
    .INIT(64'h00000000FFFEEEEE)) 
    ENCOMMAALIGN_i_1
       (.I0(enablealign),
        .I1(\FSM_onehot_STATE_reg_n_0_[2] ),
        .I2(p_1_in),
        .I3(\FSM_onehot_STATE_reg_n_0_[5] ),
        .I4(ENCOMMAALIGN_i_2_n_0),
        .I5(SYNC_STATUS0),
        .O(ENCOMMAALIGN_i_1_n_0));
  LUT5 #(
    .INIT(32'hFFFEFFFC)) 
    ENCOMMAALIGN_i_2
       (.I0(\FSM_onehot_STATE_reg[1]_0 ),
        .I1(RXNOTINTABLE_INT),
        .I2(D),
        .I3(p_0_in),
        .I4(RXEVEN),
        .O(ENCOMMAALIGN_i_2_n_0));
  LUT3 #(
    .INIT(8'h02)) 
    ENCOMMAALIGN_i_3
       (.I0(p_0_in_0),
        .I1(ENCOMMAALIGN_i_2_n_0),
        .I2(\FSM_onehot_STATE_reg[2]_0 ),
        .O(SYNC_STATUS0));
  FDRE #(
    .INIT(1'b0)) 
    ENCOMMAALIGN_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(ENCOMMAALIGN_i_1_n_0),
        .Q(enablealign),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT3 #(
    .INIT(8'h4F)) 
    EVEN_i_1
       (.I0(RXSYNC_STATUS),
        .I1(\FSM_onehot_STATE_reg[1]_0 ),
        .I2(RXEVEN),
        .O(EVEN_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    EVEN_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(EVEN_i_1_n_0),
        .Q(RXEVEN),
        .R(EVEN_reg_0));
  LUT6 #(
    .INIT(64'h0000000200000000)) 
    \FSM_onehot_STATE[0]_i_1 
       (.I0(\FSM_onehot_STATE_reg_n_0_[4] ),
        .I1(RXEVEN),
        .I2(p_0_in),
        .I3(D),
        .I4(RXNOTINTABLE_INT),
        .I5(\FSM_onehot_STATE_reg[1]_0 ),
        .O(\FSM_onehot_STATE[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_STATE[10]_i_1 
       (.I0(\FSM_onehot_STATE_reg[1]_0 ),
        .I1(\FSM_onehot_STATE_reg_n_0_[2] ),
        .O(\FSM_onehot_STATE[10]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h54554444)) 
    \FSM_onehot_STATE[11]_i_1 
       (.I0(ENCOMMAALIGN_i_2_n_0),
        .I1(\FSM_onehot_STATE_reg_n_0_[9] ),
        .I2(GOOD_CGS[0]),
        .I3(GOOD_CGS[1]),
        .I4(\FSM_onehot_STATE_reg_n_0_[11] ),
        .O(\FSM_onehot_STATE[11]_i_1_n_0 ));
  (* OPT_MODIFIED = "PROPCONST" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \FSM_onehot_STATE[12]_i_1 
       (.I0(EVEN_reg_0),
        .I1(SIGNAL_DETECT_REG),
        .O(\FSM_onehot_STATE[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFF4F4F4)) 
    \FSM_onehot_STATE[12]_i_2 
       (.I0(\FSM_onehot_STATE_reg[2]_0 ),
        .I1(p_0_in_0),
        .I2(\FSM_onehot_STATE_reg_n_0_[12] ),
        .I3(\FSM_onehot_STATE[12]_i_3_n_0 ),
        .I4(\FSM_onehot_STATE_reg_n_0_[11] ),
        .I5(ENCOMMAALIGN_i_2_n_0),
        .O(\FSM_onehot_STATE[12]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_onehot_STATE[12]_i_3 
       (.I0(GOOD_CGS[1]),
        .I1(GOOD_CGS[0]),
        .O(\FSM_onehot_STATE[12]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h000300BB000000AA)) 
    \FSM_onehot_STATE[1]_i_1 
       (.I0(\FSM_onehot_STATE_reg_n_0_[1] ),
        .I1(\FSM_onehot_STATE_reg[2]_0 ),
        .I2(RXEVEN),
        .I3(S2),
        .I4(\FSM_onehot_STATE_reg[1]_0 ),
        .I5(\FSM_onehot_STATE_reg_n_0_[0] ),
        .O(\FSM_onehot_STATE[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEFEFE00)) 
    \FSM_onehot_STATE[2]_i_1 
       (.I0(\FSM_onehot_STATE_reg_n_0_[10] ),
        .I1(\FSM_onehot_STATE_reg_n_0_[0] ),
        .I2(p_0_in_0),
        .I3(\FSM_onehot_STATE_reg[2]_0 ),
        .I4(ENCOMMAALIGN_i_2_n_0),
        .I5(\FSM_onehot_STATE[2]_i_2_n_0 ),
        .O(\FSM_onehot_STATE[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFF4F44444444)) 
    \FSM_onehot_STATE[2]_i_2 
       (.I0(\FSM_onehot_STATE_reg[1]_0 ),
        .I1(\FSM_onehot_STATE_reg_n_0_[2] ),
        .I2(\FSM_onehot_STATE[2]_i_3_n_0 ),
        .I3(\FSM_onehot_STATE_reg_n_0_[1] ),
        .I4(\FSM_onehot_STATE_reg_n_0_[4] ),
        .I5(ENCOMMAALIGN_i_2_n_0),
        .O(\FSM_onehot_STATE[2]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \FSM_onehot_STATE[2]_i_3 
       (.I0(p_1_in),
        .I1(\FSM_onehot_STATE_reg_n_0_[5] ),
        .O(\FSM_onehot_STATE[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000200000000)) 
    \FSM_onehot_STATE[3]_i_1 
       (.I0(\FSM_onehot_STATE_reg_n_0_[1] ),
        .I1(RXEVEN),
        .I2(p_0_in),
        .I3(D),
        .I4(RXNOTINTABLE_INT),
        .I5(\FSM_onehot_STATE_reg[1]_0 ),
        .O(\FSM_onehot_STATE[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000010FF00001050)) 
    \FSM_onehot_STATE[4]_i_1 
       (.I0(\FSM_onehot_STATE_reg[2]_0 ),
        .I1(RXEVEN),
        .I2(\FSM_onehot_STATE_reg_n_0_[10] ),
        .I3(\FSM_onehot_STATE_reg[1]_0 ),
        .I4(S2),
        .I5(\FSM_onehot_STATE_reg_n_0_[4] ),
        .O(\FSM_onehot_STATE[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h54554444)) 
    \FSM_onehot_STATE[5]_i_1 
       (.I0(ENCOMMAALIGN_i_2_n_0),
        .I1(p_1_in),
        .I2(GOOD_CGS[0]),
        .I3(GOOD_CGS[1]),
        .I4(\FSM_onehot_STATE_reg_n_0_[5] ),
        .O(\FSM_onehot_STATE[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFF0040404040)) 
    \FSM_onehot_STATE[6]_i_1 
       (.I0(GOOD_CGS[0]),
        .I1(GOOD_CGS[1]),
        .I2(\FSM_onehot_STATE_reg_n_0_[5] ),
        .I3(\FSM_onehot_STATE_reg_n_0_[9] ),
        .I4(\FSM_onehot_STATE_reg_n_0_[11] ),
        .I5(ENCOMMAALIGN_i_2_n_0),
        .O(\FSM_onehot_STATE[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \FSM_onehot_STATE[7]_i_1 
       (.I0(ENCOMMAALIGN_i_2_n_0),
        .I1(\FSM_onehot_STATE_reg_n_0_[8] ),
        .I2(\FSM_onehot_STATE_reg_n_0_[6] ),
        .O(\FSM_onehot_STATE[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT5 #(
    .INIT(32'h54554444)) 
    \FSM_onehot_STATE[8]_i_1 
       (.I0(ENCOMMAALIGN_i_2_n_0),
        .I1(\FSM_onehot_STATE_reg_n_0_[6] ),
        .I2(GOOD_CGS[0]),
        .I3(GOOD_CGS[1]),
        .I4(\FSM_onehot_STATE_reg_n_0_[8] ),
        .O(\FSM_onehot_STATE[8]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h8B888888)) 
    \FSM_onehot_STATE[9]_i_1 
       (.I0(\FSM_onehot_STATE_reg_n_0_[12] ),
        .I1(ENCOMMAALIGN_i_2_n_0),
        .I2(GOOD_CGS[0]),
        .I3(GOOD_CGS[1]),
        .I4(\FSM_onehot_STATE_reg_n_0_[8] ),
        .O(\FSM_onehot_STATE[9]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "comma_detect_2:0000000000001,aquire_sync_2:0000000000010,aquire_sync_1:0000000010000,sync_acquired_4:0000010000000,sync_acquired_4a:0000000100000,sync_acquired_3a:0000100000000,comma_detect_1:0010000000000,loss_of_sync:0000000000100,sync_acquired_2:0001000000000,sync_acquired_3:0000001000000,sync_acquired_2a:0100000000000,sync_acquired_1:1000000000000,comma_detect_3:0000000001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_STATE_reg[0] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\FSM_onehot_STATE[0]_i_1_n_0 ),
        .Q(\FSM_onehot_STATE_reg_n_0_[0] ),
        .R(\FSM_onehot_STATE[12]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "comma_detect_2:0000000000001,aquire_sync_2:0000000000010,aquire_sync_1:0000000010000,sync_acquired_4:0000010000000,sync_acquired_4a:0000000100000,sync_acquired_3a:0000100000000,comma_detect_1:0010000000000,loss_of_sync:0000000000100,sync_acquired_2:0001000000000,sync_acquired_3:0000001000000,sync_acquired_2a:0100000000000,sync_acquired_1:1000000000000,comma_detect_3:0000000001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_STATE_reg[10] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\FSM_onehot_STATE[10]_i_1_n_0 ),
        .Q(\FSM_onehot_STATE_reg_n_0_[10] ),
        .R(\FSM_onehot_STATE[12]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "comma_detect_2:0000000000001,aquire_sync_2:0000000000010,aquire_sync_1:0000000010000,sync_acquired_4:0000010000000,sync_acquired_4a:0000000100000,sync_acquired_3a:0000100000000,comma_detect_1:0010000000000,loss_of_sync:0000000000100,sync_acquired_2:0001000000000,sync_acquired_3:0000001000000,sync_acquired_2a:0100000000000,sync_acquired_1:1000000000000,comma_detect_3:0000000001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_STATE_reg[11] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\FSM_onehot_STATE[11]_i_1_n_0 ),
        .Q(\FSM_onehot_STATE_reg_n_0_[11] ),
        .R(\FSM_onehot_STATE[12]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "comma_detect_2:0000000000001,aquire_sync_2:0000000000010,aquire_sync_1:0000000010000,sync_acquired_4:0000010000000,sync_acquired_4a:0000000100000,sync_acquired_3a:0000100000000,comma_detect_1:0010000000000,loss_of_sync:0000000000100,sync_acquired_2:0001000000000,sync_acquired_3:0000001000000,sync_acquired_2a:0100000000000,sync_acquired_1:1000000000000,comma_detect_3:0000000001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_STATE_reg[12] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\FSM_onehot_STATE[12]_i_2_n_0 ),
        .Q(\FSM_onehot_STATE_reg_n_0_[12] ),
        .R(\FSM_onehot_STATE[12]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "comma_detect_2:0000000000001,aquire_sync_2:0000000000010,aquire_sync_1:0000000010000,sync_acquired_4:0000010000000,sync_acquired_4a:0000000100000,sync_acquired_3a:0000100000000,comma_detect_1:0010000000000,loss_of_sync:0000000000100,sync_acquired_2:0001000000000,sync_acquired_3:0000001000000,sync_acquired_2a:0100000000000,sync_acquired_1:1000000000000,comma_detect_3:0000000001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_STATE_reg[1] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\FSM_onehot_STATE[1]_i_1_n_0 ),
        .Q(\FSM_onehot_STATE_reg_n_0_[1] ),
        .R(\FSM_onehot_STATE[12]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "comma_detect_2:0000000000001,aquire_sync_2:0000000000010,aquire_sync_1:0000000010000,sync_acquired_4:0000010000000,sync_acquired_4a:0000000100000,sync_acquired_3a:0000100000000,comma_detect_1:0010000000000,loss_of_sync:0000000000100,sync_acquired_2:0001000000000,sync_acquired_3:0000001000000,sync_acquired_2a:0100000000000,sync_acquired_1:1000000000000,comma_detect_3:0000000001000" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_STATE_reg[2] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\FSM_onehot_STATE[2]_i_1_n_0 ),
        .Q(\FSM_onehot_STATE_reg_n_0_[2] ),
        .S(\FSM_onehot_STATE[12]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "comma_detect_2:0000000000001,aquire_sync_2:0000000000010,aquire_sync_1:0000000010000,sync_acquired_4:0000010000000,sync_acquired_4a:0000000100000,sync_acquired_3a:0000100000000,comma_detect_1:0010000000000,loss_of_sync:0000000000100,sync_acquired_2:0001000000000,sync_acquired_3:0000001000000,sync_acquired_2a:0100000000000,sync_acquired_1:1000000000000,comma_detect_3:0000000001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_STATE_reg[3] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\FSM_onehot_STATE[3]_i_1_n_0 ),
        .Q(p_0_in_0),
        .R(\FSM_onehot_STATE[12]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "comma_detect_2:0000000000001,aquire_sync_2:0000000000010,aquire_sync_1:0000000010000,sync_acquired_4:0000010000000,sync_acquired_4a:0000000100000,sync_acquired_3a:0000100000000,comma_detect_1:0010000000000,loss_of_sync:0000000000100,sync_acquired_2:0001000000000,sync_acquired_3:0000001000000,sync_acquired_2a:0100000000000,sync_acquired_1:1000000000000,comma_detect_3:0000000001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_STATE_reg[4] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\FSM_onehot_STATE[4]_i_1_n_0 ),
        .Q(\FSM_onehot_STATE_reg_n_0_[4] ),
        .R(\FSM_onehot_STATE[12]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "comma_detect_2:0000000000001,aquire_sync_2:0000000000010,aquire_sync_1:0000000010000,sync_acquired_4:0000010000000,sync_acquired_4a:0000000100000,sync_acquired_3a:0000100000000,comma_detect_1:0010000000000,loss_of_sync:0000000000100,sync_acquired_2:0001000000000,sync_acquired_3:0000001000000,sync_acquired_2a:0100000000000,sync_acquired_1:1000000000000,comma_detect_3:0000000001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_STATE_reg[5] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\FSM_onehot_STATE[5]_i_1_n_0 ),
        .Q(\FSM_onehot_STATE_reg_n_0_[5] ),
        .R(\FSM_onehot_STATE[12]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "comma_detect_2:0000000000001,aquire_sync_2:0000000000010,aquire_sync_1:0000000010000,sync_acquired_4:0000010000000,sync_acquired_4a:0000000100000,sync_acquired_3a:0000100000000,comma_detect_1:0010000000000,loss_of_sync:0000000000100,sync_acquired_2:0001000000000,sync_acquired_3:0000001000000,sync_acquired_2a:0100000000000,sync_acquired_1:1000000000000,comma_detect_3:0000000001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_STATE_reg[6] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\FSM_onehot_STATE[6]_i_1_n_0 ),
        .Q(\FSM_onehot_STATE_reg_n_0_[6] ),
        .R(\FSM_onehot_STATE[12]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "comma_detect_2:0000000000001,aquire_sync_2:0000000000010,aquire_sync_1:0000000010000,sync_acquired_4:0000010000000,sync_acquired_4a:0000000100000,sync_acquired_3a:0000100000000,comma_detect_1:0010000000000,loss_of_sync:0000000000100,sync_acquired_2:0001000000000,sync_acquired_3:0000001000000,sync_acquired_2a:0100000000000,sync_acquired_1:1000000000000,comma_detect_3:0000000001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_STATE_reg[7] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\FSM_onehot_STATE[7]_i_1_n_0 ),
        .Q(p_1_in),
        .R(\FSM_onehot_STATE[12]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "comma_detect_2:0000000000001,aquire_sync_2:0000000000010,aquire_sync_1:0000000010000,sync_acquired_4:0000010000000,sync_acquired_4a:0000000100000,sync_acquired_3a:0000100000000,comma_detect_1:0010000000000,loss_of_sync:0000000000100,sync_acquired_2:0001000000000,sync_acquired_3:0000001000000,sync_acquired_2a:0100000000000,sync_acquired_1:1000000000000,comma_detect_3:0000000001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_STATE_reg[8] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\FSM_onehot_STATE[8]_i_1_n_0 ),
        .Q(\FSM_onehot_STATE_reg_n_0_[8] ),
        .R(\FSM_onehot_STATE[12]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "comma_detect_2:0000000000001,aquire_sync_2:0000000000010,aquire_sync_1:0000000010000,sync_acquired_4:0000010000000,sync_acquired_4a:0000000100000,sync_acquired_3a:0000100000000,comma_detect_1:0010000000000,loss_of_sync:0000000000100,sync_acquired_2:0001000000000,sync_acquired_3:0000001000000,sync_acquired_2a:0100000000000,sync_acquired_1:1000000000000,comma_detect_3:0000000001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_STATE_reg[9] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\FSM_onehot_STATE[9]_i_1_n_0 ),
        .Q(\FSM_onehot_STATE_reg_n_0_[9] ),
        .R(\FSM_onehot_STATE[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000009)) 
    \GOOD_CGS[0]_i_1 
       (.I0(GOOD_CGS[0]),
        .I1(ENCOMMAALIGN_i_2_n_0),
        .I2(p_1_in),
        .I3(\FSM_onehot_STATE_reg_n_0_[9] ),
        .I4(EVEN_reg_0),
        .I5(\FSM_onehot_STATE_reg_n_0_[6] ),
        .O(\GOOD_CGS[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h009A)) 
    \GOOD_CGS[1]_i_1 
       (.I0(GOOD_CGS[1]),
        .I1(ENCOMMAALIGN_i_2_n_0),
        .I2(GOOD_CGS[0]),
        .I3(\GOOD_CGS[1]_i_2_n_0 ),
        .O(\GOOD_CGS[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \GOOD_CGS[1]_i_2 
       (.I0(\FSM_onehot_STATE_reg_n_0_[6] ),
        .I1(EVEN_reg_0),
        .I2(\FSM_onehot_STATE_reg_n_0_[9] ),
        .I3(p_1_in),
        .O(\GOOD_CGS[1]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \GOOD_CGS_reg[0] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\GOOD_CGS[0]_i_1_n_0 ),
        .Q(GOOD_CGS[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \GOOD_CGS_reg[1] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\GOOD_CGS[1]_i_1_n_0 ),
        .Q(GOOD_CGS[1]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h20220000)) 
    I_i_1
       (.I0(I_reg),
        .I1(I_reg_0),
        .I2(RXSYNC_STATUS),
        .I3(\FSM_onehot_STATE_reg[2]_0 ),
        .I4(RXEVEN),
        .O(I0));
  LUT2 #(
    .INIT(4'hB)) 
    RX_INVALID_i_1
       (.I0(EVEN_reg_0),
        .I1(RXSYNC_STATUS),
        .O(SYNC_STATUS_REG0));
  FDRE #(
    .INIT(1'b0)) 
    SIGNAL_DETECT_REG_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(SIGNAL_DETECT_MOD),
        .Q(SIGNAL_DETECT_REG),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT2 #(
    .INIT(4'h8)) 
    STATUS_VECTOR_0_PRE_i_1
       (.I0(RXSYNC_STATUS),
        .I1(reset_done),
        .O(STATUS_VECTOR_0_PRE0));
  LUT6 #(
    .INIT(64'hFFFFFFFF0000222A)) 
    SYNC_STATUS_i_1
       (.I0(RXSYNC_STATUS),
        .I1(ENCOMMAALIGN_i_2_n_0),
        .I2(\FSM_onehot_STATE_reg_n_0_[5] ),
        .I3(p_1_in),
        .I4(\FSM_onehot_STATE_reg_n_0_[2] ),
        .I5(SYNC_STATUS0),
        .O(SYNC_STATUS_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    SYNC_STATUS_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(SYNC_STATUS_i_1_n_0),
        .Q(RXSYNC_STATUS),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "TX" *) 
module gig_ethernet_pcs_pma_0_TX
   (\USE_ROCKET_IO.MGT_TX_RESET_INT_reg ,
    D,
    \CODE_GRP_CNT_reg[0]_0 ,
    \CODE_GRP_CNT_reg[0]_1 ,
    \NO_QSGMII_DATA.TXCHARISK_reg_0 ,
    \NO_QSGMII_DATA.TXCHARISK_reg_1 ,
    \NO_QSGMII_DATA.TXDATA_reg[2]_0 ,
    \NO_QSGMII_DATA.TXDATA_reg[3]_0 ,
    \NO_QSGMII_DATA.TXDATA_reg[5]_0 ,
    \NO_QSGMII_DATA.TXDATA_reg[7]_0 ,
    \NO_QSGMII_CHAR.TXCHARDISPVAL_reg_0 ,
    \NO_QSGMII_DATA.TXDATA_reg[7]_1 ,
    gmii_tx_en,
    userclk2,
    \NO_QSGMII_DATA.TXDATA_reg[4]_0 ,
    gmii_tx_er,
    CONFIGURATION_VECTOR_REG,
    gmii_txd,
    SR,
    rxcharisk,
    rxchariscomma,
    rxdata);
  output \USE_ROCKET_IO.MGT_TX_RESET_INT_reg ;
  output [3:0]D;
  output \CODE_GRP_CNT_reg[0]_0 ;
  output \CODE_GRP_CNT_reg[0]_1 ;
  output \NO_QSGMII_DATA.TXCHARISK_reg_0 ;
  output \NO_QSGMII_DATA.TXCHARISK_reg_1 ;
  output \NO_QSGMII_DATA.TXDATA_reg[2]_0 ;
  output \NO_QSGMII_DATA.TXDATA_reg[3]_0 ;
  output \NO_QSGMII_DATA.TXDATA_reg[5]_0 ;
  output \NO_QSGMII_DATA.TXDATA_reg[7]_0 ;
  output \NO_QSGMII_CHAR.TXCHARDISPVAL_reg_0 ;
  output [7:0]\NO_QSGMII_DATA.TXDATA_reg[7]_1 ;
  input gmii_tx_en;
  input userclk2;
  input \NO_QSGMII_DATA.TXDATA_reg[4]_0 ;
  input gmii_tx_er;
  input [0:0]CONFIGURATION_VECTOR_REG;
  input [7:0]gmii_txd;
  input [0:0]SR;
  input [0:0]rxcharisk;
  input [0:0]rxchariscomma;
  input [7:0]rxdata;

  wire C1_OR_C2_i_1_n_0;
  wire C1_OR_C2_reg_n_0;
  wire CODE_GRPISK;
  wire CODE_GRPISK_i_1_n_0;
  wire CODE_GRPISK_i_2_n_0;
  wire \CODE_GRP[0]_i_1_n_0 ;
  wire \CODE_GRP[0]_i_2_n_0 ;
  wire \CODE_GRP[1]_i_1_n_0 ;
  wire \CODE_GRP[1]_i_2_n_0 ;
  wire \CODE_GRP[1]_i_3_n_0 ;
  wire \CODE_GRP[2]_i_1_n_0 ;
  wire \CODE_GRP[2]_i_2_n_0 ;
  wire \CODE_GRP[3]_i_1_n_0 ;
  wire \CODE_GRP[3]_i_2_n_0 ;
  wire \CODE_GRP[4]_i_1_n_0 ;
  wire \CODE_GRP[5]_i_1_n_0 ;
  wire \CODE_GRP[6]_i_1_n_0 ;
  wire \CODE_GRP[6]_i_2_n_0 ;
  wire \CODE_GRP[6]_i_3_n_0 ;
  wire \CODE_GRP[7]_i_1_n_0 ;
  wire \CODE_GRP[7]_i_2_n_0 ;
  wire \CODE_GRP_CNT_reg_n_0_[1] ;
  wire \CODE_GRP_reg_n_0_[0] ;
  wire [6:0]CONFIG_DATA;
  wire \CONFIG_DATA_reg_n_0_[0] ;
  wire \CONFIG_DATA_reg_n_0_[3] ;
  wire \CONFIG_DATA_reg_n_0_[4] ;
  wire \CONFIG_DATA_reg_n_0_[6] ;
  wire [3:0]D;
  wire DISPARITY;
  wire INSERT_IDLE;
  wire INSERT_IDLE_i_1_n_0;
  wire INSERT_IDLE_reg_n_0;
  wire K28p5;
  wire K28p5_i_1_n_0;
  wire \NO_QSGMII_CHAR.TXCHARDISPVAL_i_1_n_0 ;
  wire \NO_QSGMII_CHAR.TXCHARDISPVAL_reg_0 ;
  wire \NO_QSGMII_DATA.TXDATA[0]_i_1_n_0 ;
  wire \NO_QSGMII_DATA.TXDATA[2]_i_1_n_0 ;
  wire \NO_QSGMII_DATA.TXDATA[4]_i_1_n_0 ;
  wire \NO_QSGMII_DATA.TXDATA[5]_i_1_n_0 ;
  wire \NO_QSGMII_DATA.TXDATA[6]_i_1_n_0 ;
  wire \NO_QSGMII_DATA.TXDATA[7]_i_1_n_0 ;
  wire \NO_QSGMII_DATA.TXDATA_reg[2]_0 ;
  wire \NO_QSGMII_DATA.TXDATA_reg[3]_0 ;
  wire \NO_QSGMII_DATA.TXDATA_reg[4]_0 ;
  wire \NO_QSGMII_DATA.TXDATA_reg[5]_0 ;
  wire \NO_QSGMII_DATA.TXDATA_reg[7]_0 ;
  wire \NO_QSGMII_DISP.DISPARITY_i_1_n_0 ;
  wire \NO_QSGMII_DISP.DISPARITY_i_2_n_0 ;
  wire \NO_QSGMII_DISP.DISPARITY_i_3_n_0 ;
  wire R;
  wire R_i_1__0_n_0;
  wire S;
  wire S0;
  wire SYNC_DISPARITY_i_1_n_0;
  wire SYNC_DISPARITY_reg_n_0;
  wire T;
  wire T0;
  wire TRIGGER_S;
  wire TRIGGER_S0;
  wire TRIGGER_T;
  wire TXCHARDISPMODE0;
  wire TXCHARDISPMODE_INT;
  wire TXCHARDISPVAL;
  wire TXCHARISK_INT;
  wire [7:0]TXDATA;
  wire [7:0]TXD_REG1;
  wire TX_EN_REG1;
  wire TX_ER_REG1;
  wire TX_EVEN;
  wire TX_PACKET;
  wire TX_PACKET_REG1;
  wire TX_PACKET_i_1_n_0;
  wire V;
  wire V_i_1_n_0;
  wire V_i_2_n_0;
  wire V_i_3_n_0;
  wire V_i_4_n_0;
  wire V_i_5_n_0;
  wire V_i_6_n_0;
  wire XMIT_CONFIG_INT;
  wire XMIT_CONFIG_INT_i_1_n_0;
  wire XMIT_DATA_INT_i_1_n_0;
  wire XMIT_DATA_INT_reg_n_0;
  wire gmii_tx_en;
  wire gmii_tx_er;
  wire [7:0]gmii_txd;
  wire p_0_in;
  wire p_0_in11_in;
  wire p_0_in26_in;
  wire p_1_in;
  wire p_1_in0_in;
  wire p_1_in25_in;
  wire p_24_in;
  wire p_34_in;
  wire [1:0]plusOp;
  wire [0:0]rxchariscomma;
  wire [0:0]rxcharisk;
  wire [7:0]rxdata;
  wire userclk2;

  assign \CODE_GRP_CNT_reg[0]_0  = TXCHARDISPMODE_INT;
  assign \CODE_GRP_CNT_reg[0]_1  = TXCHARISK_INT;
  assign \NO_QSGMII_DATA.TXCHARISK_reg_0  = rxcharisk;
  assign \NO_QSGMII_DATA.TXCHARISK_reg_1  = rxchariscomma;
  assign \NO_QSGMII_DATA.TXDATA_reg[7]_1 [7:0] = rxdata;
  assign \USE_ROCKET_IO.MGT_TX_RESET_INT_reg  = \CODE_GRP[6]_i_1_n_0 ;
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT4 #(
    .INIT(16'h3F80)) 
    C1_OR_C2_i_1
       (.I0(XMIT_CONFIG_INT),
        .I1(TX_EVEN),
        .I2(\CODE_GRP_CNT_reg_n_0_[1] ),
        .I3(C1_OR_C2_reg_n_0),
        .O(C1_OR_C2_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    C1_OR_C2_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(C1_OR_C2_i_1_n_0),
        .Q(C1_OR_C2_reg_n_0),
        .R(\NO_QSGMII_DATA.TXDATA_reg[4]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT4 #(
    .INIT(16'h2F20)) 
    CODE_GRPISK_i_1
       (.I0(TX_EVEN),
        .I1(\CODE_GRP_CNT_reg_n_0_[1] ),
        .I2(XMIT_CONFIG_INT),
        .I3(CODE_GRPISK_i_2_n_0),
        .O(CODE_GRPISK_i_1_n_0));
  (* OPT_MODIFIED = "PROPCONST" *) 
  LUT5 #(
    .INIT(32'hFFFEFFFF)) 
    CODE_GRPISK_i_2
       (.I0(V),
        .I1(R),
        .I2(T),
        .I3(S),
        .I4(TX_PACKET),
        .O(CODE_GRPISK_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    CODE_GRPISK_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(CODE_GRPISK_i_1_n_0),
        .Q(CODE_GRPISK),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hAAFFAA03)) 
    \CODE_GRP[0]_i_1 
       (.I0(\CONFIG_DATA_reg_n_0_[0] ),
        .I1(\CODE_GRP[0]_i_2_n_0 ),
        .I2(V),
        .I3(XMIT_CONFIG_INT),
        .I4(S),
        .O(\CODE_GRP[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0007)) 
    \CODE_GRP[0]_i_2 
       (.I0(TXD_REG1[0]),
        .I1(TX_PACKET),
        .I2(R),
        .I3(T),
        .O(\CODE_GRP[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00005555FFC05555)) 
    \CODE_GRP[1]_i_1 
       (.I0(\CODE_GRP[1]_i_2_n_0 ),
        .I1(TXD_REG1[1]),
        .I2(TX_PACKET),
        .I3(R),
        .I4(\CODE_GRP[1]_i_3_n_0 ),
        .I5(T),
        .O(\CODE_GRP[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \CODE_GRP[1]_i_2 
       (.I0(XMIT_CONFIG_INT),
        .I1(\CONFIG_DATA_reg_n_0_[6] ),
        .O(\CODE_GRP[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \CODE_GRP[1]_i_3 
       (.I0(V),
        .I1(XMIT_CONFIG_INT),
        .I2(S),
        .O(\CODE_GRP[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAA0000FFCF)) 
    \CODE_GRP[2]_i_1 
       (.I0(\CONFIG_DATA_reg_n_0_[4] ),
        .I1(\CODE_GRP[2]_i_2_n_0 ),
        .I2(TX_PACKET),
        .I3(TXD_REG1[2]),
        .I4(S),
        .I5(XMIT_CONFIG_INT),
        .O(\CODE_GRP[2]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \CODE_GRP[2]_i_2 
       (.I0(V),
        .I1(R),
        .I2(T),
        .O(\CODE_GRP[2]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFD0)) 
    \CODE_GRP[3]_i_1 
       (.I0(TX_PACKET),
        .I1(TXD_REG1[3]),
        .I2(\CODE_GRP[6]_i_3_n_0 ),
        .I3(\CODE_GRP[3]_i_2_n_0 ),
        .O(\CODE_GRP[3]_i_1_n_0 ));
  (* OPT_MODIFIED = "PROPCONST" *) 
  LUT5 #(
    .INIT(32'hAFAFAFAC)) 
    \CODE_GRP[3]_i_2 
       (.I0(\CONFIG_DATA_reg_n_0_[3] ),
        .I1(S),
        .I2(XMIT_CONFIG_INT),
        .I3(V),
        .I4(T),
        .O(\CODE_GRP[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFF808080)) 
    \CODE_GRP[4]_i_1 
       (.I0(\CODE_GRP[6]_i_3_n_0 ),
        .I1(TXD_REG1[4]),
        .I2(TX_PACKET),
        .I3(XMIT_CONFIG_INT),
        .I4(\CONFIG_DATA_reg_n_0_[4] ),
        .I5(\CODE_GRP[7]_i_2_n_0 ),
        .O(\CODE_GRP[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFF808080)) 
    \CODE_GRP[5]_i_1 
       (.I0(\CODE_GRP[6]_i_3_n_0 ),
        .I1(TXD_REG1[5]),
        .I2(TX_PACKET),
        .I3(XMIT_CONFIG_INT),
        .I4(\CONFIG_DATA_reg_n_0_[4] ),
        .I5(\CODE_GRP[7]_i_2_n_0 ),
        .O(\CODE_GRP[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB000BBBB)) 
    \CODE_GRP[6]_i_2 
       (.I0(\CONFIG_DATA_reg_n_0_[6] ),
        .I1(XMIT_CONFIG_INT),
        .I2(TX_PACKET),
        .I3(TXD_REG1[6]),
        .I4(\CODE_GRP[6]_i_3_n_0 ),
        .O(\CODE_GRP[6]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00000001)) 
    \CODE_GRP[6]_i_3 
       (.I0(XMIT_CONFIG_INT),
        .I1(S),
        .I2(T),
        .I3(R),
        .I4(V),
        .O(\CODE_GRP[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFF808080)) 
    \CODE_GRP[7]_i_1 
       (.I0(\CODE_GRP[6]_i_3_n_0 ),
        .I1(TXD_REG1[7]),
        .I2(TX_PACKET),
        .I3(XMIT_CONFIG_INT),
        .I4(\CONFIG_DATA_reg_n_0_[4] ),
        .I5(\CODE_GRP[7]_i_2_n_0 ),
        .O(\CODE_GRP[7]_i_1_n_0 ));
  (* OPT_MODIFIED = "PROPCONST" *) 
  LUT4 #(
    .INIT(16'h00FD)) 
    \CODE_GRP[7]_i_2 
       (.I0(TX_PACKET),
        .I1(S),
        .I2(\CODE_GRP[2]_i_2_n_0 ),
        .I3(XMIT_CONFIG_INT),
        .O(\CODE_GRP[7]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \CODE_GRP_CNT[0]_i_1 
       (.I0(TX_EVEN),
        .O(plusOp[0]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \CODE_GRP_CNT[1]_i_1 
       (.I0(TX_EVEN),
        .I1(\CODE_GRP_CNT_reg_n_0_[1] ),
        .O(plusOp[1]));
  FDSE #(
    .INIT(1'b1)) 
    \CODE_GRP_CNT_reg[0] 
       (.C(userclk2),
        .CE(1'b1),
        .D(plusOp[0]),
        .Q(TX_EVEN),
        .S(\NO_QSGMII_DATA.TXDATA_reg[4]_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \CODE_GRP_CNT_reg[1] 
       (.C(userclk2),
        .CE(1'b1),
        .D(plusOp[1]),
        .Q(\CODE_GRP_CNT_reg_n_0_[1] ),
        .S(\NO_QSGMII_DATA.TXDATA_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \CODE_GRP_reg[0] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\CODE_GRP[0]_i_1_n_0 ),
        .Q(\CODE_GRP_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \CODE_GRP_reg[1] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\CODE_GRP[1]_i_1_n_0 ),
        .Q(p_1_in),
        .R(1'b0));
  FDSE #(
    .INIT(1'b1)) 
    \CODE_GRP_reg[2] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\CODE_GRP[2]_i_1_n_0 ),
        .Q(p_0_in11_in),
        .S(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \CODE_GRP_reg[3] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\CODE_GRP[3]_i_1_n_0 ),
        .Q(p_0_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \CODE_GRP_reg[4] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\CODE_GRP[4]_i_1_n_0 ),
        .Q(p_1_in0_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \CODE_GRP_reg[5] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\CODE_GRP[5]_i_1_n_0 ),
        .Q(p_1_in25_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \CODE_GRP_reg[6] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\CODE_GRP[6]_i_2_n_0 ),
        .Q(p_24_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \CODE_GRP_reg[7] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\CODE_GRP[7]_i_1_n_0 ),
        .Q(p_0_in26_in),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \CONFIG_DATA[0]_i_1 
       (.I0(\CODE_GRP_CNT_reg_n_0_[1] ),
        .I1(TX_EVEN),
        .I2(C1_OR_C2_reg_n_0),
        .O(CONFIG_DATA[0]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \CONFIG_DATA[3]_i_1 
       (.I0(TX_EVEN),
        .I1(\CODE_GRP_CNT_reg_n_0_[1] ),
        .O(CONFIG_DATA[3]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT3 #(
    .INIT(8'h13)) 
    \CONFIG_DATA[4]_i_1 
       (.I0(TX_EVEN),
        .I1(\CODE_GRP_CNT_reg_n_0_[1] ),
        .I2(C1_OR_C2_reg_n_0),
        .O(CONFIG_DATA[4]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \CONFIG_DATA[6]_i_1 
       (.I0(C1_OR_C2_reg_n_0),
        .I1(\CODE_GRP_CNT_reg_n_0_[1] ),
        .I2(TX_EVEN),
        .O(CONFIG_DATA[6]));
  FDRE #(
    .INIT(1'b0)) 
    \CONFIG_DATA_reg[0] 
       (.C(userclk2),
        .CE(1'b1),
        .D(CONFIG_DATA[0]),
        .Q(\CONFIG_DATA_reg_n_0_[0] ),
        .R(\NO_QSGMII_DATA.TXDATA_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \CONFIG_DATA_reg[3] 
       (.C(userclk2),
        .CE(1'b1),
        .D(CONFIG_DATA[3]),
        .Q(\CONFIG_DATA_reg_n_0_[3] ),
        .R(\NO_QSGMII_DATA.TXDATA_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \CONFIG_DATA_reg[4] 
       (.C(userclk2),
        .CE(1'b1),
        .D(CONFIG_DATA[4]),
        .Q(\CONFIG_DATA_reg_n_0_[4] ),
        .R(\NO_QSGMII_DATA.TXDATA_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \CONFIG_DATA_reg[6] 
       (.C(userclk2),
        .CE(1'b1),
        .D(CONFIG_DATA[6]),
        .Q(\CONFIG_DATA_reg_n_0_[6] ),
        .R(\NO_QSGMII_DATA.TXDATA_reg[4]_0 ));
  (* OPT_MODIFIED = "PROPCONST" *) 
  GND GND_1
       (.G(\CODE_GRP[6]_i_1_n_0 ));
  (* OPT_MODIFIED = "PROPCONST" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    INSERT_IDLE_i_1
       (.I0(TX_PACKET),
        .I1(\CODE_GRP[2]_i_2_n_0 ),
        .I2(S),
        .I3(XMIT_CONFIG_INT),
        .O(INSERT_IDLE_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    INSERT_IDLE_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(INSERT_IDLE_i_1_n_0),
        .Q(INSERT_IDLE_reg_n_0),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    K28p5_i_1
       (.I0(XMIT_CONFIG_INT),
        .I1(\CONFIG_DATA_reg_n_0_[3] ),
        .O(K28p5_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    K28p5_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(K28p5_i_1_n_0),
        .Q(K28p5),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \NO_QSGMII_CHAR.TXCHARDISPMODE_i_1 
       (.I0(SYNC_DISPARITY_reg_n_0),
        .I1(TX_EVEN),
        .O(TXCHARDISPMODE0));
  FDSE #(
    .INIT(1'b1)) 
    \NO_QSGMII_CHAR.TXCHARDISPMODE_reg 
       (.C(userclk2),
        .CE(1'b1),
        .D(TXCHARDISPMODE0),
        .Q(TXCHARDISPMODE_INT),
        .S(\NO_QSGMII_DATA.TXDATA_reg[4]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \NO_QSGMII_CHAR.TXCHARDISPVAL_i_1 
       (.I0(TX_EVEN),
        .I1(SYNC_DISPARITY_reg_n_0),
        .I2(DISPARITY),
        .O(\NO_QSGMII_CHAR.TXCHARDISPVAL_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \NO_QSGMII_CHAR.TXCHARDISPVAL_reg 
       (.C(userclk2),
        .CE(1'b1),
        .D(\NO_QSGMII_CHAR.TXCHARDISPVAL_i_1_n_0 ),
        .Q(TXCHARDISPVAL),
        .R(\NO_QSGMII_DATA.TXDATA_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \NO_QSGMII_DATA.TXCHARISK_reg 
       (.C(userclk2),
        .CE(1'b1),
        .D(CODE_GRPISK),
        .Q(TXCHARISK_INT),
        .R(\NO_QSGMII_DATA.TXDATA[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h23332000)) 
    \NO_QSGMII_DATA.TXDATA[0]_i_1 
       (.I0(DISPARITY),
        .I1(\NO_QSGMII_DATA.TXDATA_reg[4]_0 ),
        .I2(TX_EVEN),
        .I3(INSERT_IDLE_reg_n_0),
        .I4(\CODE_GRP_reg_n_0_[0] ),
        .O(\NO_QSGMII_DATA.TXDATA[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h23332000)) 
    \NO_QSGMII_DATA.TXDATA[2]_i_1 
       (.I0(DISPARITY),
        .I1(\NO_QSGMII_DATA.TXDATA_reg[4]_0 ),
        .I2(TX_EVEN),
        .I3(INSERT_IDLE_reg_n_0),
        .I4(p_0_in11_in),
        .O(\NO_QSGMII_DATA.TXDATA[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT4 #(
    .INIT(16'h7F40)) 
    \NO_QSGMII_DATA.TXDATA[4]_i_1 
       (.I0(DISPARITY),
        .I1(INSERT_IDLE_reg_n_0),
        .I2(TX_EVEN),
        .I3(p_1_in0_in),
        .O(\NO_QSGMII_DATA.TXDATA[4]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \NO_QSGMII_DATA.TXDATA[5]_i_1 
       (.I0(\NO_QSGMII_DATA.TXDATA_reg[4]_0 ),
        .I1(TX_EVEN),
        .I2(INSERT_IDLE_reg_n_0),
        .O(\NO_QSGMII_DATA.TXDATA[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT4 #(
    .INIT(16'h5540)) 
    \NO_QSGMII_DATA.TXDATA[6]_i_1 
       (.I0(\NO_QSGMII_DATA.TXDATA_reg[4]_0 ),
        .I1(INSERT_IDLE_reg_n_0),
        .I2(TX_EVEN),
        .I3(p_24_in),
        .O(\NO_QSGMII_DATA.TXDATA[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h23332000)) 
    \NO_QSGMII_DATA.TXDATA[7]_i_1 
       (.I0(DISPARITY),
        .I1(\NO_QSGMII_DATA.TXDATA_reg[4]_0 ),
        .I2(TX_EVEN),
        .I3(INSERT_IDLE_reg_n_0),
        .I4(p_0_in26_in),
        .O(\NO_QSGMII_DATA.TXDATA[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \NO_QSGMII_DATA.TXDATA_reg[0] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\NO_QSGMII_DATA.TXDATA[0]_i_1_n_0 ),
        .Q(TXDATA[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \NO_QSGMII_DATA.TXDATA_reg[1] 
       (.C(userclk2),
        .CE(1'b1),
        .D(p_1_in),
        .Q(TXDATA[1]),
        .R(\NO_QSGMII_DATA.TXDATA[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \NO_QSGMII_DATA.TXDATA_reg[2] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\NO_QSGMII_DATA.TXDATA[2]_i_1_n_0 ),
        .Q(TXDATA[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \NO_QSGMII_DATA.TXDATA_reg[3] 
       (.C(userclk2),
        .CE(1'b1),
        .D(p_0_in),
        .Q(TXDATA[3]),
        .R(\NO_QSGMII_DATA.TXDATA[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \NO_QSGMII_DATA.TXDATA_reg[4] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\NO_QSGMII_DATA.TXDATA[4]_i_1_n_0 ),
        .Q(TXDATA[4]),
        .R(\NO_QSGMII_DATA.TXDATA_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \NO_QSGMII_DATA.TXDATA_reg[5] 
       (.C(userclk2),
        .CE(1'b1),
        .D(p_1_in25_in),
        .Q(TXDATA[5]),
        .R(\NO_QSGMII_DATA.TXDATA[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \NO_QSGMII_DATA.TXDATA_reg[6] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\NO_QSGMII_DATA.TXDATA[6]_i_1_n_0 ),
        .Q(TXDATA[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \NO_QSGMII_DATA.TXDATA_reg[7] 
       (.C(userclk2),
        .CE(1'b1),
        .D(\NO_QSGMII_DATA.TXDATA[7]_i_1_n_0 ),
        .Q(TXDATA[7]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0009090900F6F6F6)) 
    \NO_QSGMII_DISP.DISPARITY_i_1 
       (.I0(\NO_QSGMII_DISP.DISPARITY_i_2_n_0 ),
        .I1(\NO_QSGMII_DISP.DISPARITY_i_3_n_0 ),
        .I2(K28p5),
        .I3(TX_EVEN),
        .I4(INSERT_IDLE_reg_n_0),
        .I5(DISPARITY),
        .O(\NO_QSGMII_DISP.DISPARITY_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h167E7EE8)) 
    \NO_QSGMII_DISP.DISPARITY_i_2 
       (.I0(p_1_in),
        .I1(\CODE_GRP_reg_n_0_[0] ),
        .I2(p_0_in11_in),
        .I3(p_0_in),
        .I4(p_1_in0_in),
        .O(\NO_QSGMII_DISP.DISPARITY_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h7C)) 
    \NO_QSGMII_DISP.DISPARITY_i_3 
       (.I0(p_0_in26_in),
        .I1(p_24_in),
        .I2(p_1_in25_in),
        .O(\NO_QSGMII_DISP.DISPARITY_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \NO_QSGMII_DISP.DISPARITY_reg 
       (.C(userclk2),
        .CE(1'b1),
        .D(\NO_QSGMII_DISP.DISPARITY_i_1_n_0 ),
        .Q(DISPARITY),
        .S(\NO_QSGMII_DATA.TXDATA_reg[4]_0 ));
  LUT5 #(
    .INIT(32'hDDDCCCCC)) 
    R_i_1__0
       (.I0(S),
        .I1(T),
        .I2(TX_ER_REG1),
        .I3(TX_EVEN),
        .I4(R),
        .O(R_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    R_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(R_i_1__0_n_0),
        .Q(R),
        .R(\NO_QSGMII_DATA.TXDATA_reg[4]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT4 #(
    .INIT(16'h2F20)) 
    SYNC_DISPARITY_i_1
       (.I0(TX_EVEN),
        .I1(\CODE_GRP_CNT_reg_n_0_[1] ),
        .I2(XMIT_CONFIG_INT),
        .I3(INSERT_IDLE),
        .O(SYNC_DISPARITY_i_1_n_0));
  (* OPT_MODIFIED = "PROPCONST" *) 
  LUT5 #(
    .INIT(32'h00000001)) 
    SYNC_DISPARITY_i_2
       (.I0(S),
        .I1(T),
        .I2(R),
        .I3(V),
        .I4(TX_PACKET),
        .O(INSERT_IDLE));
  FDRE #(
    .INIT(1'b0)) 
    SYNC_DISPARITY_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(SYNC_DISPARITY_i_1_n_0),
        .Q(SYNC_DISPARITY_reg_n_0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h8888A8AA88888888)) 
    S_i_1__0
       (.I0(XMIT_DATA_INT_reg_n_0),
        .I1(TRIGGER_S),
        .I2(TX_ER_REG1),
        .I3(TX_EVEN),
        .I4(TX_EN_REG1),
        .I5(gmii_tx_en),
        .O(S0));
  FDRE #(
    .INIT(1'b0)) 
    S_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(S0),
        .Q(S),
        .R(\NO_QSGMII_DATA.TXDATA_reg[4]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT4 #(
    .INIT(16'h0400)) 
    TRIGGER_S_i_1
       (.I0(TX_EN_REG1),
        .I1(gmii_tx_en),
        .I2(TX_ER_REG1),
        .I3(TX_EVEN),
        .O(TRIGGER_S0));
  FDRE #(
    .INIT(1'b0)) 
    TRIGGER_S_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(TRIGGER_S0),
        .Q(TRIGGER_S),
        .R(\NO_QSGMII_DATA.TXDATA_reg[4]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT2 #(
    .INIT(4'h2)) 
    TRIGGER_T_i_1
       (.I0(TX_EN_REG1),
        .I1(gmii_tx_en),
        .O(p_34_in));
  FDRE #(
    .INIT(1'b0)) 
    TRIGGER_T_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(p_34_in),
        .Q(TRIGGER_T),
        .R(\NO_QSGMII_DATA.TXDATA_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TXD_REG1_reg[0] 
       (.C(userclk2),
        .CE(1'b1),
        .D(gmii_txd[0]),
        .Q(TXD_REG1[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TXD_REG1_reg[1] 
       (.C(userclk2),
        .CE(1'b1),
        .D(gmii_txd[1]),
        .Q(TXD_REG1[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TXD_REG1_reg[2] 
       (.C(userclk2),
        .CE(1'b1),
        .D(gmii_txd[2]),
        .Q(TXD_REG1[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TXD_REG1_reg[3] 
       (.C(userclk2),
        .CE(1'b1),
        .D(gmii_txd[3]),
        .Q(TXD_REG1[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TXD_REG1_reg[4] 
       (.C(userclk2),
        .CE(1'b1),
        .D(gmii_txd[4]),
        .Q(TXD_REG1[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TXD_REG1_reg[5] 
       (.C(userclk2),
        .CE(1'b1),
        .D(gmii_txd[5]),
        .Q(TXD_REG1[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TXD_REG1_reg[6] 
       (.C(userclk2),
        .CE(1'b1),
        .D(gmii_txd[6]),
        .Q(TXD_REG1[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TXD_REG1_reg[7] 
       (.C(userclk2),
        .CE(1'b1),
        .D(gmii_txd[7]),
        .Q(TXD_REG1[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    TX_EN_REG1_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(gmii_tx_en),
        .Q(TX_EN_REG1),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    TX_ER_REG1_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(gmii_tx_er),
        .Q(TX_ER_REG1),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    TX_PACKET_REG1_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(TX_PACKET),
        .Q(TX_PACKET_REG1),
        .R(\NO_QSGMII_DATA.TXDATA_reg[4]_0 ));
  LUT3 #(
    .INIT(8'hDC)) 
    TX_PACKET_i_1
       (.I0(T),
        .I1(S),
        .I2(TX_PACKET),
        .O(TX_PACKET_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    TX_PACKET_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(TX_PACKET_i_1_n_0),
        .Q(TX_PACKET),
        .R(\NO_QSGMII_DATA.TXDATA_reg[4]_0 ));
  LUT6 #(
    .INIT(64'h88888888FFF88888)) 
    T_i_1
       (.I0(TRIGGER_T),
        .I1(V),
        .I2(S),
        .I3(TX_PACKET),
        .I4(TX_EN_REG1),
        .I5(gmii_tx_en),
        .O(T0));
  FDRE #(
    .INIT(1'b0)) 
    T_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(T0),
        .Q(T),
        .R(\NO_QSGMII_DATA.TXDATA_reg[4]_0 ));
  (* OPT_MODIFIED = "PROPCONST" *) 
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \USE_ROCKET_IO.TXCHARDISPVAL_i_1 
       (.I0(TXCHARDISPVAL),
        .I1(\NO_QSGMII_DATA.TXDATA_reg[4]_0 ),
        .O(\NO_QSGMII_CHAR.TXCHARDISPVAL_reg_0 ));
  (* OPT_MODIFIED = "PROPCONST" *) 
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \USE_ROCKET_IO.TXDATA[0]_i_1 
       (.I0(TXDATA[0]),
        .I1(\NO_QSGMII_DATA.TXDATA_reg[4]_0 ),
        .O(D[0]));
  (* OPT_MODIFIED = "PROPCONST" *) 
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \USE_ROCKET_IO.TXDATA[1]_i_1 
       (.I0(TXDATA[1]),
        .I1(\NO_QSGMII_DATA.TXDATA_reg[4]_0 ),
        .O(D[1]));
  (* OPT_MODIFIED = "PROPCONST" *) 
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \USE_ROCKET_IO.TXDATA[2]_i_1 
       (.I0(TXDATA[2]),
        .I1(\NO_QSGMII_DATA.TXDATA_reg[4]_0 ),
        .O(\NO_QSGMII_DATA.TXDATA_reg[2]_0 ));
  (* OPT_MODIFIED = "PROPCONST" *) 
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \USE_ROCKET_IO.TXDATA[3]_i_1 
       (.I0(TXDATA[3]),
        .I1(\NO_QSGMII_DATA.TXDATA_reg[4]_0 ),
        .O(\NO_QSGMII_DATA.TXDATA_reg[3]_0 ));
  (* OPT_MODIFIED = "PROPCONST" *) 
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \USE_ROCKET_IO.TXDATA[4]_i_1 
       (.I0(\NO_QSGMII_DATA.TXDATA_reg[4]_0 ),
        .I1(TXDATA[4]),
        .O(D[2]));
  (* OPT_MODIFIED = "PROPCONST" *) 
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \USE_ROCKET_IO.TXDATA[5]_i_1 
       (.I0(TXDATA[5]),
        .I1(\NO_QSGMII_DATA.TXDATA_reg[4]_0 ),
        .O(\NO_QSGMII_DATA.TXDATA_reg[5]_0 ));
  (* OPT_MODIFIED = "PROPCONST" *) 
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \USE_ROCKET_IO.TXDATA[6]_i_1 
       (.I0(TXDATA[6]),
        .I1(\NO_QSGMII_DATA.TXDATA_reg[4]_0 ),
        .O(D[3]));
  (* OPT_MODIFIED = "PROPCONST" *) 
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \USE_ROCKET_IO.TXDATA[7]_i_2 
       (.I0(TXDATA[7]),
        .I1(\NO_QSGMII_DATA.TXDATA_reg[4]_0 ),
        .O(\NO_QSGMII_DATA.TXDATA_reg[7]_0 ));
  LUT3 #(
    .INIT(8'hEA)) 
    V_i_1
       (.I0(V_i_2_n_0),
        .I1(S),
        .I2(V),
        .O(V_i_1_n_0));
  LUT5 #(
    .INIT(32'h8888A8AA)) 
    V_i_2
       (.I0(XMIT_DATA_INT_reg_n_0),
        .I1(V_i_3_n_0),
        .I2(V_i_4_n_0),
        .I3(V_i_5_n_0),
        .I4(V_i_6_n_0),
        .O(V_i_2_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    V_i_3
       (.I0(TX_EN_REG1),
        .I1(TX_ER_REG1),
        .I2(TX_PACKET_REG1),
        .O(V_i_3_n_0));
  LUT6 #(
    .INIT(64'hFFFFDFFFFFFFFFFF)) 
    V_i_4
       (.I0(gmii_txd[2]),
        .I1(gmii_txd[4]),
        .I2(gmii_txd[3]),
        .I3(gmii_txd[0]),
        .I4(gmii_txd[6]),
        .I5(gmii_txd[1]),
        .O(V_i_4_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    V_i_5
       (.I0(gmii_txd[5]),
        .I1(gmii_tx_en),
        .I2(gmii_txd[7]),
        .O(V_i_5_n_0));
  LUT3 #(
    .INIT(8'h5D)) 
    V_i_6
       (.I0(gmii_tx_er),
        .I1(gmii_tx_en),
        .I2(TX_PACKET),
        .O(V_i_6_n_0));
  FDRE #(
    .INIT(1'b0)) 
    V_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(V_i_1_n_0),
        .Q(V),
        .R(\NO_QSGMII_DATA.TXDATA_reg[4]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT3 #(
    .INIT(8'hE0)) 
    XMIT_CONFIG_INT_i_1
       (.I0(TX_EVEN),
        .I1(\CODE_GRP_CNT_reg_n_0_[1] ),
        .I2(XMIT_CONFIG_INT),
        .O(XMIT_CONFIG_INT_i_1_n_0));
  FDSE #(
    .INIT(1'b1)) 
    XMIT_CONFIG_INT_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(XMIT_CONFIG_INT_i_1_n_0),
        .Q(XMIT_CONFIG_INT),
        .S(\NO_QSGMII_DATA.TXDATA_reg[4]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT3 #(
    .INIT(8'hF1)) 
    XMIT_DATA_INT_i_1
       (.I0(\CODE_GRP_CNT_reg_n_0_[1] ),
        .I1(TX_EVEN),
        .I2(XMIT_DATA_INT_reg_n_0),
        .O(XMIT_DATA_INT_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    XMIT_DATA_INT_reg
       (.C(userclk2),
        .CE(1'b1),
        .D(XMIT_DATA_INT_i_1_n_0),
        .Q(XMIT_DATA_INT_reg_n_0),
        .R(\NO_QSGMII_DATA.TXDATA_reg[4]_0 ));
endmodule

(* B_SHIFTER_ADDR = "10'b0101010000" *) (* C_1588 = "0" *) (* C_2_5G = "FALSE" *) 
(* C_COMPONENT_NAME = "gig_ethernet_pcs_pma_0" *) (* C_DYNAMIC_SWITCHING = "FALSE" *) (* C_ELABORATION_TRANSIENT_DIR = "BlankString" *) 
(* C_FAMILY = "artix7" *) (* C_HAS_AN = "FALSE" *) (* C_HAS_AXIL = "FALSE" *) 
(* C_HAS_MDIO = "FALSE" *) (* C_HAS_TEMAC = "TRUE" *) (* C_IS_SGMII = "TRUE" *) 
(* C_RX_GMII_CLK = "TXOUTCLK" *) (* C_SGMII_FABRIC_BUFFER = "TRUE" *) (* C_SGMII_PHY_MODE = "FALSE" *) 
(* C_USE_LVDS = "FALSE" *) (* C_USE_TBI = "FALSE" *) (* C_USE_TRANSCEIVER = "TRUE" *) 
(* DowngradeIPIdentifiedWarnings = "yes" *) (* GT_RX_BYTE_WIDTH = "1" *) (* ORIG_REF_NAME = "gig_ethernet_pcs_pma_v16_2_0" *) 
module gig_ethernet_pcs_pma_0_gig_ethernet_pcs_pma_v16_2_0
   (reset,
    signal_detect,
    link_timer_value,
    link_timer_basex,
    link_timer_sgmii,
    rx_gt_nominal_latency,
    speed_is_10_100,
    speed_is_100,
    mgt_rx_reset,
    mgt_tx_reset,
    userclk,
    userclk2,
    dcm_locked,
    rxbufstatus,
    rxchariscomma,
    rxcharisk,
    rxclkcorcnt,
    rxdata,
    rxdisperr,
    rxnotintable,
    rxrundisp,
    txbuferr,
    powerdown,
    txchardispmode,
    txchardispval,
    txcharisk,
    txdata,
    enablealign,
    gtx_clk,
    tx_code_group,
    loc_ref,
    ewrap,
    rx_code_group0,
    rx_code_group1,
    pma_rx_clk0,
    pma_rx_clk1,
    en_cdet,
    gmii_txd,
    gmii_tx_en,
    gmii_tx_er,
    gmii_rxd,
    gmii_rx_dv,
    gmii_rx_er,
    gmii_isolate,
    an_interrupt,
    an_enable,
    speed_selection,
    phyad,
    mdc,
    mdio_in,
    mdio_out,
    mdio_tri,
    an_adv_config_vector,
    an_adv_config_val,
    an_restart_config,
    configuration_vector,
    configuration_valid,
    status_vector,
    basex_or_sgmii,
    drp_dclk,
    drp_req,
    drp_gnt,
    drp_den,
    drp_dwe,
    drp_drdy,
    drp_daddr,
    drp_di,
    drp_do,
    systemtimer_s_field,
    systemtimer_ns_field,
    correction_timer,
    rxrecclk,
    rxphy_s_field,
    rxphy_ns_field,
    rxphy_correction_timer,
    s_axi_aclk,
    s_axi_resetn,
    s_axi_awaddr,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_araddr,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rvalid,
    s_axi_rready,
    reset_done,
    lopt);
  input reset;
  input signal_detect;
  input [9:0]link_timer_value;
  input [9:0]link_timer_basex;
  input [9:0]link_timer_sgmii;
  input [15:0]rx_gt_nominal_latency;
  input speed_is_10_100;
  input speed_is_100;
  output mgt_rx_reset;
  output mgt_tx_reset;
  input userclk;
  input userclk2;
  input dcm_locked;
  input [1:0]rxbufstatus;
  input [0:0]rxchariscomma;
  input [0:0]rxcharisk;
  input [2:0]rxclkcorcnt;
  input [7:0]rxdata;
  input [0:0]rxdisperr;
  input [0:0]rxnotintable;
  input [0:0]rxrundisp;
  input txbuferr;
  output powerdown;
  output txchardispmode;
  output txchardispval;
  output txcharisk;
  output [7:0]txdata;
  output enablealign;
  input gtx_clk;
  output [9:0]tx_code_group;
  output loc_ref;
  output ewrap;
  input [9:0]rx_code_group0;
  input [9:0]rx_code_group1;
  input pma_rx_clk0;
  input pma_rx_clk1;
  output en_cdet;
  input [7:0]gmii_txd;
  input gmii_tx_en;
  input gmii_tx_er;
  output [7:0]gmii_rxd;
  output gmii_rx_dv;
  output gmii_rx_er;
  output gmii_isolate;
  output an_interrupt;
  output an_enable;
  output [1:0]speed_selection;
  input [4:0]phyad;
  input mdc;
  input mdio_in;
  output mdio_out;
  output mdio_tri;
  input [15:0]an_adv_config_vector;
  input an_adv_config_val;
  input an_restart_config;
  input [4:0]configuration_vector;
  input configuration_valid;
  output [15:0]status_vector;
  input basex_or_sgmii;
  input drp_dclk;
  output drp_req;
  input drp_gnt;
  output drp_den;
  output drp_dwe;
  input drp_drdy;
  output [9:0]drp_daddr;
  output [15:0]drp_di;
  input [15:0]drp_do;
  input [47:0]systemtimer_s_field;
  input [31:0]systemtimer_ns_field;
  input [63:0]correction_timer;
  input rxrecclk;
  output [47:0]rxphy_s_field;
  output [31:0]rxphy_ns_field;
  output [63:0]rxphy_correction_timer;
  input s_axi_aclk;
  input s_axi_resetn;
  input [31:0]s_axi_awaddr;
  input s_axi_awvalid;
  output s_axi_awready;
  input [31:0]s_axi_wdata;
  input s_axi_wvalid;
  output s_axi_wready;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [31:0]s_axi_araddr;
  input s_axi_arvalid;
  output s_axi_arready;
  output [31:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rvalid;
  input s_axi_rready;
  input reset_done;
  output lopt;

  wire dcm_locked;
  wire enablealign;
  wire gmii_rx_dv;
  wire gmii_rx_er;
  wire [7:0]gmii_rxd;
  wire gmii_tx_en;
  wire gmii_tx_er;
  wire [7:0]gmii_txd;
  wire lopt;
  wire mgt_rx_reset;
  wire mgt_tx_reset;
  wire reset;
  wire reset_done;
  wire [1:0]rxbufstatus;
  wire [0:0]rxchariscomma;
  wire [0:0]rxcharisk;
  wire [7:0]rxdata;
  wire [0:0]rxdisperr;
  wire [0:0]rxnotintable;
  wire signal_detect;
  wire [15:0]status_vector;
  wire txbuferr;
  wire txchardispmode;
  wire txchardispval;
  wire txcharisk;
  wire [7:0]txdata;
  wire userclk2;
  wire \NLW_gpcs_pma_inst_NO_MANAGEMENT.CONFIGURATION_VECTOR_REG_reg[2]_0_UNCONNECTED ;
  wire \NLW_gpcs_pma_inst_NO_MANAGEMENT.CONFIGURATION_VECTOR_REG_reg[3]_0_UNCONNECTED ;
  wire [2:0]NLW_gpcs_pma_inst_configuration_vector_UNCONNECTED;
  wire [1:0]NLW_gpcs_pma_inst_rxclkcorcnt_UNCONNECTED;
  wire [6:2]NLW_gpcs_pma_inst_status_vector_UNCONNECTED;

  gig_ethernet_pcs_pma_0_GPCS_PMA_GEN gpcs_pma_inst
       (.MGT_RX_RESET(mgt_rx_reset),
        .MGT_TX_RESET(mgt_tx_reset),
        .\NO_MANAGEMENT.CONFIGURATION_VECTOR_REG_reg[2]_0 (\NLW_gpcs_pma_inst_NO_MANAGEMENT.CONFIGURATION_VECTOR_REG_reg[2]_0_UNCONNECTED ),
        .\NO_MANAGEMENT.CONFIGURATION_VECTOR_REG_reg[3]_0 (\NLW_gpcs_pma_inst_NO_MANAGEMENT.CONFIGURATION_VECTOR_REG_reg[3]_0_UNCONNECTED ),
        .configuration_vector(NLW_gpcs_pma_inst_configuration_vector_UNCONNECTED[2:0]),
        .dcm_locked(dcm_locked),
        .enablealign(enablealign),
        .gmii_rx_dv(gmii_rx_dv),
        .gmii_rx_er(gmii_rx_er),
        .gmii_rxd(gmii_rxd),
        .gmii_tx_en(gmii_tx_en),
        .gmii_tx_er(gmii_tx_er),
        .gmii_txd(gmii_txd),
        .lopt(lopt),
        .reset(reset),
        .reset_done(reset_done),
        .rxbufstatus(rxbufstatus[1]),
        .rxchariscomma(rxchariscomma),
        .rxcharisk(rxcharisk),
        .rxclkcorcnt(NLW_gpcs_pma_inst_rxclkcorcnt_UNCONNECTED[1:0]),
        .rxdata(rxdata),
        .rxdisperr(rxdisperr),
        .rxnotintable(rxnotintable),
        .signal_detect(signal_detect),
        .status_vector({NLW_gpcs_pma_inst_status_vector_UNCONNECTED[6:2],status_vector[1:0]}),
        .txbuferr(txbuferr),
        .txchardispmode(txchardispmode),
        .txchardispval(txchardispval),
        .txcharisk(txcharisk),
        .txdata(txdata),
        .userclk2(userclk2));
endmodule

(* ORIG_REF_NAME = "reset_sync_block" *) 
module gig_ethernet_pcs_pma_0_reset_sync_block
   (reset_sync6_0,
    dcm_locked,
    userclk2,
    reset);
  output reset_sync6_0;
  input dcm_locked;
  input userclk2;
  input reset;

  wire dcm_locked;
  wire reset;
  wire reset_out;
  wire reset_sync6_0;
  wire reset_sync_reg1;
  wire reset_sync_reg2;
  wire reset_sync_reg3;
  wire reset_sync_reg4;
  wire reset_sync_reg5;
  wire userclk2;

  LUT2 #(
    .INIT(4'hB)) 
    \MGT_RESET.RESET_INT_PIPE_i_1 
       (.I0(reset_out),
        .I1(dcm_locked),
        .O(reset_sync6_0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync1
       (.C(userclk2),
        .CE(1'b1),
        .D(1'b0),
        .PRE(reset),
        .Q(reset_sync_reg1));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync2
       (.C(userclk2),
        .CE(1'b1),
        .D(reset_sync_reg1),
        .PRE(reset),
        .Q(reset_sync_reg2));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync3
       (.C(userclk2),
        .CE(1'b1),
        .D(reset_sync_reg2),
        .PRE(reset),
        .Q(reset_sync_reg3));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync4
       (.C(userclk2),
        .CE(1'b1),
        .D(reset_sync_reg3),
        .PRE(reset),
        .Q(reset_sync_reg4));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync5
       (.C(userclk2),
        .CE(1'b1),
        .D(reset_sync_reg4),
        .PRE(reset),
        .Q(reset_sync_reg5));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync6
       (.C(userclk2),
        .CE(1'b1),
        .D(reset_sync_reg5),
        .PRE(1'b0),
        .Q(reset_out));
endmodule

(* ORIG_REF_NAME = "sync_block" *) 
module gig_ethernet_pcs_pma_0_sync_block
   (SIGNAL_DETECT_MOD,
    SIGNAL_DETECT_REG_reg,
    signal_detect,
    userclk2);
  output SIGNAL_DETECT_MOD;
  input SIGNAL_DETECT_REG_reg;
  input signal_detect;
  input userclk2;

  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire signal_detect;
  wire userclk2;

  assign SIGNAL_DETECT_MOD = data_out;
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(userclk2),
        .CE(1'b1),
        .D(signal_detect),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(userclk2),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(userclk2),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(userclk2),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(userclk2),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(userclk2),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule
`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "XILINX"
`pragma protect encrypt_agent_info = "Xilinx Encryption Tool 2014"
`pragma protect key_keyowner="Cadence Design Systems.", key_keyname="cds_rsa_key", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=64)
`pragma protect key_block
QHYpbEJrPuvLLQVFI+oYFtJhlJmZi9DjEY8fIulPSd0q1tntkxTypo5HQE64hRUdzzU/BRrS4J3f
KP+Z/98q3A==

`pragma protect key_keyowner="Synopsys", key_keyname="SNPS-VCS-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
oBiteXtWnjIWYLBa+/LJs9C/ixST2/SiP5ujJmIKU1ZPOVbximd65pRHSh8kfm1GBZLAItkp4zlr
hn2gCXrVcWg47qswe4wjWVM3eRJvz9qwPrcrfEOBO7E9STOe0QMBI5AnhDH/iD2DNdXbwx9qa1QG
FOT55tNinwxUYKcB4DI=

`pragma protect key_keyowner="Aldec", key_keyname="ALDEC15_001", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
aRdqo/OnwN2uKBvnFD2KaDnAE2HidP7XD8iG+/N7VxE/KCWFiURhbknGfxff3cnLT9YgE2wdHu7Q
PLesTxC6ZNh+lJeEOSeZrxqRBah6XS6RQ1AJgvh8RZSQpwzkLYgmsP5njD0g9Dl824Q8zV8yQvL1
I3xKkO0fLMQVJq505J0Fmf4XSYUwCwz2ZLtR+s26Is8kfPoThEyjfv6OkfBych7dOd+D3NntNpLC
yj7hTgpSIdsNuhoExEdaDPucI0inYul+FNMG5VupBqRU/w7iz3uBqZNYAhLdCqAg2Da+T2zZsMEb
jM3K56GaaJmL0SK/oklVXQHYYj5eAsNW9CSlxw==

`pragma protect key_keyowner="ATRENTA", key_keyname="ATR-SG-2015-RSA-3", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
G/8TZ1TMCP1P309yryzJGFnwKMzc7BxibQAUKTM1RVblwanw+JoQv3T5IlW+X3q+NvpFAXrf24hs
w4VekKNWuNnvaqQs7tvyRUz7DjrHcDLXkr7xkV9Wckk9mbZ0XPYOp2a6tJQCq1l6DXArutsWFtD5
61GbusWfLj08wMg1Nr/CvoMS53/I9B626pgikTSxkoM2FPC26h53eQde90rXiWW8Hf7kaN7UwunQ
F3HNzVGYFA+oshbeqF+h27qoAoyJBGhNLzojYehdVczr9kwK2GJuIKqHUXuoymMqwAh0T9jjMQGJ
5mOhGntO7YO9LTmRFdTPF+j16BJLQd8GR25zwg==

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VELOCE-RSA", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
A3ME1GTCvU/TPvBwukjS/hBiqrHVCEYpqgmIQ++B827VOKuuEHuJyuPdHkgSTdVc+LJ9pKstTIHT
MlROHQvyuyZTkCDH1FSVvKtC/+1WJtTioNWJwp3DNnSPnyjyG0p9PaZzXXENEflYdH+VDxFEkcOw
j3B7Wu/qtixpfoTbSuI=

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VERIF-SIM-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
ae2Fcnja7ivPeal+p1DZsmfUiG/9kLCidnE+iSf2WxXfFvqVRqfIU732x9osGwysbZSWFEalP+NO
3IMXBFvxoPkKEa2EpNr4TzpeBlgopo1bEc8k/VV9vPs0Kscnr2+sEdLncAZPrZnRpDRWYbR8nnHs
3k+xSH7QgZJPbV4EgEXFWdu1NAa3DkwTP8PiOrMp/j+3ZMdczrcvpnW6vPPlo8Hm/lZP0ILMOcMG
wr2aD1NDIubo8ErN9z74iwW6voSluswpF+C1ijxHrnMPAcgvBYQy6YKuAplDExkbV2m9pkIrHMxy
aYnwrEGsoEERXCzRaUNvERkWDtIONTvgZaKaYA==

`pragma protect key_keyowner="Real Intent", key_keyname="RI-RSA-KEY-1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
NFt4JHMppuvu5pv1NjdMPJpMbqMekQtEKa+nwhqRiDLgL573PS7lJA9sZ+3wUA22vEI3Y72JUs2+
TdnVnv7uj6HDJWEBiwfdUvuZz980KfjbntnN0FDm3rleV3bO2I1Jd6XJ6NB5mO61ISq9fx8Lay7l
W7hAb/nRNLVPHQEcoxCD5jys01mvwV5ibIqMIayVQWwb9Z4EBP+e+sYKCyUpRnJdefB10BISeFn4
RfUDjx+2CcazCgaEodg+AmXBp805eIl/FPUYYGLrZnxQcK0NSW36iq9KyYBu74/Han9P6S8QUmTa
zbZwKKRm08kSQLig/Y09awnpC2k8sMxMlnawqA==

`pragma protect key_keyowner="Metrics Technologies Inc.", key_keyname="DSim", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
o2b9jErBNPhrKKK4Lr0f5HQs007qZOkXg8KloAz+8OuEAcseokqTg9I9IVobsofE1IU9X4eqkzyw
yA1IAUyax90p9FHCLQiZ6eQMUHgJc5thadB94tc9AECcW95n0/PZ6jBPPE7yIbqKPVh3PVVxJsQo
vXT+VJvrrkNAE7XUowiJRbMGNHmHOj9euwQzmV4FiM2pzdXmqBCTpD6adEci3DCsXUCIVDJIyWug
W/FEAuBapiz+0EkBbSXA/TCA1QM0SzIduTlQfwOCWKpDNo6Y/m8IXk5By5UXKoFXQDEOTG8Ya3Ip
jNCHCzjBhbiGOmwcKjm7YZ45uJiVgAiYj5wa1Q==

`pragma protect key_keyowner="Xilinx", key_keyname="xilinxt_2019_11", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
rjz0w54U/23bdQCM+McPKHUlemjYsl7L2xyX1suQPF59zVgXZbDK+Ft28/Xvy+NHsrOtgnk0pz0B
QH7UwWlVASzKYbtnSozlfu+PfihWEgclknXMfaHMtsGDkdhfysMNmNBS2tNt0gKtE1y4eL3rtBYL
uRNU5kl6tDsnQKKRBRtmG4vv8W0yAMLdqeSX/oV9O6gUApJwCgOIzkKgoXQsAu7fnkmjkOlBtcwJ
4BgCiFjw6D6Z5mew9AI1bX2CoKelBksnMxqXfQbEFUcaKh3aGe8aG6BD+S0pZpY36KZXE+KGoH7x
xFXaAHOMIGNib2DsLROF53u3tdOqECqG1VJz1w==

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-PREC-RSA", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
O200SmxMA+WdGVrx+kTG1A7SMsn/XLFkRIKQugiAmTxtykwg/U2ZvHCcb0JSg0DR00uHDvdU1XTi
NUDuFCa7/XZ+UfM+xUM1i3jjoXfV+sr9/XzEH8qLtJ1Vvh0tL3YVhuzYiFQprUYjZSSmATJ5KIpB
P6cO9l9Zm6CR9jxsRUlhSmCzNzxJqWsg91Tv+CqJ4ZQmwMPCnvmXxVO/b0k35ztZ+1kZE8rOZDiP
xxhWh81KGgZc6hz+QCd/7kFOvw9RNENq189fx4cOScUDUno4jOJtjFxpZnE1KSYZSGbuxgu22UT1
GLRWvtp1Mrm29UFl2uFdQ8ZlqQgGvxDb5i0aLg==

`pragma protect key_keyowner="Synplicity", key_keyname="SYNP15_1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
P8S2qxlT2VVLT1eIvnKpq2Zb1oeKkJZ68SIJ3WKXP1O26O8k9If2BLwkiZkt6fbQqQYXBoZuQWGX
pa9qGSjnAyVBE773YkH4cWwoRaiNBetgJXPwFkdJq5kdMh0dAqRfx9QXPFuDCIm43zv2l8MHGw2Q
n9YijMbn1wiCcs+7iSRfAf8lM82ray5TpkRAzxEYk1DcQDj9X/MHkXDj4ZMKISBPD7h+ybRffhta
Zhz+DXILn6bpz/hqauxrFMjUuc8WOF/FLduXuTw62dsOrDJXp6jMPh9dVxR+q+yk2E6dlzxV6PCc
nv7H3qusBTMs2ESVBURqNb+lyNoG9QVJoNJbjA==

`pragma protect data_method = "AES128-CBC"
`pragma protect encoding = (enctype = "BASE64", line_length = 76, bytes = 319968)
`pragma protect data_block
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
EheQeQABytfBCuIv4Uu/mc7+VMsr4DMWZrkg
`pragma protect end_protected
`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "XILINX"
`pragma protect encrypt_agent_info = "Xilinx Encryption Tool 2014"
`pragma protect key_keyowner="Cadence Design Systems.", key_keyname="cds_rsa_key", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=64)
`pragma protect key_block
IyCaF6+6roRR/z73FG9YaF0d7dULyJHX+GoNBLXm93HBP9lCLRfrto6vEw3iGCXzK5VqUo8LUzXz
LNIjSmykCQ==

`pragma protect key_keyowner="Synopsys", key_keyname="SNPS-VCS-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
Ars/zU9oYJUMCyRasaGmgdFnCUXaN3o1oQ0fks4+dXZBJExbjObt0eQ4bTm1Oe0kx7bwkjVYQOv+
UQ7LSA8+pLx+dSrw76W+fhwmbjv8NHk8HXyQr62gS6pGtiXKgK736w7+XTNBA1vQ12Yb/XlI+UNz
IEXEAHZPmFtNRS82+9s=

`pragma protect key_keyowner="Aldec", key_keyname="ALDEC15_001", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
ypT22bO1Sgj7GXF62sjMcbzRg1ae280bxZhy4N2bQAjzULe/jSsJYy+PGhgDbzqrDKTpXiyDtZkt
oD02eLDdRTGllWcMLfmAbMcheBPHnKTXt9HAhXv063PgOy3UnY+4gioTKkh80haiBvLJgatSPifi
YQpeTG2uJk2s6avI9DDuJWf5ytesbOIq8rdjhkKeFXOVJkRrosfyEugTvccoc1Vbfz7A4F2wgM+D
zQAdcf6ITFXwFESPDeWg0jBH/8FT/oGTumoj/JU8XybS9R37MtI+EqSG5OCB5UPfR7kygCRxMdqx
w9C2YvXXr8F4xw6pVMAzGqjHHzZitlsy10wY2A==

`pragma protect key_keyowner="ATRENTA", key_keyname="ATR-SG-2015-RSA-3", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
iUt+lAN3QxnHPLXCGVB/8iLwL0mQDxrC2eKEtZRQ3tSttWm8FZZIS+L6sXzOYBFdcvxa9yav+Skk
gH0KYhQwN9nPnbBmvq+pv0OWmlNAuJl9BKYeCRvvHDm6ZFmplDtVldoTwk3H3W89FxmDdhSnrp8p
y+EZ4Sey0JKCjHzhKDLb9aiV4K1RcLnUYIHkxt5NRemjZPNHJtaHYmmTYfrufApExkwl0g97mMJh
/9bAzlLXFYd5iRY8cWYOanmNtNy8XdgpYQ9x9FO0bReaxTyYk8KeTd2hcuaOnipXIq1dnLyNcsQ3
oacpKj3c+OCD0yKkipipeAUExSzqLkMixzBzew==

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VELOCE-RSA", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
JjEJ4N/hIu1WBDUjIMq9s1GMccDmtrtckrJO9KM4FgsQ0FVnrvs7XLEtH7w3vJEH6mnZFK6gx+Zp
Z6sD/j5+c1FsEF5qvoz8DFaJv1SA0e6R+wJt9JWLiNHRgEY4FWJuMy4GeEzK+JXZXpK3GXkLR7a+
1Q6HsnbRSckp2PGMKP0=

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VERIF-SIM-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
KZqHvWv65FrttYAd5GXAxNF6M7H4sPlwsazq1nKQJNzvqECgNuEcm+ZAEJdmD/ayAjxuoA6PeUTI
0DfZA6W/dyVpZBZL701cNaCalR4P8jm9gUNIdKoK9h5ACM0wpchU/5peA9dkp8Q71W1JfJhVf6wV
Pfq6P6zpkxEHamzXVJgMfDIbIUtVkFo5jpozvANXGvZy4NvDF+IkDqh9n1WhJSFw2vSTSWwOc6Os
YPCyiHHgK6fUeo5HsDm8nUZX9YA0YMDCcn+IsvxAoCbVnB8MyuhCLYXxAuS9RlY1JV6hAzEQMCpq
3UPMC6tAiYJyvnJO2Ue+HpfWovjSQbxzMY99PA==

`pragma protect key_keyowner="Real Intent", key_keyname="RI-RSA-KEY-1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
vdoPlvKWn5Ji3Xo88zOn99MOAqtEoxjAhuAza+l5LAfqRqsliwhzcGFkAJK4ugd9gKm/M3nHnHPi
/PzAE8cF+f+Utbn8D4EMwG4W0Hif+wOLC02e4qH1wSqAV6WWUm8H7NgadjCJBzXMdZZG7gjGozFv
hvjCKrn45bL0EmR7wl2Q8vZe6J7uihKTYiousdVwB8VF1FLUjPpp6Af2cQmPK82eSrVw0IFHIKqJ
Y/a7ujGEnXPRmoENXb8yibx2IfMb6P5x8SvBxbWHb/Z6q10od4kw4eQyCm6rPn5iaTS1SDweCTJ2
LVJYDuUcJm0TAZrXENpQQfojrfHxe1bol/kUPg==

`pragma protect key_keyowner="Xilinx", key_keyname="xilinxt_2019_11", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
lmo1O/nWVfjvEnWKtJ3RCiwGaUnm3M24qPwY+KlvzkKo4sOFoccG5hcg/sL3BguT2Fqs6upec+/P
lgkR9EpxAHK53ySSYK2Gk+/zJ6wPEAQODMbLtASGTteC4atByoS7g+bnqTV2RCzwQJ8IeLVm63oC
q/A1HmQVWMT63Dha7RRPAWhUKfbQ6Gcxxbrt178CMgNEF8fK64fGKwpKWWGSTZdOuCI6JYCt31CH
jLLgd8XhBzNkjXVlUX1wvTnpXb+ZIkY6TeEL8T+DC3/ZFeM7LEjbf1gPEnDR55V2FW99uqAyh9B+
/sRPnmh44cDlw55G3HMOOIAM5c5/ybP6C+lmBw==

`pragma protect key_keyowner="Metrics Technologies Inc.", key_keyname="DSim", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
ByXNDvTKDI6gFflyODyOtNqLQFU3tDtRuDnI1QTYGEkfXSRy0PtPqdzLUwZOdH6S+7qVRr5I7hia
BIzMOSTXTbSUeFMET0ea5G6/osyZGxD3vhMq5mc07fbIvonlLCBhXZc9zsxWxmrQIUImWH2twnpK
slu9Wg50/fudlPoBjMVmVGo1w8qzoBi/BwnTzF3og4Q8HdJMlsbKVZ96oAGGsWVhVVGjpde8xZC+
GvqB6jQ2vMmNZJNkyZ47uC4C7nyRet9HhKhT7lFrpKi/HydIDNj30XFaozPxFCtHrnxgGQ0dtM+E
UDFL1fGQBdh4xbe+5S2zrlJKxZ83MLUKUmpM6w==

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-PREC-RSA", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
l7UGsULmwSwOgd+LPKBod4femtEpn3OLV/ecxxinFzD9yda1Z2B3aQyRLrvPMyTfcSDbnNC2zwI7
2qtq9na//mdH6bASrbT7l1uX1wKyV+JSberg7p64COFV+7maAEFJaErWTrTmKECaLtLpdnBJeCTs
oNaqWvfCxmMGwF78t3EOqZrkxqV2esM+ioajTqs5nbOt0cH5afUGrVvP3jLqyg3Z9rYoW2MIdG0Q
eBzlNCQRUJS6HwAwi0C8njx4DEnSDVAAi7552aOpidCCC4YbhWBrGCj8+f4AkmLRGhzqeG8BYNLl
bMsIygpjtK20I9nWyPXXc/kced4yMfRsnPskmQ==

`pragma protect key_keyowner="Synplicity", key_keyname="SYNP15_1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
1jT/dji1R2x/TkDZgEzExLhQAXu9SVNYC7yJU2r7XqHH+lEp8FOjUU9M/2NBLmjAnn3rt+cHWYqY
W0M8QgDbW+DJyuEvPV48x12dWcTSgcFYBRHSgdCfDDi2LmW5bOoYFB1IxxpJeCCV/AFiWRXigVcN
AkX1JZITlrVilzK+dxVCLyzbrg5tKsBhVvEawScscyHP6g/pdQb5FNiynbPoy/IhewCp/uDJHcwH
5jKhwauWqvHI3p1S7yzy4mxJlKqwHnql3sX9lmeUyPQ6XBgo3NSX8juIQjFRA1mSHkt5KHpRccZX
iHqvqtxq3lnNz7xia4OED+D8kOE1JKbmBhIDPA==

`pragma protect data_method = "AES128-CBC"
`pragma protect encoding = (enctype = "BASE64", line_length = 76, bytes = 422176)
`pragma protect data_block
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
`pragma protect end_protected
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;
    parameter GRES_WIDTH = 10000;
    parameter GRES_START = 10000;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    wire GRESTORE;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;
    reg GRESTORE_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;
    assign (strong1, weak0) GRESTORE = GRESTORE_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

    initial begin 
	GRESTORE_int = 1'b0;
	#(GRES_START);
	GRESTORE_int = 1'b1;
	#(GRES_WIDTH);
	GRESTORE_int = 1'b0;
    end

endmodule
`endif
